# source: http://localhost:8080/v1alpha1/graphql
# timestamp: Wed Mar 06 2019 22:48:31 GMT+0100 (Central European Standard Time)

schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""
columns and relationships of "audio"
"""
type audio {
  createdAt: timestamptz
  id: numeric!
  name: String

  """An object relationship"""
  projectByProjectId: project
  project_id: numeric
  updatedAt: timestamptz
}

"""
aggregated selection of "audio"
"""
type audio_aggregate {
  aggregate: audio_aggregate_fields
  nodes: [audio!]!
}

"""
aggregate fields of "audio"
"""
type audio_aggregate_fields {
  avg: audio_avg_fields
  count(columns: [audio_select_column!], distinct: Boolean): Int
  max: audio_max_fields
  min: audio_min_fields
  stddev: audio_stddev_fields
  stddev_pop: audio_stddev_pop_fields
  stddev_samp: audio_stddev_samp_fields
  sum: audio_sum_fields
  var_pop: audio_var_pop_fields
  var_samp: audio_var_samp_fields
  variance: audio_variance_fields
}

"""
order by aggregate values of table "audio"
"""
input audio_aggregate_order_by {
  avg: audio_avg_order_by
  count: order_by
  max: audio_max_order_by
  min: audio_min_order_by
  stddev: audio_stddev_order_by
  stddev_pop: audio_stddev_pop_order_by
  stddev_samp: audio_stddev_samp_order_by
  sum: audio_sum_order_by
  var_pop: audio_var_pop_order_by
  var_samp: audio_var_samp_order_by
  variance: audio_variance_order_by
}

"""
input type for inserting array relation for remote table "audio"
"""
input audio_arr_rel_insert_input {
  data: [audio_insert_input!]!
  on_conflict: audio_on_conflict
}

"""aggregate avg on columns"""
type audio_avg_fields {
  id: Float
  project_id: Float
}

"""
order by avg() on columns of table "audio"
"""
input audio_avg_order_by {
  id: order_by
  project_id: order_by
}

"""
Boolean expression to filter rows from the table "audio". All fields are combined with a logical 'AND'.
"""
input audio_bool_exp {
  _and: [audio_bool_exp]
  _not: audio_bool_exp
  _or: [audio_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: numeric_comparison_exp
  name: text_comparison_exp
  projectByProjectId: project_bool_exp
  project_id: numeric_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "audio"
"""
enum audio_constraint {
  """unique or primary key constraint"""
  audio_pkey
}

"""
input type for inserting data into table "audio"
"""
input audio_insert_input {
  createdAt: timestamptz
  id: numeric
  name: String
  projectByProjectId: project_obj_rel_insert_input
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type audio_max_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by max() on columns of table "audio"
"""
input audio_max_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type audio_min_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by min() on columns of table "audio"
"""
input audio_min_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "audio"
"""
type audio_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [audio!]!
}

"""
input type for inserting object relation for remote table "audio"
"""
input audio_obj_rel_insert_input {
  data: audio_insert_input!
  on_conflict: audio_on_conflict
}

"""
on conflict condition type for table "audio"
"""
input audio_on_conflict {
  constraint: audio_constraint!
  update_columns: [audio_update_column!]!
}

"""
ordering options when selecting data from "audio"
"""
input audio_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  projectByProjectId: project_order_by
  project_id: order_by
  updatedAt: order_by
}

"""
select columns of table "audio"
"""
enum audio_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""
input type for updating data in table "audio"
"""
input audio_set_input {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type audio_stddev_fields {
  id: Float
  project_id: Float
}

"""
order by stddev() on columns of table "audio"
"""
input audio_stddev_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_pop on columns"""
type audio_stddev_pop_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_pop() on columns of table "audio"
"""
input audio_stddev_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_samp on columns"""
type audio_stddev_samp_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_samp() on columns of table "audio"
"""
input audio_stddev_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate sum on columns"""
type audio_sum_fields {
  id: numeric
  project_id: numeric
}

"""
order by sum() on columns of table "audio"
"""
input audio_sum_order_by {
  id: order_by
  project_id: order_by
}

"""
update columns of table "audio"
"""
enum audio_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type audio_var_pop_fields {
  id: Float
  project_id: Float
}

"""
order by var_pop() on columns of table "audio"
"""
input audio_var_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate var_samp on columns"""
type audio_var_samp_fields {
  id: Float
  project_id: Float
}

"""
order by var_samp() on columns of table "audio"
"""
input audio_var_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate variance on columns"""
type audio_variance_fields {
  id: Float
  project_id: Float
}

"""
order by variance() on columns of table "audio"
"""
input audio_variance_order_by {
  id: order_by
  project_id: order_by
}

"""
columns and relationships of "color"
"""
type color {
  """An object relationship"""
  colorFormatByColorFormatId: colorFormat
  colorFormat_id: numeric

  """An object relationship"""
  colorGroupByColorGroupId: colorGroup
  colorGroup_id: numeric

  """An array relationship"""
  colorToColorSetsByColorId(
    """distinct select on columns"""
    distinct_on: [colorToColorSet_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorToColorSet_order_by!]

    """filter the rows returned"""
    where: colorToColorSet_bool_exp
  ): [colorToColorSet!]!

  """An aggregated array relationship"""
  colorToColorSetsByColorId_aggregate(
    """distinct select on columns"""
    distinct_on: [colorToColorSet_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorToColorSet_order_by!]

    """filter the rows returned"""
    where: colorToColorSet_bool_exp
  ): colorToColorSet_aggregate!
  id: numeric!
  name: String
  value: String
}

"""
aggregated selection of "color"
"""
type color_aggregate {
  aggregate: color_aggregate_fields
  nodes: [color!]!
}

"""
aggregate fields of "color"
"""
type color_aggregate_fields {
  avg: color_avg_fields
  count(columns: [color_select_column!], distinct: Boolean): Int
  max: color_max_fields
  min: color_min_fields
  stddev: color_stddev_fields
  stddev_pop: color_stddev_pop_fields
  stddev_samp: color_stddev_samp_fields
  sum: color_sum_fields
  var_pop: color_var_pop_fields
  var_samp: color_var_samp_fields
  variance: color_variance_fields
}

"""
order by aggregate values of table "color"
"""
input color_aggregate_order_by {
  avg: color_avg_order_by
  count: order_by
  max: color_max_order_by
  min: color_min_order_by
  stddev: color_stddev_order_by
  stddev_pop: color_stddev_pop_order_by
  stddev_samp: color_stddev_samp_order_by
  sum: color_sum_order_by
  var_pop: color_var_pop_order_by
  var_samp: color_var_samp_order_by
  variance: color_variance_order_by
}

"""
input type for inserting array relation for remote table "color"
"""
input color_arr_rel_insert_input {
  data: [color_insert_input!]!
  on_conflict: color_on_conflict
}

"""aggregate avg on columns"""
type color_avg_fields {
  colorFormat_id: Float
  colorGroup_id: Float
  id: Float
}

"""
order by avg() on columns of table "color"
"""
input color_avg_order_by {
  colorFormat_id: order_by
  colorGroup_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "color". All fields are combined with a logical 'AND'.
"""
input color_bool_exp {
  _and: [color_bool_exp]
  _not: color_bool_exp
  _or: [color_bool_exp]
  colorFormatByColorFormatId: colorFormat_bool_exp
  colorFormat_id: numeric_comparison_exp
  colorGroupByColorGroupId: colorGroup_bool_exp
  colorGroup_id: numeric_comparison_exp
  colorToColorSetsByColorId: colorToColorSet_bool_exp
  id: numeric_comparison_exp
  name: text_comparison_exp
  value: text_comparison_exp
}

"""
unique or primary key constraints on table "color"
"""
enum color_constraint {
  """unique or primary key constraint"""
  color_pkey
}

"""
input type for inserting data into table "color"
"""
input color_insert_input {
  colorFormatByColorFormatId: colorFormat_obj_rel_insert_input
  colorFormat_id: numeric
  colorGroupByColorGroupId: colorGroup_obj_rel_insert_input
  colorGroup_id: numeric
  colorToColorSetsByColorId: colorToColorSet_arr_rel_insert_input
  id: numeric
  name: String
  value: String
}

"""aggregate max on columns"""
type color_max_fields {
  colorFormat_id: numeric
  colorGroup_id: numeric
  id: numeric
  name: String
  value: String
}

"""
order by max() on columns of table "color"
"""
input color_max_order_by {
  colorFormat_id: order_by
  colorGroup_id: order_by
  id: order_by
  name: order_by
  value: order_by
}

"""aggregate min on columns"""
type color_min_fields {
  colorFormat_id: numeric
  colorGroup_id: numeric
  id: numeric
  name: String
  value: String
}

"""
order by min() on columns of table "color"
"""
input color_min_order_by {
  colorFormat_id: order_by
  colorGroup_id: order_by
  id: order_by
  name: order_by
  value: order_by
}

"""
response of any mutation on the table "color"
"""
type color_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [color!]!
}

"""
input type for inserting object relation for remote table "color"
"""
input color_obj_rel_insert_input {
  data: color_insert_input!
  on_conflict: color_on_conflict
}

"""
on conflict condition type for table "color"
"""
input color_on_conflict {
  constraint: color_constraint!
  update_columns: [color_update_column!]!
}

"""
ordering options when selecting data from "color"
"""
input color_order_by {
  colorFormatByColorFormatId: colorFormat_order_by
  colorFormat_id: order_by
  colorGroupByColorGroupId: colorGroup_order_by
  colorGroup_id: order_by
  colorToColorSetsByColorId_aggregate: colorToColorSet_aggregate_order_by
  id: order_by
  name: order_by
  value: order_by
}

"""
select columns of table "color"
"""
enum color_select_column {
  """column name"""
  colorFormat_id

  """column name"""
  colorGroup_id

  """column name"""
  id

  """column name"""
  name

  """column name"""
  value
}

"""
input type for updating data in table "color"
"""
input color_set_input {
  colorFormat_id: numeric
  colorGroup_id: numeric
  id: numeric
  name: String
  value: String
}

"""aggregate stddev on columns"""
type color_stddev_fields {
  colorFormat_id: Float
  colorGroup_id: Float
  id: Float
}

"""
order by stddev() on columns of table "color"
"""
input color_stddev_order_by {
  colorFormat_id: order_by
  colorGroup_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type color_stddev_pop_fields {
  colorFormat_id: Float
  colorGroup_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "color"
"""
input color_stddev_pop_order_by {
  colorFormat_id: order_by
  colorGroup_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type color_stddev_samp_fields {
  colorFormat_id: Float
  colorGroup_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "color"
"""
input color_stddev_samp_order_by {
  colorFormat_id: order_by
  colorGroup_id: order_by
  id: order_by
}

"""aggregate sum on columns"""
type color_sum_fields {
  colorFormat_id: numeric
  colorGroup_id: numeric
  id: numeric
}

"""
order by sum() on columns of table "color"
"""
input color_sum_order_by {
  colorFormat_id: order_by
  colorGroup_id: order_by
  id: order_by
}

"""
update columns of table "color"
"""
enum color_update_column {
  """column name"""
  colorFormat_id

  """column name"""
  colorGroup_id

  """column name"""
  id

  """column name"""
  name

  """column name"""
  value
}

"""aggregate var_pop on columns"""
type color_var_pop_fields {
  colorFormat_id: Float
  colorGroup_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "color"
"""
input color_var_pop_order_by {
  colorFormat_id: order_by
  colorGroup_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type color_var_samp_fields {
  colorFormat_id: Float
  colorGroup_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "color"
"""
input color_var_samp_order_by {
  colorFormat_id: order_by
  colorGroup_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type color_variance_fields {
  colorFormat_id: Float
  colorGroup_id: Float
  id: Float
}

"""
order by variance() on columns of table "color"
"""
input color_variance_order_by {
  colorFormat_id: order_by
  colorGroup_id: order_by
  id: order_by
}

"""
columns and relationships of "colorFormat"
"""
type colorFormat {
  """An array relationship"""
  colorsByColorFormatId(
    """distinct select on columns"""
    distinct_on: [color_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [color_order_by!]

    """filter the rows returned"""
    where: color_bool_exp
  ): [color!]!

  """An aggregated array relationship"""
  colorsByColorFormatId_aggregate(
    """distinct select on columns"""
    distinct_on: [color_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [color_order_by!]

    """filter the rows returned"""
    where: color_bool_exp
  ): color_aggregate!
  id: numeric!
  name: String
}

"""
aggregated selection of "colorFormat"
"""
type colorFormat_aggregate {
  aggregate: colorFormat_aggregate_fields
  nodes: [colorFormat!]!
}

"""
aggregate fields of "colorFormat"
"""
type colorFormat_aggregate_fields {
  avg: colorFormat_avg_fields
  count(columns: [colorFormat_select_column!], distinct: Boolean): Int
  max: colorFormat_max_fields
  min: colorFormat_min_fields
  stddev: colorFormat_stddev_fields
  stddev_pop: colorFormat_stddev_pop_fields
  stddev_samp: colorFormat_stddev_samp_fields
  sum: colorFormat_sum_fields
  var_pop: colorFormat_var_pop_fields
  var_samp: colorFormat_var_samp_fields
  variance: colorFormat_variance_fields
}

"""
order by aggregate values of table "colorFormat"
"""
input colorFormat_aggregate_order_by {
  avg: colorFormat_avg_order_by
  count: order_by
  max: colorFormat_max_order_by
  min: colorFormat_min_order_by
  stddev: colorFormat_stddev_order_by
  stddev_pop: colorFormat_stddev_pop_order_by
  stddev_samp: colorFormat_stddev_samp_order_by
  sum: colorFormat_sum_order_by
  var_pop: colorFormat_var_pop_order_by
  var_samp: colorFormat_var_samp_order_by
  variance: colorFormat_variance_order_by
}

"""
input type for inserting array relation for remote table "colorFormat"
"""
input colorFormat_arr_rel_insert_input {
  data: [colorFormat_insert_input!]!
  on_conflict: colorFormat_on_conflict
}

"""aggregate avg on columns"""
type colorFormat_avg_fields {
  id: Float
}

"""
order by avg() on columns of table "colorFormat"
"""
input colorFormat_avg_order_by {
  id: order_by
}

"""
Boolean expression to filter rows from the table "colorFormat". All fields are combined with a logical 'AND'.
"""
input colorFormat_bool_exp {
  _and: [colorFormat_bool_exp]
  _not: colorFormat_bool_exp
  _or: [colorFormat_bool_exp]
  colorsByColorFormatId: color_bool_exp
  id: numeric_comparison_exp
  name: text_comparison_exp
}

"""
unique or primary key constraints on table "colorFormat"
"""
enum colorFormat_constraint {
  """unique or primary key constraint"""
  colorFormat_pkey
}

"""
input type for inserting data into table "colorFormat"
"""
input colorFormat_insert_input {
  colorsByColorFormatId: color_arr_rel_insert_input
  id: numeric
  name: String
}

"""aggregate max on columns"""
type colorFormat_max_fields {
  id: numeric
  name: String
}

"""
order by max() on columns of table "colorFormat"
"""
input colorFormat_max_order_by {
  id: order_by
  name: order_by
}

"""aggregate min on columns"""
type colorFormat_min_fields {
  id: numeric
  name: String
}

"""
order by min() on columns of table "colorFormat"
"""
input colorFormat_min_order_by {
  id: order_by
  name: order_by
}

"""
response of any mutation on the table "colorFormat"
"""
type colorFormat_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [colorFormat!]!
}

"""
input type for inserting object relation for remote table "colorFormat"
"""
input colorFormat_obj_rel_insert_input {
  data: colorFormat_insert_input!
  on_conflict: colorFormat_on_conflict
}

"""
on conflict condition type for table "colorFormat"
"""
input colorFormat_on_conflict {
  constraint: colorFormat_constraint!
  update_columns: [colorFormat_update_column!]!
}

"""
ordering options when selecting data from "colorFormat"
"""
input colorFormat_order_by {
  colorsByColorFormatId_aggregate: color_aggregate_order_by
  id: order_by
  name: order_by
}

"""
select columns of table "colorFormat"
"""
enum colorFormat_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""
input type for updating data in table "colorFormat"
"""
input colorFormat_set_input {
  id: numeric
  name: String
}

"""aggregate stddev on columns"""
type colorFormat_stddev_fields {
  id: Float
}

"""
order by stddev() on columns of table "colorFormat"
"""
input colorFormat_stddev_order_by {
  id: order_by
}

"""aggregate stddev_pop on columns"""
type colorFormat_stddev_pop_fields {
  id: Float
}

"""
order by stddev_pop() on columns of table "colorFormat"
"""
input colorFormat_stddev_pop_order_by {
  id: order_by
}

"""aggregate stddev_samp on columns"""
type colorFormat_stddev_samp_fields {
  id: Float
}

"""
order by stddev_samp() on columns of table "colorFormat"
"""
input colorFormat_stddev_samp_order_by {
  id: order_by
}

"""aggregate sum on columns"""
type colorFormat_sum_fields {
  id: numeric
}

"""
order by sum() on columns of table "colorFormat"
"""
input colorFormat_sum_order_by {
  id: order_by
}

"""
update columns of table "colorFormat"
"""
enum colorFormat_update_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type colorFormat_var_pop_fields {
  id: Float
}

"""
order by var_pop() on columns of table "colorFormat"
"""
input colorFormat_var_pop_order_by {
  id: order_by
}

"""aggregate var_samp on columns"""
type colorFormat_var_samp_fields {
  id: Float
}

"""
order by var_samp() on columns of table "colorFormat"
"""
input colorFormat_var_samp_order_by {
  id: order_by
}

"""aggregate variance on columns"""
type colorFormat_variance_fields {
  id: Float
}

"""
order by variance() on columns of table "colorFormat"
"""
input colorFormat_variance_order_by {
  id: order_by
}

"""
columns and relationships of "colorGroup"
"""
type colorGroup {
  """An array relationship"""
  colorSetsByColorGroupId(
    """distinct select on columns"""
    distinct_on: [colorSet_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorSet_order_by!]

    """filter the rows returned"""
    where: colorSet_bool_exp
  ): [colorSet!]!

  """An aggregated array relationship"""
  colorSetsByColorGroupId_aggregate(
    """distinct select on columns"""
    distinct_on: [colorSet_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorSet_order_by!]

    """filter the rows returned"""
    where: colorSet_bool_exp
  ): colorSet_aggregate!

  """An array relationship"""
  colorsByColorGroupId(
    """distinct select on columns"""
    distinct_on: [color_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [color_order_by!]

    """filter the rows returned"""
    where: color_bool_exp
  ): [color!]!

  """An aggregated array relationship"""
  colorsByColorGroupId_aggregate(
    """distinct select on columns"""
    distinct_on: [color_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [color_order_by!]

    """filter the rows returned"""
    where: color_bool_exp
  ): color_aggregate!
  id: numeric!
  name: String
}

"""
aggregated selection of "colorGroup"
"""
type colorGroup_aggregate {
  aggregate: colorGroup_aggregate_fields
  nodes: [colorGroup!]!
}

"""
aggregate fields of "colorGroup"
"""
type colorGroup_aggregate_fields {
  avg: colorGroup_avg_fields
  count(columns: [colorGroup_select_column!], distinct: Boolean): Int
  max: colorGroup_max_fields
  min: colorGroup_min_fields
  stddev: colorGroup_stddev_fields
  stddev_pop: colorGroup_stddev_pop_fields
  stddev_samp: colorGroup_stddev_samp_fields
  sum: colorGroup_sum_fields
  var_pop: colorGroup_var_pop_fields
  var_samp: colorGroup_var_samp_fields
  variance: colorGroup_variance_fields
}

"""
order by aggregate values of table "colorGroup"
"""
input colorGroup_aggregate_order_by {
  avg: colorGroup_avg_order_by
  count: order_by
  max: colorGroup_max_order_by
  min: colorGroup_min_order_by
  stddev: colorGroup_stddev_order_by
  stddev_pop: colorGroup_stddev_pop_order_by
  stddev_samp: colorGroup_stddev_samp_order_by
  sum: colorGroup_sum_order_by
  var_pop: colorGroup_var_pop_order_by
  var_samp: colorGroup_var_samp_order_by
  variance: colorGroup_variance_order_by
}

"""
input type for inserting array relation for remote table "colorGroup"
"""
input colorGroup_arr_rel_insert_input {
  data: [colorGroup_insert_input!]!
  on_conflict: colorGroup_on_conflict
}

"""aggregate avg on columns"""
type colorGroup_avg_fields {
  id: Float
}

"""
order by avg() on columns of table "colorGroup"
"""
input colorGroup_avg_order_by {
  id: order_by
}

"""
Boolean expression to filter rows from the table "colorGroup". All fields are combined with a logical 'AND'.
"""
input colorGroup_bool_exp {
  _and: [colorGroup_bool_exp]
  _not: colorGroup_bool_exp
  _or: [colorGroup_bool_exp]
  colorSetsByColorGroupId: colorSet_bool_exp
  colorsByColorGroupId: color_bool_exp
  id: numeric_comparison_exp
  name: text_comparison_exp
}

"""
unique or primary key constraints on table "colorGroup"
"""
enum colorGroup_constraint {
  """unique or primary key constraint"""
  colorGroup_pkey
}

"""
input type for inserting data into table "colorGroup"
"""
input colorGroup_insert_input {
  colorSetsByColorGroupId: colorSet_arr_rel_insert_input
  colorsByColorGroupId: color_arr_rel_insert_input
  id: numeric
  name: String
}

"""aggregate max on columns"""
type colorGroup_max_fields {
  id: numeric
  name: String
}

"""
order by max() on columns of table "colorGroup"
"""
input colorGroup_max_order_by {
  id: order_by
  name: order_by
}

"""aggregate min on columns"""
type colorGroup_min_fields {
  id: numeric
  name: String
}

"""
order by min() on columns of table "colorGroup"
"""
input colorGroup_min_order_by {
  id: order_by
  name: order_by
}

"""
response of any mutation on the table "colorGroup"
"""
type colorGroup_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [colorGroup!]!
}

"""
input type for inserting object relation for remote table "colorGroup"
"""
input colorGroup_obj_rel_insert_input {
  data: colorGroup_insert_input!
  on_conflict: colorGroup_on_conflict
}

"""
on conflict condition type for table "colorGroup"
"""
input colorGroup_on_conflict {
  constraint: colorGroup_constraint!
  update_columns: [colorGroup_update_column!]!
}

"""
ordering options when selecting data from "colorGroup"
"""
input colorGroup_order_by {
  colorSetsByColorGroupId_aggregate: colorSet_aggregate_order_by
  colorsByColorGroupId_aggregate: color_aggregate_order_by
  id: order_by
  name: order_by
}

"""
select columns of table "colorGroup"
"""
enum colorGroup_select_column {
  """column name"""
  id

  """column name"""
  name
}

"""
input type for updating data in table "colorGroup"
"""
input colorGroup_set_input {
  id: numeric
  name: String
}

"""aggregate stddev on columns"""
type colorGroup_stddev_fields {
  id: Float
}

"""
order by stddev() on columns of table "colorGroup"
"""
input colorGroup_stddev_order_by {
  id: order_by
}

"""aggregate stddev_pop on columns"""
type colorGroup_stddev_pop_fields {
  id: Float
}

"""
order by stddev_pop() on columns of table "colorGroup"
"""
input colorGroup_stddev_pop_order_by {
  id: order_by
}

"""aggregate stddev_samp on columns"""
type colorGroup_stddev_samp_fields {
  id: Float
}

"""
order by stddev_samp() on columns of table "colorGroup"
"""
input colorGroup_stddev_samp_order_by {
  id: order_by
}

"""aggregate sum on columns"""
type colorGroup_sum_fields {
  id: numeric
}

"""
order by sum() on columns of table "colorGroup"
"""
input colorGroup_sum_order_by {
  id: order_by
}

"""
update columns of table "colorGroup"
"""
enum colorGroup_update_column {
  """column name"""
  id

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type colorGroup_var_pop_fields {
  id: Float
}

"""
order by var_pop() on columns of table "colorGroup"
"""
input colorGroup_var_pop_order_by {
  id: order_by
}

"""aggregate var_samp on columns"""
type colorGroup_var_samp_fields {
  id: Float
}

"""
order by var_samp() on columns of table "colorGroup"
"""
input colorGroup_var_samp_order_by {
  id: order_by
}

"""aggregate variance on columns"""
type colorGroup_variance_fields {
  id: Float
}

"""
order by variance() on columns of table "colorGroup"
"""
input colorGroup_variance_order_by {
  id: order_by
}

"""
columns and relationships of "colorSet"
"""
type colorSet {
  """An object relationship"""
  colorGroupByColorGroupId: colorGroup
  colorGroup_id: numeric

  """An array relationship"""
  colorToColorSetsByColorSetId(
    """distinct select on columns"""
    distinct_on: [colorToColorSet_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorToColorSet_order_by!]

    """filter the rows returned"""
    where: colorToColorSet_bool_exp
  ): [colorToColorSet!]!

  """An aggregated array relationship"""
  colorToColorSetsByColorSetId_aggregate(
    """distinct select on columns"""
    distinct_on: [colorToColorSet_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorToColorSet_order_by!]

    """filter the rows returned"""
    where: colorToColorSet_bool_exp
  ): colorToColorSet_aggregate!
  id: numeric!
  name: String
}

"""
aggregated selection of "colorSet"
"""
type colorSet_aggregate {
  aggregate: colorSet_aggregate_fields
  nodes: [colorSet!]!
}

"""
aggregate fields of "colorSet"
"""
type colorSet_aggregate_fields {
  avg: colorSet_avg_fields
  count(columns: [colorSet_select_column!], distinct: Boolean): Int
  max: colorSet_max_fields
  min: colorSet_min_fields
  stddev: colorSet_stddev_fields
  stddev_pop: colorSet_stddev_pop_fields
  stddev_samp: colorSet_stddev_samp_fields
  sum: colorSet_sum_fields
  var_pop: colorSet_var_pop_fields
  var_samp: colorSet_var_samp_fields
  variance: colorSet_variance_fields
}

"""
order by aggregate values of table "colorSet"
"""
input colorSet_aggregate_order_by {
  avg: colorSet_avg_order_by
  count: order_by
  max: colorSet_max_order_by
  min: colorSet_min_order_by
  stddev: colorSet_stddev_order_by
  stddev_pop: colorSet_stddev_pop_order_by
  stddev_samp: colorSet_stddev_samp_order_by
  sum: colorSet_sum_order_by
  var_pop: colorSet_var_pop_order_by
  var_samp: colorSet_var_samp_order_by
  variance: colorSet_variance_order_by
}

"""
input type for inserting array relation for remote table "colorSet"
"""
input colorSet_arr_rel_insert_input {
  data: [colorSet_insert_input!]!
  on_conflict: colorSet_on_conflict
}

"""aggregate avg on columns"""
type colorSet_avg_fields {
  colorGroup_id: Float
  id: Float
}

"""
order by avg() on columns of table "colorSet"
"""
input colorSet_avg_order_by {
  colorGroup_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "colorSet". All fields are combined with a logical 'AND'.
"""
input colorSet_bool_exp {
  _and: [colorSet_bool_exp]
  _not: colorSet_bool_exp
  _or: [colorSet_bool_exp]
  colorGroupByColorGroupId: colorGroup_bool_exp
  colorGroup_id: numeric_comparison_exp
  colorToColorSetsByColorSetId: colorToColorSet_bool_exp
  id: numeric_comparison_exp
  name: text_comparison_exp
}

"""
unique or primary key constraints on table "colorSet"
"""
enum colorSet_constraint {
  """unique or primary key constraint"""
  colorSet_pkey
}

"""
input type for inserting data into table "colorSet"
"""
input colorSet_insert_input {
  colorGroupByColorGroupId: colorGroup_obj_rel_insert_input
  colorGroup_id: numeric
  colorToColorSetsByColorSetId: colorToColorSet_arr_rel_insert_input
  id: numeric
  name: String
}

"""aggregate max on columns"""
type colorSet_max_fields {
  colorGroup_id: numeric
  id: numeric
  name: String
}

"""
order by max() on columns of table "colorSet"
"""
input colorSet_max_order_by {
  colorGroup_id: order_by
  id: order_by
  name: order_by
}

"""aggregate min on columns"""
type colorSet_min_fields {
  colorGroup_id: numeric
  id: numeric
  name: String
}

"""
order by min() on columns of table "colorSet"
"""
input colorSet_min_order_by {
  colorGroup_id: order_by
  id: order_by
  name: order_by
}

"""
response of any mutation on the table "colorSet"
"""
type colorSet_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [colorSet!]!
}

"""
input type for inserting object relation for remote table "colorSet"
"""
input colorSet_obj_rel_insert_input {
  data: colorSet_insert_input!
  on_conflict: colorSet_on_conflict
}

"""
on conflict condition type for table "colorSet"
"""
input colorSet_on_conflict {
  constraint: colorSet_constraint!
  update_columns: [colorSet_update_column!]!
}

"""
ordering options when selecting data from "colorSet"
"""
input colorSet_order_by {
  colorGroupByColorGroupId: colorGroup_order_by
  colorGroup_id: order_by
  colorToColorSetsByColorSetId_aggregate: colorToColorSet_aggregate_order_by
  id: order_by
  name: order_by
}

"""
select columns of table "colorSet"
"""
enum colorSet_select_column {
  """column name"""
  colorGroup_id

  """column name"""
  id

  """column name"""
  name
}

"""
input type for updating data in table "colorSet"
"""
input colorSet_set_input {
  colorGroup_id: numeric
  id: numeric
  name: String
}

"""aggregate stddev on columns"""
type colorSet_stddev_fields {
  colorGroup_id: Float
  id: Float
}

"""
order by stddev() on columns of table "colorSet"
"""
input colorSet_stddev_order_by {
  colorGroup_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type colorSet_stddev_pop_fields {
  colorGroup_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "colorSet"
"""
input colorSet_stddev_pop_order_by {
  colorGroup_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type colorSet_stddev_samp_fields {
  colorGroup_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "colorSet"
"""
input colorSet_stddev_samp_order_by {
  colorGroup_id: order_by
  id: order_by
}

"""aggregate sum on columns"""
type colorSet_sum_fields {
  colorGroup_id: numeric
  id: numeric
}

"""
order by sum() on columns of table "colorSet"
"""
input colorSet_sum_order_by {
  colorGroup_id: order_by
  id: order_by
}

"""
update columns of table "colorSet"
"""
enum colorSet_update_column {
  """column name"""
  colorGroup_id

  """column name"""
  id

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type colorSet_var_pop_fields {
  colorGroup_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "colorSet"
"""
input colorSet_var_pop_order_by {
  colorGroup_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type colorSet_var_samp_fields {
  colorGroup_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "colorSet"
"""
input colorSet_var_samp_order_by {
  colorGroup_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type colorSet_variance_fields {
  colorGroup_id: Float
  id: Float
}

"""
order by variance() on columns of table "colorSet"
"""
input colorSet_variance_order_by {
  colorGroup_id: order_by
  id: order_by
}

"""
columns and relationships of "colorToColorSet"
"""
type colorToColorSet {
  """An object relationship"""
  colorByColorId: color

  """An object relationship"""
  colorSetByColorSetId: colorSet
  colorSet_id: numeric
  color_id: numeric
  id: numeric!
}

"""
aggregated selection of "colorToColorSet"
"""
type colorToColorSet_aggregate {
  aggregate: colorToColorSet_aggregate_fields
  nodes: [colorToColorSet!]!
}

"""
aggregate fields of "colorToColorSet"
"""
type colorToColorSet_aggregate_fields {
  avg: colorToColorSet_avg_fields
  count(columns: [colorToColorSet_select_column!], distinct: Boolean): Int
  max: colorToColorSet_max_fields
  min: colorToColorSet_min_fields
  stddev: colorToColorSet_stddev_fields
  stddev_pop: colorToColorSet_stddev_pop_fields
  stddev_samp: colorToColorSet_stddev_samp_fields
  sum: colorToColorSet_sum_fields
  var_pop: colorToColorSet_var_pop_fields
  var_samp: colorToColorSet_var_samp_fields
  variance: colorToColorSet_variance_fields
}

"""
order by aggregate values of table "colorToColorSet"
"""
input colorToColorSet_aggregate_order_by {
  avg: colorToColorSet_avg_order_by
  count: order_by
  max: colorToColorSet_max_order_by
  min: colorToColorSet_min_order_by
  stddev: colorToColorSet_stddev_order_by
  stddev_pop: colorToColorSet_stddev_pop_order_by
  stddev_samp: colorToColorSet_stddev_samp_order_by
  sum: colorToColorSet_sum_order_by
  var_pop: colorToColorSet_var_pop_order_by
  var_samp: colorToColorSet_var_samp_order_by
  variance: colorToColorSet_variance_order_by
}

"""
input type for inserting array relation for remote table "colorToColorSet"
"""
input colorToColorSet_arr_rel_insert_input {
  data: [colorToColorSet_insert_input!]!
  on_conflict: colorToColorSet_on_conflict
}

"""aggregate avg on columns"""
type colorToColorSet_avg_fields {
  colorSet_id: Float
  color_id: Float
  id: Float
}

"""
order by avg() on columns of table "colorToColorSet"
"""
input colorToColorSet_avg_order_by {
  colorSet_id: order_by
  color_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "colorToColorSet". All fields are combined with a logical 'AND'.
"""
input colorToColorSet_bool_exp {
  _and: [colorToColorSet_bool_exp]
  _not: colorToColorSet_bool_exp
  _or: [colorToColorSet_bool_exp]
  colorByColorId: color_bool_exp
  colorSetByColorSetId: colorSet_bool_exp
  colorSet_id: numeric_comparison_exp
  color_id: numeric_comparison_exp
  id: numeric_comparison_exp
}

"""
unique or primary key constraints on table "colorToColorSet"
"""
enum colorToColorSet_constraint {
  """unique or primary key constraint"""
  colorToColorSet_pkey
}

"""
input type for inserting data into table "colorToColorSet"
"""
input colorToColorSet_insert_input {
  colorByColorId: color_obj_rel_insert_input
  colorSetByColorSetId: colorSet_obj_rel_insert_input
  colorSet_id: numeric
  color_id: numeric
  id: numeric
}

"""aggregate max on columns"""
type colorToColorSet_max_fields {
  colorSet_id: numeric
  color_id: numeric
  id: numeric
}

"""
order by max() on columns of table "colorToColorSet"
"""
input colorToColorSet_max_order_by {
  colorSet_id: order_by
  color_id: order_by
  id: order_by
}

"""aggregate min on columns"""
type colorToColorSet_min_fields {
  colorSet_id: numeric
  color_id: numeric
  id: numeric
}

"""
order by min() on columns of table "colorToColorSet"
"""
input colorToColorSet_min_order_by {
  colorSet_id: order_by
  color_id: order_by
  id: order_by
}

"""
response of any mutation on the table "colorToColorSet"
"""
type colorToColorSet_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [colorToColorSet!]!
}

"""
input type for inserting object relation for remote table "colorToColorSet"
"""
input colorToColorSet_obj_rel_insert_input {
  data: colorToColorSet_insert_input!
  on_conflict: colorToColorSet_on_conflict
}

"""
on conflict condition type for table "colorToColorSet"
"""
input colorToColorSet_on_conflict {
  constraint: colorToColorSet_constraint!
  update_columns: [colorToColorSet_update_column!]!
}

"""
ordering options when selecting data from "colorToColorSet"
"""
input colorToColorSet_order_by {
  colorByColorId: color_order_by
  colorSetByColorSetId: colorSet_order_by
  colorSet_id: order_by
  color_id: order_by
  id: order_by
}

"""
select columns of table "colorToColorSet"
"""
enum colorToColorSet_select_column {
  """column name"""
  colorSet_id

  """column name"""
  color_id

  """column name"""
  id
}

"""
input type for updating data in table "colorToColorSet"
"""
input colorToColorSet_set_input {
  colorSet_id: numeric
  color_id: numeric
  id: numeric
}

"""aggregate stddev on columns"""
type colorToColorSet_stddev_fields {
  colorSet_id: Float
  color_id: Float
  id: Float
}

"""
order by stddev() on columns of table "colorToColorSet"
"""
input colorToColorSet_stddev_order_by {
  colorSet_id: order_by
  color_id: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type colorToColorSet_stddev_pop_fields {
  colorSet_id: Float
  color_id: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "colorToColorSet"
"""
input colorToColorSet_stddev_pop_order_by {
  colorSet_id: order_by
  color_id: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type colorToColorSet_stddev_samp_fields {
  colorSet_id: Float
  color_id: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "colorToColorSet"
"""
input colorToColorSet_stddev_samp_order_by {
  colorSet_id: order_by
  color_id: order_by
  id: order_by
}

"""aggregate sum on columns"""
type colorToColorSet_sum_fields {
  colorSet_id: numeric
  color_id: numeric
  id: numeric
}

"""
order by sum() on columns of table "colorToColorSet"
"""
input colorToColorSet_sum_order_by {
  colorSet_id: order_by
  color_id: order_by
  id: order_by
}

"""
update columns of table "colorToColorSet"
"""
enum colorToColorSet_update_column {
  """column name"""
  colorSet_id

  """column name"""
  color_id

  """column name"""
  id
}

"""aggregate var_pop on columns"""
type colorToColorSet_var_pop_fields {
  colorSet_id: Float
  color_id: Float
  id: Float
}

"""
order by var_pop() on columns of table "colorToColorSet"
"""
input colorToColorSet_var_pop_order_by {
  colorSet_id: order_by
  color_id: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type colorToColorSet_var_samp_fields {
  colorSet_id: Float
  color_id: Float
  id: Float
}

"""
order by var_samp() on columns of table "colorToColorSet"
"""
input colorToColorSet_var_samp_order_by {
  colorSet_id: order_by
  color_id: order_by
  id: order_by
}

"""aggregate variance on columns"""
type colorToColorSet_variance_fields {
  colorSet_id: Float
  color_id: Float
  id: Float
}

"""
order by variance() on columns of table "colorToColorSet"
"""
input colorToColorSet_variance_order_by {
  colorSet_id: order_by
  color_id: order_by
  id: order_by
}

"""
columns and relationships of "component"
"""
type component {
  createdAt: timestamptz
  id: numeric!
  name: String

  """An object relationship"""
  projectByProjectId: project
  project_id: numeric
  updatedAt: timestamptz
}

"""
aggregated selection of "component"
"""
type component_aggregate {
  aggregate: component_aggregate_fields
  nodes: [component!]!
}

"""
aggregate fields of "component"
"""
type component_aggregate_fields {
  avg: component_avg_fields
  count(columns: [component_select_column!], distinct: Boolean): Int
  max: component_max_fields
  min: component_min_fields
  stddev: component_stddev_fields
  stddev_pop: component_stddev_pop_fields
  stddev_samp: component_stddev_samp_fields
  sum: component_sum_fields
  var_pop: component_var_pop_fields
  var_samp: component_var_samp_fields
  variance: component_variance_fields
}

"""
order by aggregate values of table "component"
"""
input component_aggregate_order_by {
  avg: component_avg_order_by
  count: order_by
  max: component_max_order_by
  min: component_min_order_by
  stddev: component_stddev_order_by
  stddev_pop: component_stddev_pop_order_by
  stddev_samp: component_stddev_samp_order_by
  sum: component_sum_order_by
  var_pop: component_var_pop_order_by
  var_samp: component_var_samp_order_by
  variance: component_variance_order_by
}

"""
input type for inserting array relation for remote table "component"
"""
input component_arr_rel_insert_input {
  data: [component_insert_input!]!
  on_conflict: component_on_conflict
}

"""aggregate avg on columns"""
type component_avg_fields {
  id: Float
  project_id: Float
}

"""
order by avg() on columns of table "component"
"""
input component_avg_order_by {
  id: order_by
  project_id: order_by
}

"""
Boolean expression to filter rows from the table "component". All fields are combined with a logical 'AND'.
"""
input component_bool_exp {
  _and: [component_bool_exp]
  _not: component_bool_exp
  _or: [component_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: numeric_comparison_exp
  name: text_comparison_exp
  projectByProjectId: project_bool_exp
  project_id: numeric_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "component"
"""
enum component_constraint {
  """unique or primary key constraint"""
  component_pkey
}

"""
input type for inserting data into table "component"
"""
input component_insert_input {
  createdAt: timestamptz
  id: numeric
  name: String
  projectByProjectId: project_obj_rel_insert_input
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type component_max_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by max() on columns of table "component"
"""
input component_max_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type component_min_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by min() on columns of table "component"
"""
input component_min_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "component"
"""
type component_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [component!]!
}

"""
input type for inserting object relation for remote table "component"
"""
input component_obj_rel_insert_input {
  data: component_insert_input!
  on_conflict: component_on_conflict
}

"""
on conflict condition type for table "component"
"""
input component_on_conflict {
  constraint: component_constraint!
  update_columns: [component_update_column!]!
}

"""
ordering options when selecting data from "component"
"""
input component_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  projectByProjectId: project_order_by
  project_id: order_by
  updatedAt: order_by
}

"""
select columns of table "component"
"""
enum component_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""
input type for updating data in table "component"
"""
input component_set_input {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type component_stddev_fields {
  id: Float
  project_id: Float
}

"""
order by stddev() on columns of table "component"
"""
input component_stddev_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_pop on columns"""
type component_stddev_pop_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_pop() on columns of table "component"
"""
input component_stddev_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_samp on columns"""
type component_stddev_samp_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_samp() on columns of table "component"
"""
input component_stddev_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate sum on columns"""
type component_sum_fields {
  id: numeric
  project_id: numeric
}

"""
order by sum() on columns of table "component"
"""
input component_sum_order_by {
  id: order_by
  project_id: order_by
}

"""
update columns of table "component"
"""
enum component_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type component_var_pop_fields {
  id: Float
  project_id: Float
}

"""
order by var_pop() on columns of table "component"
"""
input component_var_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate var_samp on columns"""
type component_var_samp_fields {
  id: Float
  project_id: Float
}

"""
order by var_samp() on columns of table "component"
"""
input component_var_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate variance on columns"""
type component_variance_fields {
  id: Float
  project_id: Float
}

"""
order by variance() on columns of table "component"
"""
input component_variance_order_by {
  id: order_by
  project_id: order_by
}

"""conflict action"""
enum conflict_action {
  """ignore the insert on this row"""
  ignore

  """update the row with the given values"""
  update
}

"""
columns and relationships of "content"
"""
type content {
  createdAt: timestamptz
  id: numeric!
  name: String
  payload: numeric

  """An object relationship"""
  projectByProjectId: project
  project_id: numeric
  updatedAt: timestamptz
}

"""
aggregated selection of "content"
"""
type content_aggregate {
  aggregate: content_aggregate_fields
  nodes: [content!]!
}

"""
aggregate fields of "content"
"""
type content_aggregate_fields {
  avg: content_avg_fields
  count(columns: [content_select_column!], distinct: Boolean): Int
  max: content_max_fields
  min: content_min_fields
  stddev: content_stddev_fields
  stddev_pop: content_stddev_pop_fields
  stddev_samp: content_stddev_samp_fields
  sum: content_sum_fields
  var_pop: content_var_pop_fields
  var_samp: content_var_samp_fields
  variance: content_variance_fields
}

"""
order by aggregate values of table "content"
"""
input content_aggregate_order_by {
  avg: content_avg_order_by
  count: order_by
  max: content_max_order_by
  min: content_min_order_by
  stddev: content_stddev_order_by
  stddev_pop: content_stddev_pop_order_by
  stddev_samp: content_stddev_samp_order_by
  sum: content_sum_order_by
  var_pop: content_var_pop_order_by
  var_samp: content_var_samp_order_by
  variance: content_variance_order_by
}

"""
input type for inserting array relation for remote table "content"
"""
input content_arr_rel_insert_input {
  data: [content_insert_input!]!
  on_conflict: content_on_conflict
}

"""aggregate avg on columns"""
type content_avg_fields {
  id: Float
  payload: Float
  project_id: Float
}

"""
order by avg() on columns of table "content"
"""
input content_avg_order_by {
  id: order_by
  payload: order_by
  project_id: order_by
}

"""
Boolean expression to filter rows from the table "content". All fields are combined with a logical 'AND'.
"""
input content_bool_exp {
  _and: [content_bool_exp]
  _not: content_bool_exp
  _or: [content_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: numeric_comparison_exp
  name: text_comparison_exp
  payload: numeric_comparison_exp
  projectByProjectId: project_bool_exp
  project_id: numeric_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "content"
"""
enum content_constraint {
  """unique or primary key constraint"""
  content_pkey
}

"""
input type for inserting data into table "content"
"""
input content_insert_input {
  createdAt: timestamptz
  id: numeric
  name: String
  payload: numeric
  projectByProjectId: project_obj_rel_insert_input
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type content_max_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  payload: numeric
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by max() on columns of table "content"
"""
input content_max_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  payload: order_by
  project_id: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type content_min_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  payload: numeric
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by min() on columns of table "content"
"""
input content_min_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  payload: order_by
  project_id: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "content"
"""
type content_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [content!]!
}

"""
input type for inserting object relation for remote table "content"
"""
input content_obj_rel_insert_input {
  data: content_insert_input!
  on_conflict: content_on_conflict
}

"""
on conflict condition type for table "content"
"""
input content_on_conflict {
  constraint: content_constraint!
  update_columns: [content_update_column!]!
}

"""
ordering options when selecting data from "content"
"""
input content_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  payload: order_by
  projectByProjectId: project_order_by
  project_id: order_by
  updatedAt: order_by
}

"""
select columns of table "content"
"""
enum content_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  payload

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""
input type for updating data in table "content"
"""
input content_set_input {
  createdAt: timestamptz
  id: numeric
  name: String
  payload: numeric
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type content_stddev_fields {
  id: Float
  payload: Float
  project_id: Float
}

"""
order by stddev() on columns of table "content"
"""
input content_stddev_order_by {
  id: order_by
  payload: order_by
  project_id: order_by
}

"""aggregate stddev_pop on columns"""
type content_stddev_pop_fields {
  id: Float
  payload: Float
  project_id: Float
}

"""
order by stddev_pop() on columns of table "content"
"""
input content_stddev_pop_order_by {
  id: order_by
  payload: order_by
  project_id: order_by
}

"""aggregate stddev_samp on columns"""
type content_stddev_samp_fields {
  id: Float
  payload: Float
  project_id: Float
}

"""
order by stddev_samp() on columns of table "content"
"""
input content_stddev_samp_order_by {
  id: order_by
  payload: order_by
  project_id: order_by
}

"""aggregate sum on columns"""
type content_sum_fields {
  id: numeric
  payload: numeric
  project_id: numeric
}

"""
order by sum() on columns of table "content"
"""
input content_sum_order_by {
  id: order_by
  payload: order_by
  project_id: order_by
}

"""
update columns of table "content"
"""
enum content_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  payload

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type content_var_pop_fields {
  id: Float
  payload: Float
  project_id: Float
}

"""
order by var_pop() on columns of table "content"
"""
input content_var_pop_order_by {
  id: order_by
  payload: order_by
  project_id: order_by
}

"""aggregate var_samp on columns"""
type content_var_samp_fields {
  id: Float
  payload: Float
  project_id: Float
}

"""
order by var_samp() on columns of table "content"
"""
input content_var_samp_order_by {
  id: order_by
  payload: order_by
  project_id: order_by
}

"""aggregate variance on columns"""
type content_variance_fields {
  id: Float
  payload: Float
  project_id: Float
}

"""
order by variance() on columns of table "content"
"""
input content_variance_order_by {
  id: order_by
  payload: order_by
  project_id: order_by
}

"""
columns and relationships of "documents"
"""
type documents {
  createdAt: timestamptz
  id: numeric!
  name: String

  """An object relationship"""
  projectByProjectId: project
  project_id: numeric
  updatedAt: timestamptz
}

"""
aggregated selection of "documents"
"""
type documents_aggregate {
  aggregate: documents_aggregate_fields
  nodes: [documents!]!
}

"""
aggregate fields of "documents"
"""
type documents_aggregate_fields {
  avg: documents_avg_fields
  count(columns: [documents_select_column!], distinct: Boolean): Int
  max: documents_max_fields
  min: documents_min_fields
  stddev: documents_stddev_fields
  stddev_pop: documents_stddev_pop_fields
  stddev_samp: documents_stddev_samp_fields
  sum: documents_sum_fields
  var_pop: documents_var_pop_fields
  var_samp: documents_var_samp_fields
  variance: documents_variance_fields
}

"""
order by aggregate values of table "documents"
"""
input documents_aggregate_order_by {
  avg: documents_avg_order_by
  count: order_by
  max: documents_max_order_by
  min: documents_min_order_by
  stddev: documents_stddev_order_by
  stddev_pop: documents_stddev_pop_order_by
  stddev_samp: documents_stddev_samp_order_by
  sum: documents_sum_order_by
  var_pop: documents_var_pop_order_by
  var_samp: documents_var_samp_order_by
  variance: documents_variance_order_by
}

"""
input type for inserting array relation for remote table "documents"
"""
input documents_arr_rel_insert_input {
  data: [documents_insert_input!]!
  on_conflict: documents_on_conflict
}

"""aggregate avg on columns"""
type documents_avg_fields {
  id: Float
  project_id: Float
}

"""
order by avg() on columns of table "documents"
"""
input documents_avg_order_by {
  id: order_by
  project_id: order_by
}

"""
Boolean expression to filter rows from the table "documents". All fields are combined with a logical 'AND'.
"""
input documents_bool_exp {
  _and: [documents_bool_exp]
  _not: documents_bool_exp
  _or: [documents_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: numeric_comparison_exp
  name: text_comparison_exp
  projectByProjectId: project_bool_exp
  project_id: numeric_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "documents"
"""
enum documents_constraint {
  """unique or primary key constraint"""
  documents_pkey
}

"""
input type for inserting data into table "documents"
"""
input documents_insert_input {
  createdAt: timestamptz
  id: numeric
  name: String
  projectByProjectId: project_obj_rel_insert_input
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type documents_max_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by max() on columns of table "documents"
"""
input documents_max_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type documents_min_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by min() on columns of table "documents"
"""
input documents_min_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "documents"
"""
type documents_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [documents!]!
}

"""
input type for inserting object relation for remote table "documents"
"""
input documents_obj_rel_insert_input {
  data: documents_insert_input!
  on_conflict: documents_on_conflict
}

"""
on conflict condition type for table "documents"
"""
input documents_on_conflict {
  constraint: documents_constraint!
  update_columns: [documents_update_column!]!
}

"""
ordering options when selecting data from "documents"
"""
input documents_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  projectByProjectId: project_order_by
  project_id: order_by
  updatedAt: order_by
}

"""
select columns of table "documents"
"""
enum documents_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""
input type for updating data in table "documents"
"""
input documents_set_input {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type documents_stddev_fields {
  id: Float
  project_id: Float
}

"""
order by stddev() on columns of table "documents"
"""
input documents_stddev_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_pop on columns"""
type documents_stddev_pop_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_pop() on columns of table "documents"
"""
input documents_stddev_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_samp on columns"""
type documents_stddev_samp_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_samp() on columns of table "documents"
"""
input documents_stddev_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate sum on columns"""
type documents_sum_fields {
  id: numeric
  project_id: numeric
}

"""
order by sum() on columns of table "documents"
"""
input documents_sum_order_by {
  id: order_by
  project_id: order_by
}

"""
update columns of table "documents"
"""
enum documents_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type documents_var_pop_fields {
  id: Float
  project_id: Float
}

"""
order by var_pop() on columns of table "documents"
"""
input documents_var_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate var_samp on columns"""
type documents_var_samp_fields {
  id: Float
  project_id: Float
}

"""
order by var_samp() on columns of table "documents"
"""
input documents_var_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate variance on columns"""
type documents_variance_fields {
  id: Float
  project_id: Float
}

"""
order by variance() on columns of table "documents"
"""
input documents_variance_order_by {
  id: order_by
  project_id: order_by
}

"""
columns and relationships of "image"
"""
type image {
  createdAt: timestamptz
  id: numeric!
  name: String

  """An object relationship"""
  projectByProjectId: project
  project_id: numeric
  updatedAt: timestamptz
}

"""
aggregated selection of "image"
"""
type image_aggregate {
  aggregate: image_aggregate_fields
  nodes: [image!]!
}

"""
aggregate fields of "image"
"""
type image_aggregate_fields {
  avg: image_avg_fields
  count(columns: [image_select_column!], distinct: Boolean): Int
  max: image_max_fields
  min: image_min_fields
  stddev: image_stddev_fields
  stddev_pop: image_stddev_pop_fields
  stddev_samp: image_stddev_samp_fields
  sum: image_sum_fields
  var_pop: image_var_pop_fields
  var_samp: image_var_samp_fields
  variance: image_variance_fields
}

"""
order by aggregate values of table "image"
"""
input image_aggregate_order_by {
  avg: image_avg_order_by
  count: order_by
  max: image_max_order_by
  min: image_min_order_by
  stddev: image_stddev_order_by
  stddev_pop: image_stddev_pop_order_by
  stddev_samp: image_stddev_samp_order_by
  sum: image_sum_order_by
  var_pop: image_var_pop_order_by
  var_samp: image_var_samp_order_by
  variance: image_variance_order_by
}

"""
input type for inserting array relation for remote table "image"
"""
input image_arr_rel_insert_input {
  data: [image_insert_input!]!
  on_conflict: image_on_conflict
}

"""aggregate avg on columns"""
type image_avg_fields {
  id: Float
  project_id: Float
}

"""
order by avg() on columns of table "image"
"""
input image_avg_order_by {
  id: order_by
  project_id: order_by
}

"""
Boolean expression to filter rows from the table "image". All fields are combined with a logical 'AND'.
"""
input image_bool_exp {
  _and: [image_bool_exp]
  _not: image_bool_exp
  _or: [image_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: numeric_comparison_exp
  name: text_comparison_exp
  projectByProjectId: project_bool_exp
  project_id: numeric_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "image"
"""
enum image_constraint {
  """unique or primary key constraint"""
  image_pkey
}

"""
input type for inserting data into table "image"
"""
input image_insert_input {
  createdAt: timestamptz
  id: numeric
  name: String
  projectByProjectId: project_obj_rel_insert_input
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type image_max_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by max() on columns of table "image"
"""
input image_max_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type image_min_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by min() on columns of table "image"
"""
input image_min_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "image"
"""
type image_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [image!]!
}

"""
input type for inserting object relation for remote table "image"
"""
input image_obj_rel_insert_input {
  data: image_insert_input!
  on_conflict: image_on_conflict
}

"""
on conflict condition type for table "image"
"""
input image_on_conflict {
  constraint: image_constraint!
  update_columns: [image_update_column!]!
}

"""
ordering options when selecting data from "image"
"""
input image_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  projectByProjectId: project_order_by
  project_id: order_by
  updatedAt: order_by
}

"""
select columns of table "image"
"""
enum image_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""
input type for updating data in table "image"
"""
input image_set_input {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type image_stddev_fields {
  id: Float
  project_id: Float
}

"""
order by stddev() on columns of table "image"
"""
input image_stddev_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_pop on columns"""
type image_stddev_pop_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_pop() on columns of table "image"
"""
input image_stddev_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_samp on columns"""
type image_stddev_samp_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_samp() on columns of table "image"
"""
input image_stddev_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate sum on columns"""
type image_sum_fields {
  id: numeric
  project_id: numeric
}

"""
order by sum() on columns of table "image"
"""
input image_sum_order_by {
  id: order_by
  project_id: order_by
}

"""
update columns of table "image"
"""
enum image_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type image_var_pop_fields {
  id: Float
  project_id: Float
}

"""
order by var_pop() on columns of table "image"
"""
input image_var_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate var_samp on columns"""
type image_var_samp_fields {
  id: Float
  project_id: Float
}

"""
order by var_samp() on columns of table "image"
"""
input image_var_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate variance on columns"""
type image_variance_fields {
  id: Float
  project_id: Float
}

"""
order by variance() on columns of table "image"
"""
input image_variance_order_by {
  id: order_by
  project_id: order_by
}

"""
columns and relationships of "layout"
"""
type layout {
  createdAt: timestamptz
  id: numeric!

  """An array relationship"""
  layoutToPositionsByLayoutId(
    """distinct select on columns"""
    distinct_on: [layoutToPosition_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [layoutToPosition_order_by!]

    """filter the rows returned"""
    where: layoutToPosition_bool_exp
  ): [layoutToPosition!]!

  """An aggregated array relationship"""
  layoutToPositionsByLayoutId_aggregate(
    """distinct select on columns"""
    distinct_on: [layoutToPosition_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [layoutToPosition_order_by!]

    """filter the rows returned"""
    where: layoutToPosition_bool_exp
  ): layoutToPosition_aggregate!

  """An array relationship"""
  levelToLayoutsByLayoutId(
    """distinct select on columns"""
    distinct_on: [levelToLayout_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [levelToLayout_order_by!]

    """filter the rows returned"""
    where: levelToLayout_bool_exp
  ): [levelToLayout!]!

  """An aggregated array relationship"""
  levelToLayoutsByLayoutId_aggregate(
    """distinct select on columns"""
    distinct_on: [levelToLayout_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [levelToLayout_order_by!]

    """filter the rows returned"""
    where: levelToLayout_bool_exp
  ): levelToLayout_aggregate!
  name: String

  """An object relationship"""
  projectByProjectId: project
  project_id: numeric
  updatedAt: timestamptz
}

"""
aggregated selection of "layout"
"""
type layout_aggregate {
  aggregate: layout_aggregate_fields
  nodes: [layout!]!
}

"""
aggregate fields of "layout"
"""
type layout_aggregate_fields {
  avg: layout_avg_fields
  count(columns: [layout_select_column!], distinct: Boolean): Int
  max: layout_max_fields
  min: layout_min_fields
  stddev: layout_stddev_fields
  stddev_pop: layout_stddev_pop_fields
  stddev_samp: layout_stddev_samp_fields
  sum: layout_sum_fields
  var_pop: layout_var_pop_fields
  var_samp: layout_var_samp_fields
  variance: layout_variance_fields
}

"""
order by aggregate values of table "layout"
"""
input layout_aggregate_order_by {
  avg: layout_avg_order_by
  count: order_by
  max: layout_max_order_by
  min: layout_min_order_by
  stddev: layout_stddev_order_by
  stddev_pop: layout_stddev_pop_order_by
  stddev_samp: layout_stddev_samp_order_by
  sum: layout_sum_order_by
  var_pop: layout_var_pop_order_by
  var_samp: layout_var_samp_order_by
  variance: layout_variance_order_by
}

"""
input type for inserting array relation for remote table "layout"
"""
input layout_arr_rel_insert_input {
  data: [layout_insert_input!]!
  on_conflict: layout_on_conflict
}

"""aggregate avg on columns"""
type layout_avg_fields {
  id: Float
  project_id: Float
}

"""
order by avg() on columns of table "layout"
"""
input layout_avg_order_by {
  id: order_by
  project_id: order_by
}

"""
Boolean expression to filter rows from the table "layout". All fields are combined with a logical 'AND'.
"""
input layout_bool_exp {
  _and: [layout_bool_exp]
  _not: layout_bool_exp
  _or: [layout_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: numeric_comparison_exp
  layoutToPositionsByLayoutId: layoutToPosition_bool_exp
  levelToLayoutsByLayoutId: levelToLayout_bool_exp
  name: text_comparison_exp
  projectByProjectId: project_bool_exp
  project_id: numeric_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "layout"
"""
enum layout_constraint {
  """unique or primary key constraint"""
  layout_pkey
}

"""
input type for inserting data into table "layout"
"""
input layout_insert_input {
  createdAt: timestamptz
  id: numeric
  layoutToPositionsByLayoutId: layoutToPosition_arr_rel_insert_input
  levelToLayoutsByLayoutId: levelToLayout_arr_rel_insert_input
  name: String
  projectByProjectId: project_obj_rel_insert_input
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type layout_max_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by max() on columns of table "layout"
"""
input layout_max_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type layout_min_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by min() on columns of table "layout"
"""
input layout_min_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "layout"
"""
type layout_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [layout!]!
}

"""
input type for inserting object relation for remote table "layout"
"""
input layout_obj_rel_insert_input {
  data: layout_insert_input!
  on_conflict: layout_on_conflict
}

"""
on conflict condition type for table "layout"
"""
input layout_on_conflict {
  constraint: layout_constraint!
  update_columns: [layout_update_column!]!
}

"""
ordering options when selecting data from "layout"
"""
input layout_order_by {
  createdAt: order_by
  id: order_by
  layoutToPositionsByLayoutId_aggregate: layoutToPosition_aggregate_order_by
  levelToLayoutsByLayoutId_aggregate: levelToLayout_aggregate_order_by
  name: order_by
  projectByProjectId: project_order_by
  project_id: order_by
  updatedAt: order_by
}

"""
select columns of table "layout"
"""
enum layout_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""
input type for updating data in table "layout"
"""
input layout_set_input {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type layout_stddev_fields {
  id: Float
  project_id: Float
}

"""
order by stddev() on columns of table "layout"
"""
input layout_stddev_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_pop on columns"""
type layout_stddev_pop_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_pop() on columns of table "layout"
"""
input layout_stddev_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_samp on columns"""
type layout_stddev_samp_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_samp() on columns of table "layout"
"""
input layout_stddev_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate sum on columns"""
type layout_sum_fields {
  id: numeric
  project_id: numeric
}

"""
order by sum() on columns of table "layout"
"""
input layout_sum_order_by {
  id: order_by
  project_id: order_by
}

"""
update columns of table "layout"
"""
enum layout_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type layout_var_pop_fields {
  id: Float
  project_id: Float
}

"""
order by var_pop() on columns of table "layout"
"""
input layout_var_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate var_samp on columns"""
type layout_var_samp_fields {
  id: Float
  project_id: Float
}

"""
order by var_samp() on columns of table "layout"
"""
input layout_var_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate variance on columns"""
type layout_variance_fields {
  id: Float
  project_id: Float
}

"""
order by variance() on columns of table "layout"
"""
input layout_variance_order_by {
  id: order_by
  project_id: order_by
}

"""
columns and relationships of "layoutToPosition"
"""
type layoutToPosition {
  createdAt: timestamptz
  id: numeric!

  """An object relationship"""
  layoutByLayoutId: layout
  layout_id: numeric
  name: String

  """An object relationship"""
  positionByPositionId: position
  position_id: numeric
  updatedAt: timestamptz
}

"""
aggregated selection of "layoutToPosition"
"""
type layoutToPosition_aggregate {
  aggregate: layoutToPosition_aggregate_fields
  nodes: [layoutToPosition!]!
}

"""
aggregate fields of "layoutToPosition"
"""
type layoutToPosition_aggregate_fields {
  avg: layoutToPosition_avg_fields
  count(columns: [layoutToPosition_select_column!], distinct: Boolean): Int
  max: layoutToPosition_max_fields
  min: layoutToPosition_min_fields
  stddev: layoutToPosition_stddev_fields
  stddev_pop: layoutToPosition_stddev_pop_fields
  stddev_samp: layoutToPosition_stddev_samp_fields
  sum: layoutToPosition_sum_fields
  var_pop: layoutToPosition_var_pop_fields
  var_samp: layoutToPosition_var_samp_fields
  variance: layoutToPosition_variance_fields
}

"""
order by aggregate values of table "layoutToPosition"
"""
input layoutToPosition_aggregate_order_by {
  avg: layoutToPosition_avg_order_by
  count: order_by
  max: layoutToPosition_max_order_by
  min: layoutToPosition_min_order_by
  stddev: layoutToPosition_stddev_order_by
  stddev_pop: layoutToPosition_stddev_pop_order_by
  stddev_samp: layoutToPosition_stddev_samp_order_by
  sum: layoutToPosition_sum_order_by
  var_pop: layoutToPosition_var_pop_order_by
  var_samp: layoutToPosition_var_samp_order_by
  variance: layoutToPosition_variance_order_by
}

"""
input type for inserting array relation for remote table "layoutToPosition"
"""
input layoutToPosition_arr_rel_insert_input {
  data: [layoutToPosition_insert_input!]!
  on_conflict: layoutToPosition_on_conflict
}

"""aggregate avg on columns"""
type layoutToPosition_avg_fields {
  id: Float
  layout_id: Float
  position_id: Float
}

"""
order by avg() on columns of table "layoutToPosition"
"""
input layoutToPosition_avg_order_by {
  id: order_by
  layout_id: order_by
  position_id: order_by
}

"""
Boolean expression to filter rows from the table "layoutToPosition". All fields are combined with a logical 'AND'.
"""
input layoutToPosition_bool_exp {
  _and: [layoutToPosition_bool_exp]
  _not: layoutToPosition_bool_exp
  _or: [layoutToPosition_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: numeric_comparison_exp
  layoutByLayoutId: layout_bool_exp
  layout_id: numeric_comparison_exp
  name: text_comparison_exp
  positionByPositionId: position_bool_exp
  position_id: numeric_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "layoutToPosition"
"""
enum layoutToPosition_constraint {
  """unique or primary key constraint"""
  layoutToPosition_pkey
}

"""
input type for inserting data into table "layoutToPosition"
"""
input layoutToPosition_insert_input {
  createdAt: timestamptz
  id: numeric
  layoutByLayoutId: layout_obj_rel_insert_input
  layout_id: numeric
  name: String
  positionByPositionId: position_obj_rel_insert_input
  position_id: numeric
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type layoutToPosition_max_fields {
  createdAt: timestamptz
  id: numeric
  layout_id: numeric
  name: String
  position_id: numeric
  updatedAt: timestamptz
}

"""
order by max() on columns of table "layoutToPosition"
"""
input layoutToPosition_max_order_by {
  createdAt: order_by
  id: order_by
  layout_id: order_by
  name: order_by
  position_id: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type layoutToPosition_min_fields {
  createdAt: timestamptz
  id: numeric
  layout_id: numeric
  name: String
  position_id: numeric
  updatedAt: timestamptz
}

"""
order by min() on columns of table "layoutToPosition"
"""
input layoutToPosition_min_order_by {
  createdAt: order_by
  id: order_by
  layout_id: order_by
  name: order_by
  position_id: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "layoutToPosition"
"""
type layoutToPosition_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [layoutToPosition!]!
}

"""
input type for inserting object relation for remote table "layoutToPosition"
"""
input layoutToPosition_obj_rel_insert_input {
  data: layoutToPosition_insert_input!
  on_conflict: layoutToPosition_on_conflict
}

"""
on conflict condition type for table "layoutToPosition"
"""
input layoutToPosition_on_conflict {
  constraint: layoutToPosition_constraint!
  update_columns: [layoutToPosition_update_column!]!
}

"""
ordering options when selecting data from "layoutToPosition"
"""
input layoutToPosition_order_by {
  createdAt: order_by
  id: order_by
  layoutByLayoutId: layout_order_by
  layout_id: order_by
  name: order_by
  positionByPositionId: position_order_by
  position_id: order_by
  updatedAt: order_by
}

"""
select columns of table "layoutToPosition"
"""
enum layoutToPosition_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  layout_id

  """column name"""
  name

  """column name"""
  position_id

  """column name"""
  updatedAt
}

"""
input type for updating data in table "layoutToPosition"
"""
input layoutToPosition_set_input {
  createdAt: timestamptz
  id: numeric
  layout_id: numeric
  name: String
  position_id: numeric
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type layoutToPosition_stddev_fields {
  id: Float
  layout_id: Float
  position_id: Float
}

"""
order by stddev() on columns of table "layoutToPosition"
"""
input layoutToPosition_stddev_order_by {
  id: order_by
  layout_id: order_by
  position_id: order_by
}

"""aggregate stddev_pop on columns"""
type layoutToPosition_stddev_pop_fields {
  id: Float
  layout_id: Float
  position_id: Float
}

"""
order by stddev_pop() on columns of table "layoutToPosition"
"""
input layoutToPosition_stddev_pop_order_by {
  id: order_by
  layout_id: order_by
  position_id: order_by
}

"""aggregate stddev_samp on columns"""
type layoutToPosition_stddev_samp_fields {
  id: Float
  layout_id: Float
  position_id: Float
}

"""
order by stddev_samp() on columns of table "layoutToPosition"
"""
input layoutToPosition_stddev_samp_order_by {
  id: order_by
  layout_id: order_by
  position_id: order_by
}

"""aggregate sum on columns"""
type layoutToPosition_sum_fields {
  id: numeric
  layout_id: numeric
  position_id: numeric
}

"""
order by sum() on columns of table "layoutToPosition"
"""
input layoutToPosition_sum_order_by {
  id: order_by
  layout_id: order_by
  position_id: order_by
}

"""
update columns of table "layoutToPosition"
"""
enum layoutToPosition_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  layout_id

  """column name"""
  name

  """column name"""
  position_id

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type layoutToPosition_var_pop_fields {
  id: Float
  layout_id: Float
  position_id: Float
}

"""
order by var_pop() on columns of table "layoutToPosition"
"""
input layoutToPosition_var_pop_order_by {
  id: order_by
  layout_id: order_by
  position_id: order_by
}

"""aggregate var_samp on columns"""
type layoutToPosition_var_samp_fields {
  id: Float
  layout_id: Float
  position_id: Float
}

"""
order by var_samp() on columns of table "layoutToPosition"
"""
input layoutToPosition_var_samp_order_by {
  id: order_by
  layout_id: order_by
  position_id: order_by
}

"""aggregate variance on columns"""
type layoutToPosition_variance_fields {
  id: Float
  layout_id: Float
  position_id: Float
}

"""
order by variance() on columns of table "layoutToPosition"
"""
input layoutToPosition_variance_order_by {
  id: order_by
  layout_id: order_by
  position_id: order_by
}

"""
columns and relationships of "level"
"""
type level {
  createdAt: timestamptz
  id: numeric!

  """An array relationship"""
  levelToLayoutsByLevelId(
    """distinct select on columns"""
    distinct_on: [levelToLayout_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [levelToLayout_order_by!]

    """filter the rows returned"""
    where: levelToLayout_bool_exp
  ): [levelToLayout!]!

  """An aggregated array relationship"""
  levelToLayoutsByLevelId_aggregate(
    """distinct select on columns"""
    distinct_on: [levelToLayout_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [levelToLayout_order_by!]

    """filter the rows returned"""
    where: levelToLayout_bool_exp
  ): levelToLayout_aggregate!
  name: String

  """An object relationship"""
  projectByProjectId: project
  project_id: numeric
  updatedAt: timestamptz

  """An object relationship"""
  viewByViewId: view
  view_id: numeric
}

"""
aggregated selection of "level"
"""
type level_aggregate {
  aggregate: level_aggregate_fields
  nodes: [level!]!
}

"""
aggregate fields of "level"
"""
type level_aggregate_fields {
  avg: level_avg_fields
  count(columns: [level_select_column!], distinct: Boolean): Int
  max: level_max_fields
  min: level_min_fields
  stddev: level_stddev_fields
  stddev_pop: level_stddev_pop_fields
  stddev_samp: level_stddev_samp_fields
  sum: level_sum_fields
  var_pop: level_var_pop_fields
  var_samp: level_var_samp_fields
  variance: level_variance_fields
}

"""
order by aggregate values of table "level"
"""
input level_aggregate_order_by {
  avg: level_avg_order_by
  count: order_by
  max: level_max_order_by
  min: level_min_order_by
  stddev: level_stddev_order_by
  stddev_pop: level_stddev_pop_order_by
  stddev_samp: level_stddev_samp_order_by
  sum: level_sum_order_by
  var_pop: level_var_pop_order_by
  var_samp: level_var_samp_order_by
  variance: level_variance_order_by
}

"""
input type for inserting array relation for remote table "level"
"""
input level_arr_rel_insert_input {
  data: [level_insert_input!]!
  on_conflict: level_on_conflict
}

"""aggregate avg on columns"""
type level_avg_fields {
  id: Float
  project_id: Float
  view_id: Float
}

"""
order by avg() on columns of table "level"
"""
input level_avg_order_by {
  id: order_by
  project_id: order_by
  view_id: order_by
}

"""
Boolean expression to filter rows from the table "level". All fields are combined with a logical 'AND'.
"""
input level_bool_exp {
  _and: [level_bool_exp]
  _not: level_bool_exp
  _or: [level_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: numeric_comparison_exp
  levelToLayoutsByLevelId: levelToLayout_bool_exp
  name: text_comparison_exp
  projectByProjectId: project_bool_exp
  project_id: numeric_comparison_exp
  updatedAt: timestamptz_comparison_exp
  viewByViewId: view_bool_exp
  view_id: numeric_comparison_exp
}

"""
unique or primary key constraints on table "level"
"""
enum level_constraint {
  """unique or primary key constraint"""
  level_pkey
}

"""
input type for inserting data into table "level"
"""
input level_insert_input {
  createdAt: timestamptz
  id: numeric
  levelToLayoutsByLevelId: levelToLayout_arr_rel_insert_input
  name: String
  projectByProjectId: project_obj_rel_insert_input
  project_id: numeric
  updatedAt: timestamptz
  viewByViewId: view_obj_rel_insert_input
  view_id: numeric
}

"""aggregate max on columns"""
type level_max_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
  view_id: numeric
}

"""
order by max() on columns of table "level"
"""
input level_max_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
  view_id: order_by
}

"""aggregate min on columns"""
type level_min_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
  view_id: numeric
}

"""
order by min() on columns of table "level"
"""
input level_min_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
  view_id: order_by
}

"""
response of any mutation on the table "level"
"""
type level_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [level!]!
}

"""
input type for inserting object relation for remote table "level"
"""
input level_obj_rel_insert_input {
  data: level_insert_input!
  on_conflict: level_on_conflict
}

"""
on conflict condition type for table "level"
"""
input level_on_conflict {
  constraint: level_constraint!
  update_columns: [level_update_column!]!
}

"""
ordering options when selecting data from "level"
"""
input level_order_by {
  createdAt: order_by
  id: order_by
  levelToLayoutsByLevelId_aggregate: levelToLayout_aggregate_order_by
  name: order_by
  projectByProjectId: project_order_by
  project_id: order_by
  updatedAt: order_by
  viewByViewId: view_order_by
  view_id: order_by
}

"""
select columns of table "level"
"""
enum level_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt

  """column name"""
  view_id
}

"""
input type for updating data in table "level"
"""
input level_set_input {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
  view_id: numeric
}

"""aggregate stddev on columns"""
type level_stddev_fields {
  id: Float
  project_id: Float
  view_id: Float
}

"""
order by stddev() on columns of table "level"
"""
input level_stddev_order_by {
  id: order_by
  project_id: order_by
  view_id: order_by
}

"""aggregate stddev_pop on columns"""
type level_stddev_pop_fields {
  id: Float
  project_id: Float
  view_id: Float
}

"""
order by stddev_pop() on columns of table "level"
"""
input level_stddev_pop_order_by {
  id: order_by
  project_id: order_by
  view_id: order_by
}

"""aggregate stddev_samp on columns"""
type level_stddev_samp_fields {
  id: Float
  project_id: Float
  view_id: Float
}

"""
order by stddev_samp() on columns of table "level"
"""
input level_stddev_samp_order_by {
  id: order_by
  project_id: order_by
  view_id: order_by
}

"""aggregate sum on columns"""
type level_sum_fields {
  id: numeric
  project_id: numeric
  view_id: numeric
}

"""
order by sum() on columns of table "level"
"""
input level_sum_order_by {
  id: order_by
  project_id: order_by
  view_id: order_by
}

"""
update columns of table "level"
"""
enum level_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt

  """column name"""
  view_id
}

"""aggregate var_pop on columns"""
type level_var_pop_fields {
  id: Float
  project_id: Float
  view_id: Float
}

"""
order by var_pop() on columns of table "level"
"""
input level_var_pop_order_by {
  id: order_by
  project_id: order_by
  view_id: order_by
}

"""aggregate var_samp on columns"""
type level_var_samp_fields {
  id: Float
  project_id: Float
  view_id: Float
}

"""
order by var_samp() on columns of table "level"
"""
input level_var_samp_order_by {
  id: order_by
  project_id: order_by
  view_id: order_by
}

"""aggregate variance on columns"""
type level_variance_fields {
  id: Float
  project_id: Float
  view_id: Float
}

"""
order by variance() on columns of table "level"
"""
input level_variance_order_by {
  id: order_by
  project_id: order_by
  view_id: order_by
}

"""
columns and relationships of "levelToLayout"
"""
type levelToLayout {
  createdAt: timestamptz
  id: numeric!

  """An object relationship"""
  layoutByLayoutId: layout
  layout_id: numeric

  """An object relationship"""
  levelByLevelId: level
  level_id: numeric
  name: String
  updatedAt: timestamptz
}

"""
aggregated selection of "levelToLayout"
"""
type levelToLayout_aggregate {
  aggregate: levelToLayout_aggregate_fields
  nodes: [levelToLayout!]!
}

"""
aggregate fields of "levelToLayout"
"""
type levelToLayout_aggregate_fields {
  avg: levelToLayout_avg_fields
  count(columns: [levelToLayout_select_column!], distinct: Boolean): Int
  max: levelToLayout_max_fields
  min: levelToLayout_min_fields
  stddev: levelToLayout_stddev_fields
  stddev_pop: levelToLayout_stddev_pop_fields
  stddev_samp: levelToLayout_stddev_samp_fields
  sum: levelToLayout_sum_fields
  var_pop: levelToLayout_var_pop_fields
  var_samp: levelToLayout_var_samp_fields
  variance: levelToLayout_variance_fields
}

"""
order by aggregate values of table "levelToLayout"
"""
input levelToLayout_aggregate_order_by {
  avg: levelToLayout_avg_order_by
  count: order_by
  max: levelToLayout_max_order_by
  min: levelToLayout_min_order_by
  stddev: levelToLayout_stddev_order_by
  stddev_pop: levelToLayout_stddev_pop_order_by
  stddev_samp: levelToLayout_stddev_samp_order_by
  sum: levelToLayout_sum_order_by
  var_pop: levelToLayout_var_pop_order_by
  var_samp: levelToLayout_var_samp_order_by
  variance: levelToLayout_variance_order_by
}

"""
input type for inserting array relation for remote table "levelToLayout"
"""
input levelToLayout_arr_rel_insert_input {
  data: [levelToLayout_insert_input!]!
  on_conflict: levelToLayout_on_conflict
}

"""aggregate avg on columns"""
type levelToLayout_avg_fields {
  id: Float
  layout_id: Float
  level_id: Float
}

"""
order by avg() on columns of table "levelToLayout"
"""
input levelToLayout_avg_order_by {
  id: order_by
  layout_id: order_by
  level_id: order_by
}

"""
Boolean expression to filter rows from the table "levelToLayout". All fields are combined with a logical 'AND'.
"""
input levelToLayout_bool_exp {
  _and: [levelToLayout_bool_exp]
  _not: levelToLayout_bool_exp
  _or: [levelToLayout_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: numeric_comparison_exp
  layoutByLayoutId: layout_bool_exp
  layout_id: numeric_comparison_exp
  levelByLevelId: level_bool_exp
  level_id: numeric_comparison_exp
  name: text_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "levelToLayout"
"""
enum levelToLayout_constraint {
  """unique or primary key constraint"""
  levelToLayout_pkey
}

"""
input type for inserting data into table "levelToLayout"
"""
input levelToLayout_insert_input {
  createdAt: timestamptz
  id: numeric
  layoutByLayoutId: layout_obj_rel_insert_input
  layout_id: numeric
  levelByLevelId: level_obj_rel_insert_input
  level_id: numeric
  name: String
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type levelToLayout_max_fields {
  createdAt: timestamptz
  id: numeric
  layout_id: numeric
  level_id: numeric
  name: String
  updatedAt: timestamptz
}

"""
order by max() on columns of table "levelToLayout"
"""
input levelToLayout_max_order_by {
  createdAt: order_by
  id: order_by
  layout_id: order_by
  level_id: order_by
  name: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type levelToLayout_min_fields {
  createdAt: timestamptz
  id: numeric
  layout_id: numeric
  level_id: numeric
  name: String
  updatedAt: timestamptz
}

"""
order by min() on columns of table "levelToLayout"
"""
input levelToLayout_min_order_by {
  createdAt: order_by
  id: order_by
  layout_id: order_by
  level_id: order_by
  name: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "levelToLayout"
"""
type levelToLayout_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [levelToLayout!]!
}

"""
input type for inserting object relation for remote table "levelToLayout"
"""
input levelToLayout_obj_rel_insert_input {
  data: levelToLayout_insert_input!
  on_conflict: levelToLayout_on_conflict
}

"""
on conflict condition type for table "levelToLayout"
"""
input levelToLayout_on_conflict {
  constraint: levelToLayout_constraint!
  update_columns: [levelToLayout_update_column!]!
}

"""
ordering options when selecting data from "levelToLayout"
"""
input levelToLayout_order_by {
  createdAt: order_by
  id: order_by
  layoutByLayoutId: layout_order_by
  layout_id: order_by
  levelByLevelId: level_order_by
  level_id: order_by
  name: order_by
  updatedAt: order_by
}

"""
select columns of table "levelToLayout"
"""
enum levelToLayout_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  layout_id

  """column name"""
  level_id

  """column name"""
  name

  """column name"""
  updatedAt
}

"""
input type for updating data in table "levelToLayout"
"""
input levelToLayout_set_input {
  createdAt: timestamptz
  id: numeric
  layout_id: numeric
  level_id: numeric
  name: String
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type levelToLayout_stddev_fields {
  id: Float
  layout_id: Float
  level_id: Float
}

"""
order by stddev() on columns of table "levelToLayout"
"""
input levelToLayout_stddev_order_by {
  id: order_by
  layout_id: order_by
  level_id: order_by
}

"""aggregate stddev_pop on columns"""
type levelToLayout_stddev_pop_fields {
  id: Float
  layout_id: Float
  level_id: Float
}

"""
order by stddev_pop() on columns of table "levelToLayout"
"""
input levelToLayout_stddev_pop_order_by {
  id: order_by
  layout_id: order_by
  level_id: order_by
}

"""aggregate stddev_samp on columns"""
type levelToLayout_stddev_samp_fields {
  id: Float
  layout_id: Float
  level_id: Float
}

"""
order by stddev_samp() on columns of table "levelToLayout"
"""
input levelToLayout_stddev_samp_order_by {
  id: order_by
  layout_id: order_by
  level_id: order_by
}

"""aggregate sum on columns"""
type levelToLayout_sum_fields {
  id: numeric
  layout_id: numeric
  level_id: numeric
}

"""
order by sum() on columns of table "levelToLayout"
"""
input levelToLayout_sum_order_by {
  id: order_by
  layout_id: order_by
  level_id: order_by
}

"""
update columns of table "levelToLayout"
"""
enum levelToLayout_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  layout_id

  """column name"""
  level_id

  """column name"""
  name

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type levelToLayout_var_pop_fields {
  id: Float
  layout_id: Float
  level_id: Float
}

"""
order by var_pop() on columns of table "levelToLayout"
"""
input levelToLayout_var_pop_order_by {
  id: order_by
  layout_id: order_by
  level_id: order_by
}

"""aggregate var_samp on columns"""
type levelToLayout_var_samp_fields {
  id: Float
  layout_id: Float
  level_id: Float
}

"""
order by var_samp() on columns of table "levelToLayout"
"""
input levelToLayout_var_samp_order_by {
  id: order_by
  layout_id: order_by
  level_id: order_by
}

"""aggregate variance on columns"""
type levelToLayout_variance_fields {
  id: Float
  layout_id: Float
  level_id: Float
}

"""
order by variance() on columns of table "levelToLayout"
"""
input levelToLayout_variance_order_by {
  id: order_by
  layout_id: order_by
  level_id: order_by
}

"""mutation root"""
type mutation_root {
  """
  delete data from the table: "audio"
  """
  delete_audio(
    """filter the rows which have to be deleted"""
    where: audio_bool_exp!
  ): audio_mutation_response

  """
  delete data from the table: "color"
  """
  delete_color(
    """filter the rows which have to be deleted"""
    where: color_bool_exp!
  ): color_mutation_response

  """
  delete data from the table: "colorFormat"
  """
  delete_colorFormat(
    """filter the rows which have to be deleted"""
    where: colorFormat_bool_exp!
  ): colorFormat_mutation_response

  """
  delete data from the table: "colorGroup"
  """
  delete_colorGroup(
    """filter the rows which have to be deleted"""
    where: colorGroup_bool_exp!
  ): colorGroup_mutation_response

  """
  delete data from the table: "colorSet"
  """
  delete_colorSet(
    """filter the rows which have to be deleted"""
    where: colorSet_bool_exp!
  ): colorSet_mutation_response

  """
  delete data from the table: "colorToColorSet"
  """
  delete_colorToColorSet(
    """filter the rows which have to be deleted"""
    where: colorToColorSet_bool_exp!
  ): colorToColorSet_mutation_response

  """
  delete data from the table: "component"
  """
  delete_component(
    """filter the rows which have to be deleted"""
    where: component_bool_exp!
  ): component_mutation_response

  """
  delete data from the table: "content"
  """
  delete_content(
    """filter the rows which have to be deleted"""
    where: content_bool_exp!
  ): content_mutation_response

  """
  delete data from the table: "documents"
  """
  delete_documents(
    """filter the rows which have to be deleted"""
    where: documents_bool_exp!
  ): documents_mutation_response

  """
  delete data from the table: "image"
  """
  delete_image(
    """filter the rows which have to be deleted"""
    where: image_bool_exp!
  ): image_mutation_response

  """
  delete data from the table: "layout"
  """
  delete_layout(
    """filter the rows which have to be deleted"""
    where: layout_bool_exp!
  ): layout_mutation_response

  """
  delete data from the table: "layoutToPosition"
  """
  delete_layoutToPosition(
    """filter the rows which have to be deleted"""
    where: layoutToPosition_bool_exp!
  ): layoutToPosition_mutation_response

  """
  delete data from the table: "level"
  """
  delete_level(
    """filter the rows which have to be deleted"""
    where: level_bool_exp!
  ): level_mutation_response

  """
  delete data from the table: "levelToLayout"
  """
  delete_levelToLayout(
    """filter the rows which have to be deleted"""
    where: levelToLayout_bool_exp!
  ): levelToLayout_mutation_response

  """
  delete data from the table: "position"
  """
  delete_position(
    """filter the rows which have to be deleted"""
    where: position_bool_exp!
  ): position_mutation_response

  """
  delete data from the table: "project"
  """
  delete_project(
    """filter the rows which have to be deleted"""
    where: project_bool_exp!
  ): project_mutation_response

  """
  delete data from the table: "route"
  """
  delete_route(
    """filter the rows which have to be deleted"""
    where: route_bool_exp!
  ): route_mutation_response

  """
  delete data from the table: "routeToView"
  """
  delete_routeToView(
    """filter the rows which have to be deleted"""
    where: routeToView_bool_exp!
  ): routeToView_mutation_response

  """
  delete data from the table: "state"
  """
  delete_state(
    """filter the rows which have to be deleted"""
    where: state_bool_exp!
  ): state_mutation_response

  """
  delete data from the table: "translation"
  """
  delete_translation(
    """filter the rows which have to be deleted"""
    where: translation_bool_exp!
  ): translation_mutation_response

  """
  delete data from the table: "video"
  """
  delete_video(
    """filter the rows which have to be deleted"""
    where: video_bool_exp!
  ): video_mutation_response

  """
  delete data from the table: "view"
  """
  delete_view(
    """filter the rows which have to be deleted"""
    where: view_bool_exp!
  ): view_mutation_response

  """
  insert data into the table: "audio"
  """
  insert_audio(
    """the rows to be inserted"""
    objects: [audio_insert_input!]!

    """on conflict condition"""
    on_conflict: audio_on_conflict
  ): audio_mutation_response

  """
  insert data into the table: "color"
  """
  insert_color(
    """the rows to be inserted"""
    objects: [color_insert_input!]!

    """on conflict condition"""
    on_conflict: color_on_conflict
  ): color_mutation_response

  """
  insert data into the table: "colorFormat"
  """
  insert_colorFormat(
    """the rows to be inserted"""
    objects: [colorFormat_insert_input!]!

    """on conflict condition"""
    on_conflict: colorFormat_on_conflict
  ): colorFormat_mutation_response

  """
  insert data into the table: "colorGroup"
  """
  insert_colorGroup(
    """the rows to be inserted"""
    objects: [colorGroup_insert_input!]!

    """on conflict condition"""
    on_conflict: colorGroup_on_conflict
  ): colorGroup_mutation_response

  """
  insert data into the table: "colorSet"
  """
  insert_colorSet(
    """the rows to be inserted"""
    objects: [colorSet_insert_input!]!

    """on conflict condition"""
    on_conflict: colorSet_on_conflict
  ): colorSet_mutation_response

  """
  insert data into the table: "colorToColorSet"
  """
  insert_colorToColorSet(
    """the rows to be inserted"""
    objects: [colorToColorSet_insert_input!]!

    """on conflict condition"""
    on_conflict: colorToColorSet_on_conflict
  ): colorToColorSet_mutation_response

  """
  insert data into the table: "component"
  """
  insert_component(
    """the rows to be inserted"""
    objects: [component_insert_input!]!

    """on conflict condition"""
    on_conflict: component_on_conflict
  ): component_mutation_response

  """
  insert data into the table: "content"
  """
  insert_content(
    """the rows to be inserted"""
    objects: [content_insert_input!]!

    """on conflict condition"""
    on_conflict: content_on_conflict
  ): content_mutation_response

  """
  insert data into the table: "documents"
  """
  insert_documents(
    """the rows to be inserted"""
    objects: [documents_insert_input!]!

    """on conflict condition"""
    on_conflict: documents_on_conflict
  ): documents_mutation_response

  """
  insert data into the table: "image"
  """
  insert_image(
    """the rows to be inserted"""
    objects: [image_insert_input!]!

    """on conflict condition"""
    on_conflict: image_on_conflict
  ): image_mutation_response

  """
  insert data into the table: "layout"
  """
  insert_layout(
    """the rows to be inserted"""
    objects: [layout_insert_input!]!

    """on conflict condition"""
    on_conflict: layout_on_conflict
  ): layout_mutation_response

  """
  insert data into the table: "layoutToPosition"
  """
  insert_layoutToPosition(
    """the rows to be inserted"""
    objects: [layoutToPosition_insert_input!]!

    """on conflict condition"""
    on_conflict: layoutToPosition_on_conflict
  ): layoutToPosition_mutation_response

  """
  insert data into the table: "level"
  """
  insert_level(
    """the rows to be inserted"""
    objects: [level_insert_input!]!

    """on conflict condition"""
    on_conflict: level_on_conflict
  ): level_mutation_response

  """
  insert data into the table: "levelToLayout"
  """
  insert_levelToLayout(
    """the rows to be inserted"""
    objects: [levelToLayout_insert_input!]!

    """on conflict condition"""
    on_conflict: levelToLayout_on_conflict
  ): levelToLayout_mutation_response

  """
  insert data into the table: "position"
  """
  insert_position(
    """the rows to be inserted"""
    objects: [position_insert_input!]!

    """on conflict condition"""
    on_conflict: position_on_conflict
  ): position_mutation_response

  """
  insert data into the table: "project"
  """
  insert_project(
    """the rows to be inserted"""
    objects: [project_insert_input!]!

    """on conflict condition"""
    on_conflict: project_on_conflict
  ): project_mutation_response

  """
  insert data into the table: "route"
  """
  insert_route(
    """the rows to be inserted"""
    objects: [route_insert_input!]!

    """on conflict condition"""
    on_conflict: route_on_conflict
  ): route_mutation_response

  """
  insert data into the table: "routeToView"
  """
  insert_routeToView(
    """the rows to be inserted"""
    objects: [routeToView_insert_input!]!

    """on conflict condition"""
    on_conflict: routeToView_on_conflict
  ): routeToView_mutation_response

  """
  insert data into the table: "state"
  """
  insert_state(
    """the rows to be inserted"""
    objects: [state_insert_input!]!

    """on conflict condition"""
    on_conflict: state_on_conflict
  ): state_mutation_response

  """
  insert data into the table: "translation"
  """
  insert_translation(
    """the rows to be inserted"""
    objects: [translation_insert_input!]!

    """on conflict condition"""
    on_conflict: translation_on_conflict
  ): translation_mutation_response

  """
  insert data into the table: "video"
  """
  insert_video(
    """the rows to be inserted"""
    objects: [video_insert_input!]!

    """on conflict condition"""
    on_conflict: video_on_conflict
  ): video_mutation_response

  """
  insert data into the table: "view"
  """
  insert_view(
    """the rows to be inserted"""
    objects: [view_insert_input!]!

    """on conflict condition"""
    on_conflict: view_on_conflict
  ): view_mutation_response

  """
  update data of the table: "audio"
  """
  update_audio(
    """sets the columns of the filtered rows to the given values"""
    _set: audio_set_input

    """filter the rows which have to be updated"""
    where: audio_bool_exp!
  ): audio_mutation_response

  """
  update data of the table: "color"
  """
  update_color(
    """sets the columns of the filtered rows to the given values"""
    _set: color_set_input

    """filter the rows which have to be updated"""
    where: color_bool_exp!
  ): color_mutation_response

  """
  update data of the table: "colorFormat"
  """
  update_colorFormat(
    """sets the columns of the filtered rows to the given values"""
    _set: colorFormat_set_input

    """filter the rows which have to be updated"""
    where: colorFormat_bool_exp!
  ): colorFormat_mutation_response

  """
  update data of the table: "colorGroup"
  """
  update_colorGroup(
    """sets the columns of the filtered rows to the given values"""
    _set: colorGroup_set_input

    """filter the rows which have to be updated"""
    where: colorGroup_bool_exp!
  ): colorGroup_mutation_response

  """
  update data of the table: "colorSet"
  """
  update_colorSet(
    """sets the columns of the filtered rows to the given values"""
    _set: colorSet_set_input

    """filter the rows which have to be updated"""
    where: colorSet_bool_exp!
  ): colorSet_mutation_response

  """
  update data of the table: "colorToColorSet"
  """
  update_colorToColorSet(
    """sets the columns of the filtered rows to the given values"""
    _set: colorToColorSet_set_input

    """filter the rows which have to be updated"""
    where: colorToColorSet_bool_exp!
  ): colorToColorSet_mutation_response

  """
  update data of the table: "component"
  """
  update_component(
    """sets the columns of the filtered rows to the given values"""
    _set: component_set_input

    """filter the rows which have to be updated"""
    where: component_bool_exp!
  ): component_mutation_response

  """
  update data of the table: "content"
  """
  update_content(
    """sets the columns of the filtered rows to the given values"""
    _set: content_set_input

    """filter the rows which have to be updated"""
    where: content_bool_exp!
  ): content_mutation_response

  """
  update data of the table: "documents"
  """
  update_documents(
    """sets the columns of the filtered rows to the given values"""
    _set: documents_set_input

    """filter the rows which have to be updated"""
    where: documents_bool_exp!
  ): documents_mutation_response

  """
  update data of the table: "image"
  """
  update_image(
    """sets the columns of the filtered rows to the given values"""
    _set: image_set_input

    """filter the rows which have to be updated"""
    where: image_bool_exp!
  ): image_mutation_response

  """
  update data of the table: "layout"
  """
  update_layout(
    """sets the columns of the filtered rows to the given values"""
    _set: layout_set_input

    """filter the rows which have to be updated"""
    where: layout_bool_exp!
  ): layout_mutation_response

  """
  update data of the table: "layoutToPosition"
  """
  update_layoutToPosition(
    """sets the columns of the filtered rows to the given values"""
    _set: layoutToPosition_set_input

    """filter the rows which have to be updated"""
    where: layoutToPosition_bool_exp!
  ): layoutToPosition_mutation_response

  """
  update data of the table: "level"
  """
  update_level(
    """sets the columns of the filtered rows to the given values"""
    _set: level_set_input

    """filter the rows which have to be updated"""
    where: level_bool_exp!
  ): level_mutation_response

  """
  update data of the table: "levelToLayout"
  """
  update_levelToLayout(
    """sets the columns of the filtered rows to the given values"""
    _set: levelToLayout_set_input

    """filter the rows which have to be updated"""
    where: levelToLayout_bool_exp!
  ): levelToLayout_mutation_response

  """
  update data of the table: "position"
  """
  update_position(
    """sets the columns of the filtered rows to the given values"""
    _set: position_set_input

    """filter the rows which have to be updated"""
    where: position_bool_exp!
  ): position_mutation_response

  """
  update data of the table: "project"
  """
  update_project(
    """sets the columns of the filtered rows to the given values"""
    _set: project_set_input

    """filter the rows which have to be updated"""
    where: project_bool_exp!
  ): project_mutation_response

  """
  update data of the table: "route"
  """
  update_route(
    """sets the columns of the filtered rows to the given values"""
    _set: route_set_input

    """filter the rows which have to be updated"""
    where: route_bool_exp!
  ): route_mutation_response

  """
  update data of the table: "routeToView"
  """
  update_routeToView(
    """sets the columns of the filtered rows to the given values"""
    _set: routeToView_set_input

    """filter the rows which have to be updated"""
    where: routeToView_bool_exp!
  ): routeToView_mutation_response

  """
  update data of the table: "state"
  """
  update_state(
    """sets the columns of the filtered rows to the given values"""
    _set: state_set_input

    """filter the rows which have to be updated"""
    where: state_bool_exp!
  ): state_mutation_response

  """
  update data of the table: "translation"
  """
  update_translation(
    """sets the columns of the filtered rows to the given values"""
    _set: translation_set_input

    """filter the rows which have to be updated"""
    where: translation_bool_exp!
  ): translation_mutation_response

  """
  update data of the table: "video"
  """
  update_video(
    """sets the columns of the filtered rows to the given values"""
    _set: video_set_input

    """filter the rows which have to be updated"""
    where: video_bool_exp!
  ): video_mutation_response

  """
  update data of the table: "view"
  """
  update_view(
    """sets the columns of the filtered rows to the given values"""
    _set: view_set_input

    """filter the rows which have to be updated"""
    where: view_bool_exp!
  ): view_mutation_response
}

scalar numeric

"""
expression to compare columns of type numeric. All fields are combined with logical 'AND'.
"""
input numeric_comparison_exp {
  _eq: numeric
  _gt: numeric
  _gte: numeric
  _in: [numeric]
  _is_null: Boolean
  _lt: numeric
  _lte: numeric
  _neq: numeric
  _nin: [numeric]
}

"""column ordering options"""
enum order_by {
  """in the ascending order, nulls last"""
  asc

  """in the ascending order, nulls first"""
  asc_nulls_first

  """in the ascending order, nulls last"""
  asc_nulls_last

  """in the descending order, nulls first"""
  desc

  """in the descending order, nulls first"""
  desc_nulls_first

  """in the descending order, nulls last"""
  desc_nulls_last
}

"""
columns and relationships of "position"
"""
type position {
  createdAt: timestamptz
  id: numeric!

  """An array relationship"""
  layoutToPositionsByPositionId(
    """distinct select on columns"""
    distinct_on: [layoutToPosition_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [layoutToPosition_order_by!]

    """filter the rows returned"""
    where: layoutToPosition_bool_exp
  ): [layoutToPosition!]!

  """An aggregated array relationship"""
  layoutToPositionsByPositionId_aggregate(
    """distinct select on columns"""
    distinct_on: [layoutToPosition_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [layoutToPosition_order_by!]

    """filter the rows returned"""
    where: layoutToPosition_bool_exp
  ): layoutToPosition_aggregate!
  name: String

  """An object relationship"""
  projectByProjectId: project
  project_id: numeric
  updatedAt: timestamptz
}

"""
aggregated selection of "position"
"""
type position_aggregate {
  aggregate: position_aggregate_fields
  nodes: [position!]!
}

"""
aggregate fields of "position"
"""
type position_aggregate_fields {
  avg: position_avg_fields
  count(columns: [position_select_column!], distinct: Boolean): Int
  max: position_max_fields
  min: position_min_fields
  stddev: position_stddev_fields
  stddev_pop: position_stddev_pop_fields
  stddev_samp: position_stddev_samp_fields
  sum: position_sum_fields
  var_pop: position_var_pop_fields
  var_samp: position_var_samp_fields
  variance: position_variance_fields
}

"""
order by aggregate values of table "position"
"""
input position_aggregate_order_by {
  avg: position_avg_order_by
  count: order_by
  max: position_max_order_by
  min: position_min_order_by
  stddev: position_stddev_order_by
  stddev_pop: position_stddev_pop_order_by
  stddev_samp: position_stddev_samp_order_by
  sum: position_sum_order_by
  var_pop: position_var_pop_order_by
  var_samp: position_var_samp_order_by
  variance: position_variance_order_by
}

"""
input type for inserting array relation for remote table "position"
"""
input position_arr_rel_insert_input {
  data: [position_insert_input!]!
  on_conflict: position_on_conflict
}

"""aggregate avg on columns"""
type position_avg_fields {
  id: Float
  project_id: Float
}

"""
order by avg() on columns of table "position"
"""
input position_avg_order_by {
  id: order_by
  project_id: order_by
}

"""
Boolean expression to filter rows from the table "position". All fields are combined with a logical 'AND'.
"""
input position_bool_exp {
  _and: [position_bool_exp]
  _not: position_bool_exp
  _or: [position_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: numeric_comparison_exp
  layoutToPositionsByPositionId: layoutToPosition_bool_exp
  name: text_comparison_exp
  projectByProjectId: project_bool_exp
  project_id: numeric_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "position"
"""
enum position_constraint {
  """unique or primary key constraint"""
  position_pkey
}

"""
input type for inserting data into table "position"
"""
input position_insert_input {
  createdAt: timestamptz
  id: numeric
  layoutToPositionsByPositionId: layoutToPosition_arr_rel_insert_input
  name: String
  projectByProjectId: project_obj_rel_insert_input
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type position_max_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by max() on columns of table "position"
"""
input position_max_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type position_min_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by min() on columns of table "position"
"""
input position_min_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "position"
"""
type position_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [position!]!
}

"""
input type for inserting object relation for remote table "position"
"""
input position_obj_rel_insert_input {
  data: position_insert_input!
  on_conflict: position_on_conflict
}

"""
on conflict condition type for table "position"
"""
input position_on_conflict {
  constraint: position_constraint!
  update_columns: [position_update_column!]!
}

"""
ordering options when selecting data from "position"
"""
input position_order_by {
  createdAt: order_by
  id: order_by
  layoutToPositionsByPositionId_aggregate: layoutToPosition_aggregate_order_by
  name: order_by
  projectByProjectId: project_order_by
  project_id: order_by
  updatedAt: order_by
}

"""
select columns of table "position"
"""
enum position_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""
input type for updating data in table "position"
"""
input position_set_input {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type position_stddev_fields {
  id: Float
  project_id: Float
}

"""
order by stddev() on columns of table "position"
"""
input position_stddev_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_pop on columns"""
type position_stddev_pop_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_pop() on columns of table "position"
"""
input position_stddev_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_samp on columns"""
type position_stddev_samp_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_samp() on columns of table "position"
"""
input position_stddev_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate sum on columns"""
type position_sum_fields {
  id: numeric
  project_id: numeric
}

"""
order by sum() on columns of table "position"
"""
input position_sum_order_by {
  id: order_by
  project_id: order_by
}

"""
update columns of table "position"
"""
enum position_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type position_var_pop_fields {
  id: Float
  project_id: Float
}

"""
order by var_pop() on columns of table "position"
"""
input position_var_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate var_samp on columns"""
type position_var_samp_fields {
  id: Float
  project_id: Float
}

"""
order by var_samp() on columns of table "position"
"""
input position_var_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate variance on columns"""
type position_variance_fields {
  id: Float
  project_id: Float
}

"""
order by variance() on columns of table "position"
"""
input position_variance_order_by {
  id: order_by
  project_id: order_by
}

"""
columns and relationships of "project"
"""
type project {
  """An array relationship"""
  audiosByProjectId(
    """distinct select on columns"""
    distinct_on: [audio_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [audio_order_by!]

    """filter the rows returned"""
    where: audio_bool_exp
  ): [audio!]!

  """An aggregated array relationship"""
  audiosByProjectId_aggregate(
    """distinct select on columns"""
    distinct_on: [audio_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [audio_order_by!]

    """filter the rows returned"""
    where: audio_bool_exp
  ): audio_aggregate!

  """An array relationship"""
  componentsByProjectId(
    """distinct select on columns"""
    distinct_on: [component_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_order_by!]

    """filter the rows returned"""
    where: component_bool_exp
  ): [component!]!

  """An aggregated array relationship"""
  componentsByProjectId_aggregate(
    """distinct select on columns"""
    distinct_on: [component_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_order_by!]

    """filter the rows returned"""
    where: component_bool_exp
  ): component_aggregate!

  """An array relationship"""
  contentsByProjectId(
    """distinct select on columns"""
    distinct_on: [content_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [content_order_by!]

    """filter the rows returned"""
    where: content_bool_exp
  ): [content!]!

  """An aggregated array relationship"""
  contentsByProjectId_aggregate(
    """distinct select on columns"""
    distinct_on: [content_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [content_order_by!]

    """filter the rows returned"""
    where: content_bool_exp
  ): content_aggregate!
  createdAt: timestamptz

  """An array relationship"""
  documentssByProjectId(
    """distinct select on columns"""
    distinct_on: [documents_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [documents_order_by!]

    """filter the rows returned"""
    where: documents_bool_exp
  ): [documents!]!

  """An aggregated array relationship"""
  documentssByProjectId_aggregate(
    """distinct select on columns"""
    distinct_on: [documents_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [documents_order_by!]

    """filter the rows returned"""
    where: documents_bool_exp
  ): documents_aggregate!
  id: numeric!

  """An array relationship"""
  imagesByProjectId(
    """distinct select on columns"""
    distinct_on: [image_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [image_order_by!]

    """filter the rows returned"""
    where: image_bool_exp
  ): [image!]!

  """An aggregated array relationship"""
  imagesByProjectId_aggregate(
    """distinct select on columns"""
    distinct_on: [image_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [image_order_by!]

    """filter the rows returned"""
    where: image_bool_exp
  ): image_aggregate!

  """An array relationship"""
  layoutsByProjectId(
    """distinct select on columns"""
    distinct_on: [layout_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [layout_order_by!]

    """filter the rows returned"""
    where: layout_bool_exp
  ): [layout!]!

  """An aggregated array relationship"""
  layoutsByProjectId_aggregate(
    """distinct select on columns"""
    distinct_on: [layout_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [layout_order_by!]

    """filter the rows returned"""
    where: layout_bool_exp
  ): layout_aggregate!

  """An array relationship"""
  levelsByProjectId(
    """distinct select on columns"""
    distinct_on: [level_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [level_order_by!]

    """filter the rows returned"""
    where: level_bool_exp
  ): [level!]!

  """An aggregated array relationship"""
  levelsByProjectId_aggregate(
    """distinct select on columns"""
    distinct_on: [level_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [level_order_by!]

    """filter the rows returned"""
    where: level_bool_exp
  ): level_aggregate!
  name: String

  """An array relationship"""
  positionsByProjectId(
    """distinct select on columns"""
    distinct_on: [position_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [position_order_by!]

    """filter the rows returned"""
    where: position_bool_exp
  ): [position!]!

  """An aggregated array relationship"""
  positionsByProjectId_aggregate(
    """distinct select on columns"""
    distinct_on: [position_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [position_order_by!]

    """filter the rows returned"""
    where: position_bool_exp
  ): position_aggregate!

  """An array relationship"""
  routesByProjectId(
    """distinct select on columns"""
    distinct_on: [route_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [route_order_by!]

    """filter the rows returned"""
    where: route_bool_exp
  ): [route!]!

  """An aggregated array relationship"""
  routesByProjectId_aggregate(
    """distinct select on columns"""
    distinct_on: [route_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [route_order_by!]

    """filter the rows returned"""
    where: route_bool_exp
  ): route_aggregate!

  """An array relationship"""
  statesByProjectId(
    """distinct select on columns"""
    distinct_on: [state_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [state_order_by!]

    """filter the rows returned"""
    where: state_bool_exp
  ): [state!]!

  """An aggregated array relationship"""
  statesByProjectId_aggregate(
    """distinct select on columns"""
    distinct_on: [state_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [state_order_by!]

    """filter the rows returned"""
    where: state_bool_exp
  ): state_aggregate!

  """An array relationship"""
  translationsByProjectId(
    """distinct select on columns"""
    distinct_on: [translation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [translation_order_by!]

    """filter the rows returned"""
    where: translation_bool_exp
  ): [translation!]!

  """An aggregated array relationship"""
  translationsByProjectId_aggregate(
    """distinct select on columns"""
    distinct_on: [translation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [translation_order_by!]

    """filter the rows returned"""
    where: translation_bool_exp
  ): translation_aggregate!
  updatedAt: timestamptz

  """An array relationship"""
  videosByProjectId(
    """distinct select on columns"""
    distinct_on: [video_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [video_order_by!]

    """filter the rows returned"""
    where: video_bool_exp
  ): [video!]!

  """An aggregated array relationship"""
  videosByProjectId_aggregate(
    """distinct select on columns"""
    distinct_on: [video_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [video_order_by!]

    """filter the rows returned"""
    where: video_bool_exp
  ): video_aggregate!

  """An array relationship"""
  viewsByProjectId(
    """distinct select on columns"""
    distinct_on: [view_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [view_order_by!]

    """filter the rows returned"""
    where: view_bool_exp
  ): [view!]!

  """An aggregated array relationship"""
  viewsByProjectId_aggregate(
    """distinct select on columns"""
    distinct_on: [view_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [view_order_by!]

    """filter the rows returned"""
    where: view_bool_exp
  ): view_aggregate!
}

"""
aggregated selection of "project"
"""
type project_aggregate {
  aggregate: project_aggregate_fields
  nodes: [project!]!
}

"""
aggregate fields of "project"
"""
type project_aggregate_fields {
  avg: project_avg_fields
  count(columns: [project_select_column!], distinct: Boolean): Int
  max: project_max_fields
  min: project_min_fields
  stddev: project_stddev_fields
  stddev_pop: project_stddev_pop_fields
  stddev_samp: project_stddev_samp_fields
  sum: project_sum_fields
  var_pop: project_var_pop_fields
  var_samp: project_var_samp_fields
  variance: project_variance_fields
}

"""
order by aggregate values of table "project"
"""
input project_aggregate_order_by {
  avg: project_avg_order_by
  count: order_by
  max: project_max_order_by
  min: project_min_order_by
  stddev: project_stddev_order_by
  stddev_pop: project_stddev_pop_order_by
  stddev_samp: project_stddev_samp_order_by
  sum: project_sum_order_by
  var_pop: project_var_pop_order_by
  var_samp: project_var_samp_order_by
  variance: project_variance_order_by
}

"""
input type for inserting array relation for remote table "project"
"""
input project_arr_rel_insert_input {
  data: [project_insert_input!]!
  on_conflict: project_on_conflict
}

"""aggregate avg on columns"""
type project_avg_fields {
  id: Float
}

"""
order by avg() on columns of table "project"
"""
input project_avg_order_by {
  id: order_by
}

"""
Boolean expression to filter rows from the table "project". All fields are combined with a logical 'AND'.
"""
input project_bool_exp {
  _and: [project_bool_exp]
  _not: project_bool_exp
  _or: [project_bool_exp]
  audiosByProjectId: audio_bool_exp
  componentsByProjectId: component_bool_exp
  contentsByProjectId: content_bool_exp
  createdAt: timestamptz_comparison_exp
  documentssByProjectId: documents_bool_exp
  id: numeric_comparison_exp
  imagesByProjectId: image_bool_exp
  layoutsByProjectId: layout_bool_exp
  levelsByProjectId: level_bool_exp
  name: text_comparison_exp
  positionsByProjectId: position_bool_exp
  routesByProjectId: route_bool_exp
  statesByProjectId: state_bool_exp
  translationsByProjectId: translation_bool_exp
  updatedAt: timestamptz_comparison_exp
  videosByProjectId: video_bool_exp
  viewsByProjectId: view_bool_exp
}

"""
unique or primary key constraints on table "project"
"""
enum project_constraint {
  """unique or primary key constraint"""
  project_pkey
}

"""
input type for inserting data into table "project"
"""
input project_insert_input {
  audiosByProjectId: audio_arr_rel_insert_input
  componentsByProjectId: component_arr_rel_insert_input
  contentsByProjectId: content_arr_rel_insert_input
  createdAt: timestamptz
  documentssByProjectId: documents_arr_rel_insert_input
  id: numeric
  imagesByProjectId: image_arr_rel_insert_input
  layoutsByProjectId: layout_arr_rel_insert_input
  levelsByProjectId: level_arr_rel_insert_input
  name: String
  positionsByProjectId: position_arr_rel_insert_input
  routesByProjectId: route_arr_rel_insert_input
  statesByProjectId: state_arr_rel_insert_input
  translationsByProjectId: translation_arr_rel_insert_input
  updatedAt: timestamptz
  videosByProjectId: video_arr_rel_insert_input
  viewsByProjectId: view_arr_rel_insert_input
}

"""aggregate max on columns"""
type project_max_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  updatedAt: timestamptz
}

"""
order by max() on columns of table "project"
"""
input project_max_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type project_min_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  updatedAt: timestamptz
}

"""
order by min() on columns of table "project"
"""
input project_min_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "project"
"""
type project_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [project!]!
}

"""
input type for inserting object relation for remote table "project"
"""
input project_obj_rel_insert_input {
  data: project_insert_input!
  on_conflict: project_on_conflict
}

"""
on conflict condition type for table "project"
"""
input project_on_conflict {
  constraint: project_constraint!
  update_columns: [project_update_column!]!
}

"""
ordering options when selecting data from "project"
"""
input project_order_by {
  audiosByProjectId_aggregate: audio_aggregate_order_by
  componentsByProjectId_aggregate: component_aggregate_order_by
  contentsByProjectId_aggregate: content_aggregate_order_by
  createdAt: order_by
  documentssByProjectId_aggregate: documents_aggregate_order_by
  id: order_by
  imagesByProjectId_aggregate: image_aggregate_order_by
  layoutsByProjectId_aggregate: layout_aggregate_order_by
  levelsByProjectId_aggregate: level_aggregate_order_by
  name: order_by
  positionsByProjectId_aggregate: position_aggregate_order_by
  routesByProjectId_aggregate: route_aggregate_order_by
  statesByProjectId_aggregate: state_aggregate_order_by
  translationsByProjectId_aggregate: translation_aggregate_order_by
  updatedAt: order_by
  videosByProjectId_aggregate: video_aggregate_order_by
  viewsByProjectId_aggregate: view_aggregate_order_by
}

"""
select columns of table "project"
"""
enum project_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updatedAt
}

"""
input type for updating data in table "project"
"""
input project_set_input {
  createdAt: timestamptz
  id: numeric
  name: String
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type project_stddev_fields {
  id: Float
}

"""
order by stddev() on columns of table "project"
"""
input project_stddev_order_by {
  id: order_by
}

"""aggregate stddev_pop on columns"""
type project_stddev_pop_fields {
  id: Float
}

"""
order by stddev_pop() on columns of table "project"
"""
input project_stddev_pop_order_by {
  id: order_by
}

"""aggregate stddev_samp on columns"""
type project_stddev_samp_fields {
  id: Float
}

"""
order by stddev_samp() on columns of table "project"
"""
input project_stddev_samp_order_by {
  id: order_by
}

"""aggregate sum on columns"""
type project_sum_fields {
  id: numeric
}

"""
order by sum() on columns of table "project"
"""
input project_sum_order_by {
  id: order_by
}

"""
update columns of table "project"
"""
enum project_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type project_var_pop_fields {
  id: Float
}

"""
order by var_pop() on columns of table "project"
"""
input project_var_pop_order_by {
  id: order_by
}

"""aggregate var_samp on columns"""
type project_var_samp_fields {
  id: Float
}

"""
order by var_samp() on columns of table "project"
"""
input project_var_samp_order_by {
  id: order_by
}

"""aggregate variance on columns"""
type project_variance_fields {
  id: Float
}

"""
order by variance() on columns of table "project"
"""
input project_variance_order_by {
  id: order_by
}

"""query root"""
type query_root {
  """
  fetch data from the table: "audio"
  """
  audio(
    """distinct select on columns"""
    distinct_on: [audio_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [audio_order_by!]

    """filter the rows returned"""
    where: audio_bool_exp
  ): [audio!]!

  """
  fetch aggregated fields from the table: "audio"
  """
  audio_aggregate(
    """distinct select on columns"""
    distinct_on: [audio_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [audio_order_by!]

    """filter the rows returned"""
    where: audio_bool_exp
  ): audio_aggregate!

  """fetch data from the table: "audio" using primary key columns"""
  audio_by_pk(id: numeric!): audio

  """
  fetch data from the table: "color"
  """
  color(
    """distinct select on columns"""
    distinct_on: [color_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [color_order_by!]

    """filter the rows returned"""
    where: color_bool_exp
  ): [color!]!

  """
  fetch data from the table: "colorFormat"
  """
  colorFormat(
    """distinct select on columns"""
    distinct_on: [colorFormat_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorFormat_order_by!]

    """filter the rows returned"""
    where: colorFormat_bool_exp
  ): [colorFormat!]!

  """
  fetch aggregated fields from the table: "colorFormat"
  """
  colorFormat_aggregate(
    """distinct select on columns"""
    distinct_on: [colorFormat_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorFormat_order_by!]

    """filter the rows returned"""
    where: colorFormat_bool_exp
  ): colorFormat_aggregate!

  """fetch data from the table: "colorFormat" using primary key columns"""
  colorFormat_by_pk(id: numeric!): colorFormat

  """
  fetch data from the table: "colorGroup"
  """
  colorGroup(
    """distinct select on columns"""
    distinct_on: [colorGroup_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorGroup_order_by!]

    """filter the rows returned"""
    where: colorGroup_bool_exp
  ): [colorGroup!]!

  """
  fetch aggregated fields from the table: "colorGroup"
  """
  colorGroup_aggregate(
    """distinct select on columns"""
    distinct_on: [colorGroup_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorGroup_order_by!]

    """filter the rows returned"""
    where: colorGroup_bool_exp
  ): colorGroup_aggregate!

  """fetch data from the table: "colorGroup" using primary key columns"""
  colorGroup_by_pk(id: numeric!): colorGroup

  """
  fetch data from the table: "colorSet"
  """
  colorSet(
    """distinct select on columns"""
    distinct_on: [colorSet_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorSet_order_by!]

    """filter the rows returned"""
    where: colorSet_bool_exp
  ): [colorSet!]!

  """
  fetch aggregated fields from the table: "colorSet"
  """
  colorSet_aggregate(
    """distinct select on columns"""
    distinct_on: [colorSet_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorSet_order_by!]

    """filter the rows returned"""
    where: colorSet_bool_exp
  ): colorSet_aggregate!

  """fetch data from the table: "colorSet" using primary key columns"""
  colorSet_by_pk(id: numeric!): colorSet

  """
  fetch data from the table: "colorToColorSet"
  """
  colorToColorSet(
    """distinct select on columns"""
    distinct_on: [colorToColorSet_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorToColorSet_order_by!]

    """filter the rows returned"""
    where: colorToColorSet_bool_exp
  ): [colorToColorSet!]!

  """
  fetch aggregated fields from the table: "colorToColorSet"
  """
  colorToColorSet_aggregate(
    """distinct select on columns"""
    distinct_on: [colorToColorSet_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorToColorSet_order_by!]

    """filter the rows returned"""
    where: colorToColorSet_bool_exp
  ): colorToColorSet_aggregate!

  """
  fetch data from the table: "colorToColorSet" using primary key columns
  """
  colorToColorSet_by_pk(id: numeric!): colorToColorSet

  """
  fetch aggregated fields from the table: "color"
  """
  color_aggregate(
    """distinct select on columns"""
    distinct_on: [color_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [color_order_by!]

    """filter the rows returned"""
    where: color_bool_exp
  ): color_aggregate!

  """fetch data from the table: "color" using primary key columns"""
  color_by_pk(id: numeric!): color

  """
  fetch data from the table: "component"
  """
  component(
    """distinct select on columns"""
    distinct_on: [component_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_order_by!]

    """filter the rows returned"""
    where: component_bool_exp
  ): [component!]!

  """
  fetch aggregated fields from the table: "component"
  """
  component_aggregate(
    """distinct select on columns"""
    distinct_on: [component_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_order_by!]

    """filter the rows returned"""
    where: component_bool_exp
  ): component_aggregate!

  """fetch data from the table: "component" using primary key columns"""
  component_by_pk(id: numeric!): component

  """
  fetch data from the table: "content"
  """
  content(
    """distinct select on columns"""
    distinct_on: [content_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [content_order_by!]

    """filter the rows returned"""
    where: content_bool_exp
  ): [content!]!

  """
  fetch aggregated fields from the table: "content"
  """
  content_aggregate(
    """distinct select on columns"""
    distinct_on: [content_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [content_order_by!]

    """filter the rows returned"""
    where: content_bool_exp
  ): content_aggregate!

  """fetch data from the table: "content" using primary key columns"""
  content_by_pk(id: numeric!): content

  """
  fetch data from the table: "documents"
  """
  documents(
    """distinct select on columns"""
    distinct_on: [documents_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [documents_order_by!]

    """filter the rows returned"""
    where: documents_bool_exp
  ): [documents!]!

  """
  fetch aggregated fields from the table: "documents"
  """
  documents_aggregate(
    """distinct select on columns"""
    distinct_on: [documents_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [documents_order_by!]

    """filter the rows returned"""
    where: documents_bool_exp
  ): documents_aggregate!

  """fetch data from the table: "documents" using primary key columns"""
  documents_by_pk(id: numeric!): documents

  """
  fetch data from the table: "image"
  """
  image(
    """distinct select on columns"""
    distinct_on: [image_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [image_order_by!]

    """filter the rows returned"""
    where: image_bool_exp
  ): [image!]!

  """
  fetch aggregated fields from the table: "image"
  """
  image_aggregate(
    """distinct select on columns"""
    distinct_on: [image_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [image_order_by!]

    """filter the rows returned"""
    where: image_bool_exp
  ): image_aggregate!

  """fetch data from the table: "image" using primary key columns"""
  image_by_pk(id: numeric!): image

  """
  fetch data from the table: "layout"
  """
  layout(
    """distinct select on columns"""
    distinct_on: [layout_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [layout_order_by!]

    """filter the rows returned"""
    where: layout_bool_exp
  ): [layout!]!

  """
  fetch data from the table: "layoutToPosition"
  """
  layoutToPosition(
    """distinct select on columns"""
    distinct_on: [layoutToPosition_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [layoutToPosition_order_by!]

    """filter the rows returned"""
    where: layoutToPosition_bool_exp
  ): [layoutToPosition!]!

  """
  fetch aggregated fields from the table: "layoutToPosition"
  """
  layoutToPosition_aggregate(
    """distinct select on columns"""
    distinct_on: [layoutToPosition_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [layoutToPosition_order_by!]

    """filter the rows returned"""
    where: layoutToPosition_bool_exp
  ): layoutToPosition_aggregate!

  """
  fetch data from the table: "layoutToPosition" using primary key columns
  """
  layoutToPosition_by_pk(id: numeric!): layoutToPosition

  """
  fetch aggregated fields from the table: "layout"
  """
  layout_aggregate(
    """distinct select on columns"""
    distinct_on: [layout_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [layout_order_by!]

    """filter the rows returned"""
    where: layout_bool_exp
  ): layout_aggregate!

  """fetch data from the table: "layout" using primary key columns"""
  layout_by_pk(id: numeric!): layout

  """
  fetch data from the table: "level"
  """
  level(
    """distinct select on columns"""
    distinct_on: [level_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [level_order_by!]

    """filter the rows returned"""
    where: level_bool_exp
  ): [level!]!

  """
  fetch data from the table: "levelToLayout"
  """
  levelToLayout(
    """distinct select on columns"""
    distinct_on: [levelToLayout_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [levelToLayout_order_by!]

    """filter the rows returned"""
    where: levelToLayout_bool_exp
  ): [levelToLayout!]!

  """
  fetch aggregated fields from the table: "levelToLayout"
  """
  levelToLayout_aggregate(
    """distinct select on columns"""
    distinct_on: [levelToLayout_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [levelToLayout_order_by!]

    """filter the rows returned"""
    where: levelToLayout_bool_exp
  ): levelToLayout_aggregate!

  """fetch data from the table: "levelToLayout" using primary key columns"""
  levelToLayout_by_pk(id: numeric!): levelToLayout

  """
  fetch aggregated fields from the table: "level"
  """
  level_aggregate(
    """distinct select on columns"""
    distinct_on: [level_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [level_order_by!]

    """filter the rows returned"""
    where: level_bool_exp
  ): level_aggregate!

  """fetch data from the table: "level" using primary key columns"""
  level_by_pk(id: numeric!): level

  """
  fetch data from the table: "position"
  """
  position(
    """distinct select on columns"""
    distinct_on: [position_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [position_order_by!]

    """filter the rows returned"""
    where: position_bool_exp
  ): [position!]!

  """
  fetch aggregated fields from the table: "position"
  """
  position_aggregate(
    """distinct select on columns"""
    distinct_on: [position_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [position_order_by!]

    """filter the rows returned"""
    where: position_bool_exp
  ): position_aggregate!

  """fetch data from the table: "position" using primary key columns"""
  position_by_pk(id: numeric!): position

  """
  fetch data from the table: "project"
  """
  project(
    """distinct select on columns"""
    distinct_on: [project_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_order_by!]

    """filter the rows returned"""
    where: project_bool_exp
  ): [project!]!

  """
  fetch aggregated fields from the table: "project"
  """
  project_aggregate(
    """distinct select on columns"""
    distinct_on: [project_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_order_by!]

    """filter the rows returned"""
    where: project_bool_exp
  ): project_aggregate!

  """fetch data from the table: "project" using primary key columns"""
  project_by_pk(id: numeric!): project

  """
  fetch data from the table: "route"
  """
  route(
    """distinct select on columns"""
    distinct_on: [route_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [route_order_by!]

    """filter the rows returned"""
    where: route_bool_exp
  ): [route!]!

  """
  fetch data from the table: "routeToView"
  """
  routeToView(
    """distinct select on columns"""
    distinct_on: [routeToView_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [routeToView_order_by!]

    """filter the rows returned"""
    where: routeToView_bool_exp
  ): [routeToView!]!

  """
  fetch aggregated fields from the table: "routeToView"
  """
  routeToView_aggregate(
    """distinct select on columns"""
    distinct_on: [routeToView_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [routeToView_order_by!]

    """filter the rows returned"""
    where: routeToView_bool_exp
  ): routeToView_aggregate!

  """fetch data from the table: "routeToView" using primary key columns"""
  routeToView_by_pk(id: numeric!): routeToView

  """
  fetch aggregated fields from the table: "route"
  """
  route_aggregate(
    """distinct select on columns"""
    distinct_on: [route_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [route_order_by!]

    """filter the rows returned"""
    where: route_bool_exp
  ): route_aggregate!

  """fetch data from the table: "route" using primary key columns"""
  route_by_pk(id: numeric!): route

  """
  fetch data from the table: "state"
  """
  state(
    """distinct select on columns"""
    distinct_on: [state_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [state_order_by!]

    """filter the rows returned"""
    where: state_bool_exp
  ): [state!]!

  """
  fetch aggregated fields from the table: "state"
  """
  state_aggregate(
    """distinct select on columns"""
    distinct_on: [state_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [state_order_by!]

    """filter the rows returned"""
    where: state_bool_exp
  ): state_aggregate!

  """fetch data from the table: "state" using primary key columns"""
  state_by_pk(id: numeric!): state

  """
  fetch data from the table: "translation"
  """
  translation(
    """distinct select on columns"""
    distinct_on: [translation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [translation_order_by!]

    """filter the rows returned"""
    where: translation_bool_exp
  ): [translation!]!

  """
  fetch aggregated fields from the table: "translation"
  """
  translation_aggregate(
    """distinct select on columns"""
    distinct_on: [translation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [translation_order_by!]

    """filter the rows returned"""
    where: translation_bool_exp
  ): translation_aggregate!

  """fetch data from the table: "translation" using primary key columns"""
  translation_by_pk(id: numeric!): translation

  """
  fetch data from the table: "video"
  """
  video(
    """distinct select on columns"""
    distinct_on: [video_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [video_order_by!]

    """filter the rows returned"""
    where: video_bool_exp
  ): [video!]!

  """
  fetch aggregated fields from the table: "video"
  """
  video_aggregate(
    """distinct select on columns"""
    distinct_on: [video_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [video_order_by!]

    """filter the rows returned"""
    where: video_bool_exp
  ): video_aggregate!

  """fetch data from the table: "video" using primary key columns"""
  video_by_pk(id: numeric!): video

  """
  fetch data from the table: "view"
  """
  view(
    """distinct select on columns"""
    distinct_on: [view_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [view_order_by!]

    """filter the rows returned"""
    where: view_bool_exp
  ): [view!]!

  """
  fetch aggregated fields from the table: "view"
  """
  view_aggregate(
    """distinct select on columns"""
    distinct_on: [view_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [view_order_by!]

    """filter the rows returned"""
    where: view_bool_exp
  ): view_aggregate!

  """fetch data from the table: "view" using primary key columns"""
  view_by_pk(id: numeric!): view
}

"""
columns and relationships of "route"
"""
type route {
  attr: String
  createdAt: timestamptz
  id: numeric!
  name: String
  path: String

  """An object relationship"""
  projectByProjectId: project
  project_id: numeric

  """An array relationship"""
  routeToViewsByRouteId(
    """distinct select on columns"""
    distinct_on: [routeToView_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [routeToView_order_by!]

    """filter the rows returned"""
    where: routeToView_bool_exp
  ): [routeToView!]!

  """An aggregated array relationship"""
  routeToViewsByRouteId_aggregate(
    """distinct select on columns"""
    distinct_on: [routeToView_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [routeToView_order_by!]

    """filter the rows returned"""
    where: routeToView_bool_exp
  ): routeToView_aggregate!
  updatedAt: timestamptz
}

"""
aggregated selection of "route"
"""
type route_aggregate {
  aggregate: route_aggregate_fields
  nodes: [route!]!
}

"""
aggregate fields of "route"
"""
type route_aggregate_fields {
  avg: route_avg_fields
  count(columns: [route_select_column!], distinct: Boolean): Int
  max: route_max_fields
  min: route_min_fields
  stddev: route_stddev_fields
  stddev_pop: route_stddev_pop_fields
  stddev_samp: route_stddev_samp_fields
  sum: route_sum_fields
  var_pop: route_var_pop_fields
  var_samp: route_var_samp_fields
  variance: route_variance_fields
}

"""
order by aggregate values of table "route"
"""
input route_aggregate_order_by {
  avg: route_avg_order_by
  count: order_by
  max: route_max_order_by
  min: route_min_order_by
  stddev: route_stddev_order_by
  stddev_pop: route_stddev_pop_order_by
  stddev_samp: route_stddev_samp_order_by
  sum: route_sum_order_by
  var_pop: route_var_pop_order_by
  var_samp: route_var_samp_order_by
  variance: route_variance_order_by
}

"""
input type for inserting array relation for remote table "route"
"""
input route_arr_rel_insert_input {
  data: [route_insert_input!]!
  on_conflict: route_on_conflict
}

"""aggregate avg on columns"""
type route_avg_fields {
  id: Float
  project_id: Float
}

"""
order by avg() on columns of table "route"
"""
input route_avg_order_by {
  id: order_by
  project_id: order_by
}

"""
Boolean expression to filter rows from the table "route". All fields are combined with a logical 'AND'.
"""
input route_bool_exp {
  _and: [route_bool_exp]
  _not: route_bool_exp
  _or: [route_bool_exp]
  attr: text_comparison_exp
  createdAt: timestamptz_comparison_exp
  id: numeric_comparison_exp
  name: text_comparison_exp
  path: text_comparison_exp
  projectByProjectId: project_bool_exp
  project_id: numeric_comparison_exp
  routeToViewsByRouteId: routeToView_bool_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "route"
"""
enum route_constraint {
  """unique or primary key constraint"""
  route_pkey
}

"""
input type for inserting data into table "route"
"""
input route_insert_input {
  attr: String
  createdAt: timestamptz
  id: numeric
  name: String
  path: String
  projectByProjectId: project_obj_rel_insert_input
  project_id: numeric
  routeToViewsByRouteId: routeToView_arr_rel_insert_input
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type route_max_fields {
  attr: String
  createdAt: timestamptz
  id: numeric
  name: String
  path: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by max() on columns of table "route"
"""
input route_max_order_by {
  attr: order_by
  createdAt: order_by
  id: order_by
  name: order_by
  path: order_by
  project_id: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type route_min_fields {
  attr: String
  createdAt: timestamptz
  id: numeric
  name: String
  path: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by min() on columns of table "route"
"""
input route_min_order_by {
  attr: order_by
  createdAt: order_by
  id: order_by
  name: order_by
  path: order_by
  project_id: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "route"
"""
type route_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [route!]!
}

"""
input type for inserting object relation for remote table "route"
"""
input route_obj_rel_insert_input {
  data: route_insert_input!
  on_conflict: route_on_conflict
}

"""
on conflict condition type for table "route"
"""
input route_on_conflict {
  constraint: route_constraint!
  update_columns: [route_update_column!]!
}

"""
ordering options when selecting data from "route"
"""
input route_order_by {
  attr: order_by
  createdAt: order_by
  id: order_by
  name: order_by
  path: order_by
  projectByProjectId: project_order_by
  project_id: order_by
  routeToViewsByRouteId_aggregate: routeToView_aggregate_order_by
  updatedAt: order_by
}

"""
select columns of table "route"
"""
enum route_select_column {
  """column name"""
  attr

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  path

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""
input type for updating data in table "route"
"""
input route_set_input {
  attr: String
  createdAt: timestamptz
  id: numeric
  name: String
  path: String
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type route_stddev_fields {
  id: Float
  project_id: Float
}

"""
order by stddev() on columns of table "route"
"""
input route_stddev_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_pop on columns"""
type route_stddev_pop_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_pop() on columns of table "route"
"""
input route_stddev_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_samp on columns"""
type route_stddev_samp_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_samp() on columns of table "route"
"""
input route_stddev_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate sum on columns"""
type route_sum_fields {
  id: numeric
  project_id: numeric
}

"""
order by sum() on columns of table "route"
"""
input route_sum_order_by {
  id: order_by
  project_id: order_by
}

"""
update columns of table "route"
"""
enum route_update_column {
  """column name"""
  attr

  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  path

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type route_var_pop_fields {
  id: Float
  project_id: Float
}

"""
order by var_pop() on columns of table "route"
"""
input route_var_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate var_samp on columns"""
type route_var_samp_fields {
  id: Float
  project_id: Float
}

"""
order by var_samp() on columns of table "route"
"""
input route_var_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate variance on columns"""
type route_variance_fields {
  id: Float
  project_id: Float
}

"""
order by variance() on columns of table "route"
"""
input route_variance_order_by {
  id: order_by
  project_id: order_by
}

"""
columns and relationships of "routeToView"
"""
type routeToView {
  createdAt: timestamptz
  id: numeric!
  name: String

  """An object relationship"""
  routeByRouteId: route
  route_id: numeric
  updatedAt: timestamptz

  """An object relationship"""
  viewByViewId: view
  view_id: numeric
}

"""
aggregated selection of "routeToView"
"""
type routeToView_aggregate {
  aggregate: routeToView_aggregate_fields
  nodes: [routeToView!]!
}

"""
aggregate fields of "routeToView"
"""
type routeToView_aggregate_fields {
  avg: routeToView_avg_fields
  count(columns: [routeToView_select_column!], distinct: Boolean): Int
  max: routeToView_max_fields
  min: routeToView_min_fields
  stddev: routeToView_stddev_fields
  stddev_pop: routeToView_stddev_pop_fields
  stddev_samp: routeToView_stddev_samp_fields
  sum: routeToView_sum_fields
  var_pop: routeToView_var_pop_fields
  var_samp: routeToView_var_samp_fields
  variance: routeToView_variance_fields
}

"""
order by aggregate values of table "routeToView"
"""
input routeToView_aggregate_order_by {
  avg: routeToView_avg_order_by
  count: order_by
  max: routeToView_max_order_by
  min: routeToView_min_order_by
  stddev: routeToView_stddev_order_by
  stddev_pop: routeToView_stddev_pop_order_by
  stddev_samp: routeToView_stddev_samp_order_by
  sum: routeToView_sum_order_by
  var_pop: routeToView_var_pop_order_by
  var_samp: routeToView_var_samp_order_by
  variance: routeToView_variance_order_by
}

"""
input type for inserting array relation for remote table "routeToView"
"""
input routeToView_arr_rel_insert_input {
  data: [routeToView_insert_input!]!
  on_conflict: routeToView_on_conflict
}

"""aggregate avg on columns"""
type routeToView_avg_fields {
  id: Float
  route_id: Float
  view_id: Float
}

"""
order by avg() on columns of table "routeToView"
"""
input routeToView_avg_order_by {
  id: order_by
  route_id: order_by
  view_id: order_by
}

"""
Boolean expression to filter rows from the table "routeToView". All fields are combined with a logical 'AND'.
"""
input routeToView_bool_exp {
  _and: [routeToView_bool_exp]
  _not: routeToView_bool_exp
  _or: [routeToView_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: numeric_comparison_exp
  name: text_comparison_exp
  routeByRouteId: route_bool_exp
  route_id: numeric_comparison_exp
  updatedAt: timestamptz_comparison_exp
  viewByViewId: view_bool_exp
  view_id: numeric_comparison_exp
}

"""
unique or primary key constraints on table "routeToView"
"""
enum routeToView_constraint {
  """unique or primary key constraint"""
  routeToView_pkey
}

"""
input type for inserting data into table "routeToView"
"""
input routeToView_insert_input {
  createdAt: timestamptz
  id: numeric
  name: String
  routeByRouteId: route_obj_rel_insert_input
  route_id: numeric
  updatedAt: timestamptz
  viewByViewId: view_obj_rel_insert_input
  view_id: numeric
}

"""aggregate max on columns"""
type routeToView_max_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  route_id: numeric
  updatedAt: timestamptz
  view_id: numeric
}

"""
order by max() on columns of table "routeToView"
"""
input routeToView_max_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  route_id: order_by
  updatedAt: order_by
  view_id: order_by
}

"""aggregate min on columns"""
type routeToView_min_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  route_id: numeric
  updatedAt: timestamptz
  view_id: numeric
}

"""
order by min() on columns of table "routeToView"
"""
input routeToView_min_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  route_id: order_by
  updatedAt: order_by
  view_id: order_by
}

"""
response of any mutation on the table "routeToView"
"""
type routeToView_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [routeToView!]!
}

"""
input type for inserting object relation for remote table "routeToView"
"""
input routeToView_obj_rel_insert_input {
  data: routeToView_insert_input!
  on_conflict: routeToView_on_conflict
}

"""
on conflict condition type for table "routeToView"
"""
input routeToView_on_conflict {
  constraint: routeToView_constraint!
  update_columns: [routeToView_update_column!]!
}

"""
ordering options when selecting data from "routeToView"
"""
input routeToView_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  routeByRouteId: route_order_by
  route_id: order_by
  updatedAt: order_by
  viewByViewId: view_order_by
  view_id: order_by
}

"""
select columns of table "routeToView"
"""
enum routeToView_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  route_id

  """column name"""
  updatedAt

  """column name"""
  view_id
}

"""
input type for updating data in table "routeToView"
"""
input routeToView_set_input {
  createdAt: timestamptz
  id: numeric
  name: String
  route_id: numeric
  updatedAt: timestamptz
  view_id: numeric
}

"""aggregate stddev on columns"""
type routeToView_stddev_fields {
  id: Float
  route_id: Float
  view_id: Float
}

"""
order by stddev() on columns of table "routeToView"
"""
input routeToView_stddev_order_by {
  id: order_by
  route_id: order_by
  view_id: order_by
}

"""aggregate stddev_pop on columns"""
type routeToView_stddev_pop_fields {
  id: Float
  route_id: Float
  view_id: Float
}

"""
order by stddev_pop() on columns of table "routeToView"
"""
input routeToView_stddev_pop_order_by {
  id: order_by
  route_id: order_by
  view_id: order_by
}

"""aggregate stddev_samp on columns"""
type routeToView_stddev_samp_fields {
  id: Float
  route_id: Float
  view_id: Float
}

"""
order by stddev_samp() on columns of table "routeToView"
"""
input routeToView_stddev_samp_order_by {
  id: order_by
  route_id: order_by
  view_id: order_by
}

"""aggregate sum on columns"""
type routeToView_sum_fields {
  id: numeric
  route_id: numeric
  view_id: numeric
}

"""
order by sum() on columns of table "routeToView"
"""
input routeToView_sum_order_by {
  id: order_by
  route_id: order_by
  view_id: order_by
}

"""
update columns of table "routeToView"
"""
enum routeToView_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  route_id

  """column name"""
  updatedAt

  """column name"""
  view_id
}

"""aggregate var_pop on columns"""
type routeToView_var_pop_fields {
  id: Float
  route_id: Float
  view_id: Float
}

"""
order by var_pop() on columns of table "routeToView"
"""
input routeToView_var_pop_order_by {
  id: order_by
  route_id: order_by
  view_id: order_by
}

"""aggregate var_samp on columns"""
type routeToView_var_samp_fields {
  id: Float
  route_id: Float
  view_id: Float
}

"""
order by var_samp() on columns of table "routeToView"
"""
input routeToView_var_samp_order_by {
  id: order_by
  route_id: order_by
  view_id: order_by
}

"""aggregate variance on columns"""
type routeToView_variance_fields {
  id: Float
  route_id: Float
  view_id: Float
}

"""
order by variance() on columns of table "routeToView"
"""
input routeToView_variance_order_by {
  id: order_by
  route_id: order_by
  view_id: order_by
}

"""
columns and relationships of "state"
"""
type state {
  createdAt: timestamptz
  id: numeric!
  name: String

  """An object relationship"""
  projectByProjectId: project
  project_id: numeric
  updatedAt: timestamptz
}

"""
aggregated selection of "state"
"""
type state_aggregate {
  aggregate: state_aggregate_fields
  nodes: [state!]!
}

"""
aggregate fields of "state"
"""
type state_aggregate_fields {
  avg: state_avg_fields
  count(columns: [state_select_column!], distinct: Boolean): Int
  max: state_max_fields
  min: state_min_fields
  stddev: state_stddev_fields
  stddev_pop: state_stddev_pop_fields
  stddev_samp: state_stddev_samp_fields
  sum: state_sum_fields
  var_pop: state_var_pop_fields
  var_samp: state_var_samp_fields
  variance: state_variance_fields
}

"""
order by aggregate values of table "state"
"""
input state_aggregate_order_by {
  avg: state_avg_order_by
  count: order_by
  max: state_max_order_by
  min: state_min_order_by
  stddev: state_stddev_order_by
  stddev_pop: state_stddev_pop_order_by
  stddev_samp: state_stddev_samp_order_by
  sum: state_sum_order_by
  var_pop: state_var_pop_order_by
  var_samp: state_var_samp_order_by
  variance: state_variance_order_by
}

"""
input type for inserting array relation for remote table "state"
"""
input state_arr_rel_insert_input {
  data: [state_insert_input!]!
  on_conflict: state_on_conflict
}

"""aggregate avg on columns"""
type state_avg_fields {
  id: Float
  project_id: Float
}

"""
order by avg() on columns of table "state"
"""
input state_avg_order_by {
  id: order_by
  project_id: order_by
}

"""
Boolean expression to filter rows from the table "state". All fields are combined with a logical 'AND'.
"""
input state_bool_exp {
  _and: [state_bool_exp]
  _not: state_bool_exp
  _or: [state_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: numeric_comparison_exp
  name: text_comparison_exp
  projectByProjectId: project_bool_exp
  project_id: numeric_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "state"
"""
enum state_constraint {
  """unique or primary key constraint"""
  state_pkey
}

"""
input type for inserting data into table "state"
"""
input state_insert_input {
  createdAt: timestamptz
  id: numeric
  name: String
  projectByProjectId: project_obj_rel_insert_input
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type state_max_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by max() on columns of table "state"
"""
input state_max_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type state_min_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by min() on columns of table "state"
"""
input state_min_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "state"
"""
type state_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [state!]!
}

"""
input type for inserting object relation for remote table "state"
"""
input state_obj_rel_insert_input {
  data: state_insert_input!
  on_conflict: state_on_conflict
}

"""
on conflict condition type for table "state"
"""
input state_on_conflict {
  constraint: state_constraint!
  update_columns: [state_update_column!]!
}

"""
ordering options when selecting data from "state"
"""
input state_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  projectByProjectId: project_order_by
  project_id: order_by
  updatedAt: order_by
}

"""
select columns of table "state"
"""
enum state_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""
input type for updating data in table "state"
"""
input state_set_input {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type state_stddev_fields {
  id: Float
  project_id: Float
}

"""
order by stddev() on columns of table "state"
"""
input state_stddev_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_pop on columns"""
type state_stddev_pop_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_pop() on columns of table "state"
"""
input state_stddev_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_samp on columns"""
type state_stddev_samp_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_samp() on columns of table "state"
"""
input state_stddev_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate sum on columns"""
type state_sum_fields {
  id: numeric
  project_id: numeric
}

"""
order by sum() on columns of table "state"
"""
input state_sum_order_by {
  id: order_by
  project_id: order_by
}

"""
update columns of table "state"
"""
enum state_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type state_var_pop_fields {
  id: Float
  project_id: Float
}

"""
order by var_pop() on columns of table "state"
"""
input state_var_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate var_samp on columns"""
type state_var_samp_fields {
  id: Float
  project_id: Float
}

"""
order by var_samp() on columns of table "state"
"""
input state_var_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate variance on columns"""
type state_variance_fields {
  id: Float
  project_id: Float
}

"""
order by variance() on columns of table "state"
"""
input state_variance_order_by {
  id: order_by
  project_id: order_by
}

"""subscription root"""
type subscription_root {
  """
  fetch data from the table: "audio"
  """
  audio(
    """distinct select on columns"""
    distinct_on: [audio_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [audio_order_by!]

    """filter the rows returned"""
    where: audio_bool_exp
  ): [audio!]!

  """
  fetch aggregated fields from the table: "audio"
  """
  audio_aggregate(
    """distinct select on columns"""
    distinct_on: [audio_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [audio_order_by!]

    """filter the rows returned"""
    where: audio_bool_exp
  ): audio_aggregate!

  """fetch data from the table: "audio" using primary key columns"""
  audio_by_pk(id: numeric!): audio

  """
  fetch data from the table: "color"
  """
  color(
    """distinct select on columns"""
    distinct_on: [color_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [color_order_by!]

    """filter the rows returned"""
    where: color_bool_exp
  ): [color!]!

  """
  fetch data from the table: "colorFormat"
  """
  colorFormat(
    """distinct select on columns"""
    distinct_on: [colorFormat_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorFormat_order_by!]

    """filter the rows returned"""
    where: colorFormat_bool_exp
  ): [colorFormat!]!

  """
  fetch aggregated fields from the table: "colorFormat"
  """
  colorFormat_aggregate(
    """distinct select on columns"""
    distinct_on: [colorFormat_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorFormat_order_by!]

    """filter the rows returned"""
    where: colorFormat_bool_exp
  ): colorFormat_aggregate!

  """fetch data from the table: "colorFormat" using primary key columns"""
  colorFormat_by_pk(id: numeric!): colorFormat

  """
  fetch data from the table: "colorGroup"
  """
  colorGroup(
    """distinct select on columns"""
    distinct_on: [colorGroup_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorGroup_order_by!]

    """filter the rows returned"""
    where: colorGroup_bool_exp
  ): [colorGroup!]!

  """
  fetch aggregated fields from the table: "colorGroup"
  """
  colorGroup_aggregate(
    """distinct select on columns"""
    distinct_on: [colorGroup_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorGroup_order_by!]

    """filter the rows returned"""
    where: colorGroup_bool_exp
  ): colorGroup_aggregate!

  """fetch data from the table: "colorGroup" using primary key columns"""
  colorGroup_by_pk(id: numeric!): colorGroup

  """
  fetch data from the table: "colorSet"
  """
  colorSet(
    """distinct select on columns"""
    distinct_on: [colorSet_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorSet_order_by!]

    """filter the rows returned"""
    where: colorSet_bool_exp
  ): [colorSet!]!

  """
  fetch aggregated fields from the table: "colorSet"
  """
  colorSet_aggregate(
    """distinct select on columns"""
    distinct_on: [colorSet_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorSet_order_by!]

    """filter the rows returned"""
    where: colorSet_bool_exp
  ): colorSet_aggregate!

  """fetch data from the table: "colorSet" using primary key columns"""
  colorSet_by_pk(id: numeric!): colorSet

  """
  fetch data from the table: "colorToColorSet"
  """
  colorToColorSet(
    """distinct select on columns"""
    distinct_on: [colorToColorSet_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorToColorSet_order_by!]

    """filter the rows returned"""
    where: colorToColorSet_bool_exp
  ): [colorToColorSet!]!

  """
  fetch aggregated fields from the table: "colorToColorSet"
  """
  colorToColorSet_aggregate(
    """distinct select on columns"""
    distinct_on: [colorToColorSet_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [colorToColorSet_order_by!]

    """filter the rows returned"""
    where: colorToColorSet_bool_exp
  ): colorToColorSet_aggregate!

  """
  fetch data from the table: "colorToColorSet" using primary key columns
  """
  colorToColorSet_by_pk(id: numeric!): colorToColorSet

  """
  fetch aggregated fields from the table: "color"
  """
  color_aggregate(
    """distinct select on columns"""
    distinct_on: [color_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [color_order_by!]

    """filter the rows returned"""
    where: color_bool_exp
  ): color_aggregate!

  """fetch data from the table: "color" using primary key columns"""
  color_by_pk(id: numeric!): color

  """
  fetch data from the table: "component"
  """
  component(
    """distinct select on columns"""
    distinct_on: [component_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_order_by!]

    """filter the rows returned"""
    where: component_bool_exp
  ): [component!]!

  """
  fetch aggregated fields from the table: "component"
  """
  component_aggregate(
    """distinct select on columns"""
    distinct_on: [component_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [component_order_by!]

    """filter the rows returned"""
    where: component_bool_exp
  ): component_aggregate!

  """fetch data from the table: "component" using primary key columns"""
  component_by_pk(id: numeric!): component

  """
  fetch data from the table: "content"
  """
  content(
    """distinct select on columns"""
    distinct_on: [content_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [content_order_by!]

    """filter the rows returned"""
    where: content_bool_exp
  ): [content!]!

  """
  fetch aggregated fields from the table: "content"
  """
  content_aggregate(
    """distinct select on columns"""
    distinct_on: [content_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [content_order_by!]

    """filter the rows returned"""
    where: content_bool_exp
  ): content_aggregate!

  """fetch data from the table: "content" using primary key columns"""
  content_by_pk(id: numeric!): content

  """
  fetch data from the table: "documents"
  """
  documents(
    """distinct select on columns"""
    distinct_on: [documents_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [documents_order_by!]

    """filter the rows returned"""
    where: documents_bool_exp
  ): [documents!]!

  """
  fetch aggregated fields from the table: "documents"
  """
  documents_aggregate(
    """distinct select on columns"""
    distinct_on: [documents_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [documents_order_by!]

    """filter the rows returned"""
    where: documents_bool_exp
  ): documents_aggregate!

  """fetch data from the table: "documents" using primary key columns"""
  documents_by_pk(id: numeric!): documents

  """
  fetch data from the table: "image"
  """
  image(
    """distinct select on columns"""
    distinct_on: [image_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [image_order_by!]

    """filter the rows returned"""
    where: image_bool_exp
  ): [image!]!

  """
  fetch aggregated fields from the table: "image"
  """
  image_aggregate(
    """distinct select on columns"""
    distinct_on: [image_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [image_order_by!]

    """filter the rows returned"""
    where: image_bool_exp
  ): image_aggregate!

  """fetch data from the table: "image" using primary key columns"""
  image_by_pk(id: numeric!): image

  """
  fetch data from the table: "layout"
  """
  layout(
    """distinct select on columns"""
    distinct_on: [layout_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [layout_order_by!]

    """filter the rows returned"""
    where: layout_bool_exp
  ): [layout!]!

  """
  fetch data from the table: "layoutToPosition"
  """
  layoutToPosition(
    """distinct select on columns"""
    distinct_on: [layoutToPosition_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [layoutToPosition_order_by!]

    """filter the rows returned"""
    where: layoutToPosition_bool_exp
  ): [layoutToPosition!]!

  """
  fetch aggregated fields from the table: "layoutToPosition"
  """
  layoutToPosition_aggregate(
    """distinct select on columns"""
    distinct_on: [layoutToPosition_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [layoutToPosition_order_by!]

    """filter the rows returned"""
    where: layoutToPosition_bool_exp
  ): layoutToPosition_aggregate!

  """
  fetch data from the table: "layoutToPosition" using primary key columns
  """
  layoutToPosition_by_pk(id: numeric!): layoutToPosition

  """
  fetch aggregated fields from the table: "layout"
  """
  layout_aggregate(
    """distinct select on columns"""
    distinct_on: [layout_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [layout_order_by!]

    """filter the rows returned"""
    where: layout_bool_exp
  ): layout_aggregate!

  """fetch data from the table: "layout" using primary key columns"""
  layout_by_pk(id: numeric!): layout

  """
  fetch data from the table: "level"
  """
  level(
    """distinct select on columns"""
    distinct_on: [level_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [level_order_by!]

    """filter the rows returned"""
    where: level_bool_exp
  ): [level!]!

  """
  fetch data from the table: "levelToLayout"
  """
  levelToLayout(
    """distinct select on columns"""
    distinct_on: [levelToLayout_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [levelToLayout_order_by!]

    """filter the rows returned"""
    where: levelToLayout_bool_exp
  ): [levelToLayout!]!

  """
  fetch aggregated fields from the table: "levelToLayout"
  """
  levelToLayout_aggregate(
    """distinct select on columns"""
    distinct_on: [levelToLayout_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [levelToLayout_order_by!]

    """filter the rows returned"""
    where: levelToLayout_bool_exp
  ): levelToLayout_aggregate!

  """fetch data from the table: "levelToLayout" using primary key columns"""
  levelToLayout_by_pk(id: numeric!): levelToLayout

  """
  fetch aggregated fields from the table: "level"
  """
  level_aggregate(
    """distinct select on columns"""
    distinct_on: [level_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [level_order_by!]

    """filter the rows returned"""
    where: level_bool_exp
  ): level_aggregate!

  """fetch data from the table: "level" using primary key columns"""
  level_by_pk(id: numeric!): level

  """
  fetch data from the table: "position"
  """
  position(
    """distinct select on columns"""
    distinct_on: [position_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [position_order_by!]

    """filter the rows returned"""
    where: position_bool_exp
  ): [position!]!

  """
  fetch aggregated fields from the table: "position"
  """
  position_aggregate(
    """distinct select on columns"""
    distinct_on: [position_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [position_order_by!]

    """filter the rows returned"""
    where: position_bool_exp
  ): position_aggregate!

  """fetch data from the table: "position" using primary key columns"""
  position_by_pk(id: numeric!): position

  """
  fetch data from the table: "project"
  """
  project(
    """distinct select on columns"""
    distinct_on: [project_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_order_by!]

    """filter the rows returned"""
    where: project_bool_exp
  ): [project!]!

  """
  fetch aggregated fields from the table: "project"
  """
  project_aggregate(
    """distinct select on columns"""
    distinct_on: [project_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_order_by!]

    """filter the rows returned"""
    where: project_bool_exp
  ): project_aggregate!

  """fetch data from the table: "project" using primary key columns"""
  project_by_pk(id: numeric!): project

  """
  fetch data from the table: "route"
  """
  route(
    """distinct select on columns"""
    distinct_on: [route_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [route_order_by!]

    """filter the rows returned"""
    where: route_bool_exp
  ): [route!]!

  """
  fetch data from the table: "routeToView"
  """
  routeToView(
    """distinct select on columns"""
    distinct_on: [routeToView_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [routeToView_order_by!]

    """filter the rows returned"""
    where: routeToView_bool_exp
  ): [routeToView!]!

  """
  fetch aggregated fields from the table: "routeToView"
  """
  routeToView_aggregate(
    """distinct select on columns"""
    distinct_on: [routeToView_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [routeToView_order_by!]

    """filter the rows returned"""
    where: routeToView_bool_exp
  ): routeToView_aggregate!

  """fetch data from the table: "routeToView" using primary key columns"""
  routeToView_by_pk(id: numeric!): routeToView

  """
  fetch aggregated fields from the table: "route"
  """
  route_aggregate(
    """distinct select on columns"""
    distinct_on: [route_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [route_order_by!]

    """filter the rows returned"""
    where: route_bool_exp
  ): route_aggregate!

  """fetch data from the table: "route" using primary key columns"""
  route_by_pk(id: numeric!): route

  """
  fetch data from the table: "state"
  """
  state(
    """distinct select on columns"""
    distinct_on: [state_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [state_order_by!]

    """filter the rows returned"""
    where: state_bool_exp
  ): [state!]!

  """
  fetch aggregated fields from the table: "state"
  """
  state_aggregate(
    """distinct select on columns"""
    distinct_on: [state_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [state_order_by!]

    """filter the rows returned"""
    where: state_bool_exp
  ): state_aggregate!

  """fetch data from the table: "state" using primary key columns"""
  state_by_pk(id: numeric!): state

  """
  fetch data from the table: "translation"
  """
  translation(
    """distinct select on columns"""
    distinct_on: [translation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [translation_order_by!]

    """filter the rows returned"""
    where: translation_bool_exp
  ): [translation!]!

  """
  fetch aggregated fields from the table: "translation"
  """
  translation_aggregate(
    """distinct select on columns"""
    distinct_on: [translation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [translation_order_by!]

    """filter the rows returned"""
    where: translation_bool_exp
  ): translation_aggregate!

  """fetch data from the table: "translation" using primary key columns"""
  translation_by_pk(id: numeric!): translation

  """
  fetch data from the table: "video"
  """
  video(
    """distinct select on columns"""
    distinct_on: [video_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [video_order_by!]

    """filter the rows returned"""
    where: video_bool_exp
  ): [video!]!

  """
  fetch aggregated fields from the table: "video"
  """
  video_aggregate(
    """distinct select on columns"""
    distinct_on: [video_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [video_order_by!]

    """filter the rows returned"""
    where: video_bool_exp
  ): video_aggregate!

  """fetch data from the table: "video" using primary key columns"""
  video_by_pk(id: numeric!): video

  """
  fetch data from the table: "view"
  """
  view(
    """distinct select on columns"""
    distinct_on: [view_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [view_order_by!]

    """filter the rows returned"""
    where: view_bool_exp
  ): [view!]!

  """
  fetch aggregated fields from the table: "view"
  """
  view_aggregate(
    """distinct select on columns"""
    distinct_on: [view_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [view_order_by!]

    """filter the rows returned"""
    where: view_bool_exp
  ): view_aggregate!

  """fetch data from the table: "view" using primary key columns"""
  view_by_pk(id: numeric!): view
}

"""
expression to compare columns of type text. All fields are combined with logical 'AND'.
"""
input text_comparison_exp {
  _eq: String
  _gt: String
  _gte: String
  _ilike: String
  _in: [String]
  _is_null: Boolean
  _like: String
  _lt: String
  _lte: String
  _neq: String
  _nilike: String
  _nin: [String]
  _nlike: String
  _nsimilar: String
  _similar: String
}

scalar timestamptz

"""
expression to compare columns of type timestamptz. All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz]
}

"""
columns and relationships of "translation"
"""
type translation {
  createdAt: timestamptz
  id: numeric!
  name: String

  """An object relationship"""
  projectByProjectId: project
  project_id: numeric

  """An object relationship"""
  translationByTranslationId: translation
  translation_id: numeric

  """An array relationship"""
  translationsByTranslationId(
    """distinct select on columns"""
    distinct_on: [translation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [translation_order_by!]

    """filter the rows returned"""
    where: translation_bool_exp
  ): [translation!]!

  """An aggregated array relationship"""
  translationsByTranslationId_aggregate(
    """distinct select on columns"""
    distinct_on: [translation_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [translation_order_by!]

    """filter the rows returned"""
    where: translation_bool_exp
  ): translation_aggregate!
  updatedAt: timestamptz
}

"""
aggregated selection of "translation"
"""
type translation_aggregate {
  aggregate: translation_aggregate_fields
  nodes: [translation!]!
}

"""
aggregate fields of "translation"
"""
type translation_aggregate_fields {
  avg: translation_avg_fields
  count(columns: [translation_select_column!], distinct: Boolean): Int
  max: translation_max_fields
  min: translation_min_fields
  stddev: translation_stddev_fields
  stddev_pop: translation_stddev_pop_fields
  stddev_samp: translation_stddev_samp_fields
  sum: translation_sum_fields
  var_pop: translation_var_pop_fields
  var_samp: translation_var_samp_fields
  variance: translation_variance_fields
}

"""
order by aggregate values of table "translation"
"""
input translation_aggregate_order_by {
  avg: translation_avg_order_by
  count: order_by
  max: translation_max_order_by
  min: translation_min_order_by
  stddev: translation_stddev_order_by
  stddev_pop: translation_stddev_pop_order_by
  stddev_samp: translation_stddev_samp_order_by
  sum: translation_sum_order_by
  var_pop: translation_var_pop_order_by
  var_samp: translation_var_samp_order_by
  variance: translation_variance_order_by
}

"""
input type for inserting array relation for remote table "translation"
"""
input translation_arr_rel_insert_input {
  data: [translation_insert_input!]!
  on_conflict: translation_on_conflict
}

"""aggregate avg on columns"""
type translation_avg_fields {
  id: Float
  project_id: Float
  translation_id: Float
}

"""
order by avg() on columns of table "translation"
"""
input translation_avg_order_by {
  id: order_by
  project_id: order_by
  translation_id: order_by
}

"""
Boolean expression to filter rows from the table "translation". All fields are combined with a logical 'AND'.
"""
input translation_bool_exp {
  _and: [translation_bool_exp]
  _not: translation_bool_exp
  _or: [translation_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: numeric_comparison_exp
  name: text_comparison_exp
  projectByProjectId: project_bool_exp
  project_id: numeric_comparison_exp
  translationByTranslationId: translation_bool_exp
  translation_id: numeric_comparison_exp
  translationsByTranslationId: translation_bool_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "translation"
"""
enum translation_constraint {
  """unique or primary key constraint"""
  translation_pkey
}

"""
input type for inserting data into table "translation"
"""
input translation_insert_input {
  createdAt: timestamptz
  id: numeric
  name: String
  projectByProjectId: project_obj_rel_insert_input
  project_id: numeric
  translationByTranslationId: translation_obj_rel_insert_input
  translation_id: numeric
  translationsByTranslationId: translation_arr_rel_insert_input
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type translation_max_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  translation_id: numeric
  updatedAt: timestamptz
}

"""
order by max() on columns of table "translation"
"""
input translation_max_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  translation_id: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type translation_min_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  translation_id: numeric
  updatedAt: timestamptz
}

"""
order by min() on columns of table "translation"
"""
input translation_min_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  translation_id: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "translation"
"""
type translation_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [translation!]!
}

"""
input type for inserting object relation for remote table "translation"
"""
input translation_obj_rel_insert_input {
  data: translation_insert_input!
  on_conflict: translation_on_conflict
}

"""
on conflict condition type for table "translation"
"""
input translation_on_conflict {
  constraint: translation_constraint!
  update_columns: [translation_update_column!]!
}

"""
ordering options when selecting data from "translation"
"""
input translation_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  projectByProjectId: project_order_by
  project_id: order_by
  translationByTranslationId: translation_order_by
  translation_id: order_by
  translationsByTranslationId_aggregate: translation_aggregate_order_by
  updatedAt: order_by
}

"""
select columns of table "translation"
"""
enum translation_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  translation_id

  """column name"""
  updatedAt
}

"""
input type for updating data in table "translation"
"""
input translation_set_input {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  translation_id: numeric
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type translation_stddev_fields {
  id: Float
  project_id: Float
  translation_id: Float
}

"""
order by stddev() on columns of table "translation"
"""
input translation_stddev_order_by {
  id: order_by
  project_id: order_by
  translation_id: order_by
}

"""aggregate stddev_pop on columns"""
type translation_stddev_pop_fields {
  id: Float
  project_id: Float
  translation_id: Float
}

"""
order by stddev_pop() on columns of table "translation"
"""
input translation_stddev_pop_order_by {
  id: order_by
  project_id: order_by
  translation_id: order_by
}

"""aggregate stddev_samp on columns"""
type translation_stddev_samp_fields {
  id: Float
  project_id: Float
  translation_id: Float
}

"""
order by stddev_samp() on columns of table "translation"
"""
input translation_stddev_samp_order_by {
  id: order_by
  project_id: order_by
  translation_id: order_by
}

"""aggregate sum on columns"""
type translation_sum_fields {
  id: numeric
  project_id: numeric
  translation_id: numeric
}

"""
order by sum() on columns of table "translation"
"""
input translation_sum_order_by {
  id: order_by
  project_id: order_by
  translation_id: order_by
}

"""
update columns of table "translation"
"""
enum translation_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  translation_id

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type translation_var_pop_fields {
  id: Float
  project_id: Float
  translation_id: Float
}

"""
order by var_pop() on columns of table "translation"
"""
input translation_var_pop_order_by {
  id: order_by
  project_id: order_by
  translation_id: order_by
}

"""aggregate var_samp on columns"""
type translation_var_samp_fields {
  id: Float
  project_id: Float
  translation_id: Float
}

"""
order by var_samp() on columns of table "translation"
"""
input translation_var_samp_order_by {
  id: order_by
  project_id: order_by
  translation_id: order_by
}

"""aggregate variance on columns"""
type translation_variance_fields {
  id: Float
  project_id: Float
  translation_id: Float
}

"""
order by variance() on columns of table "translation"
"""
input translation_variance_order_by {
  id: order_by
  project_id: order_by
  translation_id: order_by
}

"""
columns and relationships of "video"
"""
type video {
  createdAt: timestamptz
  id: numeric!
  name: String

  """An object relationship"""
  projectByProjectId: project
  project_id: numeric
  updatedAt: timestamptz
}

"""
aggregated selection of "video"
"""
type video_aggregate {
  aggregate: video_aggregate_fields
  nodes: [video!]!
}

"""
aggregate fields of "video"
"""
type video_aggregate_fields {
  avg: video_avg_fields
  count(columns: [video_select_column!], distinct: Boolean): Int
  max: video_max_fields
  min: video_min_fields
  stddev: video_stddev_fields
  stddev_pop: video_stddev_pop_fields
  stddev_samp: video_stddev_samp_fields
  sum: video_sum_fields
  var_pop: video_var_pop_fields
  var_samp: video_var_samp_fields
  variance: video_variance_fields
}

"""
order by aggregate values of table "video"
"""
input video_aggregate_order_by {
  avg: video_avg_order_by
  count: order_by
  max: video_max_order_by
  min: video_min_order_by
  stddev: video_stddev_order_by
  stddev_pop: video_stddev_pop_order_by
  stddev_samp: video_stddev_samp_order_by
  sum: video_sum_order_by
  var_pop: video_var_pop_order_by
  var_samp: video_var_samp_order_by
  variance: video_variance_order_by
}

"""
input type for inserting array relation for remote table "video"
"""
input video_arr_rel_insert_input {
  data: [video_insert_input!]!
  on_conflict: video_on_conflict
}

"""aggregate avg on columns"""
type video_avg_fields {
  id: Float
  project_id: Float
}

"""
order by avg() on columns of table "video"
"""
input video_avg_order_by {
  id: order_by
  project_id: order_by
}

"""
Boolean expression to filter rows from the table "video". All fields are combined with a logical 'AND'.
"""
input video_bool_exp {
  _and: [video_bool_exp]
  _not: video_bool_exp
  _or: [video_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: numeric_comparison_exp
  name: text_comparison_exp
  projectByProjectId: project_bool_exp
  project_id: numeric_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "video"
"""
enum video_constraint {
  """unique or primary key constraint"""
  video_pkey
}

"""
input type for inserting data into table "video"
"""
input video_insert_input {
  createdAt: timestamptz
  id: numeric
  name: String
  projectByProjectId: project_obj_rel_insert_input
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type video_max_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by max() on columns of table "video"
"""
input video_max_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type video_min_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by min() on columns of table "video"
"""
input video_min_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "video"
"""
type video_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [video!]!
}

"""
input type for inserting object relation for remote table "video"
"""
input video_obj_rel_insert_input {
  data: video_insert_input!
  on_conflict: video_on_conflict
}

"""
on conflict condition type for table "video"
"""
input video_on_conflict {
  constraint: video_constraint!
  update_columns: [video_update_column!]!
}

"""
ordering options when selecting data from "video"
"""
input video_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  projectByProjectId: project_order_by
  project_id: order_by
  updatedAt: order_by
}

"""
select columns of table "video"
"""
enum video_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""
input type for updating data in table "video"
"""
input video_set_input {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type video_stddev_fields {
  id: Float
  project_id: Float
}

"""
order by stddev() on columns of table "video"
"""
input video_stddev_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_pop on columns"""
type video_stddev_pop_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_pop() on columns of table "video"
"""
input video_stddev_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_samp on columns"""
type video_stddev_samp_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_samp() on columns of table "video"
"""
input video_stddev_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate sum on columns"""
type video_sum_fields {
  id: numeric
  project_id: numeric
}

"""
order by sum() on columns of table "video"
"""
input video_sum_order_by {
  id: order_by
  project_id: order_by
}

"""
update columns of table "video"
"""
enum video_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type video_var_pop_fields {
  id: Float
  project_id: Float
}

"""
order by var_pop() on columns of table "video"
"""
input video_var_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate var_samp on columns"""
type video_var_samp_fields {
  id: Float
  project_id: Float
}

"""
order by var_samp() on columns of table "video"
"""
input video_var_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate variance on columns"""
type video_variance_fields {
  id: Float
  project_id: Float
}

"""
order by variance() on columns of table "video"
"""
input video_variance_order_by {
  id: order_by
  project_id: order_by
}

"""
columns and relationships of "view"
"""
type view {
  createdAt: timestamptz
  id: numeric!

  """An array relationship"""
  levelsByViewId(
    """distinct select on columns"""
    distinct_on: [level_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [level_order_by!]

    """filter the rows returned"""
    where: level_bool_exp
  ): [level!]!

  """An aggregated array relationship"""
  levelsByViewId_aggregate(
    """distinct select on columns"""
    distinct_on: [level_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [level_order_by!]

    """filter the rows returned"""
    where: level_bool_exp
  ): level_aggregate!
  name: String

  """An object relationship"""
  projectByProjectId: project
  project_id: numeric

  """An array relationship"""
  routeToViewsByViewId(
    """distinct select on columns"""
    distinct_on: [routeToView_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [routeToView_order_by!]

    """filter the rows returned"""
    where: routeToView_bool_exp
  ): [routeToView!]!

  """An aggregated array relationship"""
  routeToViewsByViewId_aggregate(
    """distinct select on columns"""
    distinct_on: [routeToView_select_column!]

    """limit the nuber of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [routeToView_order_by!]

    """filter the rows returned"""
    where: routeToView_bool_exp
  ): routeToView_aggregate!
  updatedAt: timestamptz
}

"""
aggregated selection of "view"
"""
type view_aggregate {
  aggregate: view_aggregate_fields
  nodes: [view!]!
}

"""
aggregate fields of "view"
"""
type view_aggregate_fields {
  avg: view_avg_fields
  count(columns: [view_select_column!], distinct: Boolean): Int
  max: view_max_fields
  min: view_min_fields
  stddev: view_stddev_fields
  stddev_pop: view_stddev_pop_fields
  stddev_samp: view_stddev_samp_fields
  sum: view_sum_fields
  var_pop: view_var_pop_fields
  var_samp: view_var_samp_fields
  variance: view_variance_fields
}

"""
order by aggregate values of table "view"
"""
input view_aggregate_order_by {
  avg: view_avg_order_by
  count: order_by
  max: view_max_order_by
  min: view_min_order_by
  stddev: view_stddev_order_by
  stddev_pop: view_stddev_pop_order_by
  stddev_samp: view_stddev_samp_order_by
  sum: view_sum_order_by
  var_pop: view_var_pop_order_by
  var_samp: view_var_samp_order_by
  variance: view_variance_order_by
}

"""
input type for inserting array relation for remote table "view"
"""
input view_arr_rel_insert_input {
  data: [view_insert_input!]!
  on_conflict: view_on_conflict
}

"""aggregate avg on columns"""
type view_avg_fields {
  id: Float
  project_id: Float
}

"""
order by avg() on columns of table "view"
"""
input view_avg_order_by {
  id: order_by
  project_id: order_by
}

"""
Boolean expression to filter rows from the table "view". All fields are combined with a logical 'AND'.
"""
input view_bool_exp {
  _and: [view_bool_exp]
  _not: view_bool_exp
  _or: [view_bool_exp]
  createdAt: timestamptz_comparison_exp
  id: numeric_comparison_exp
  levelsByViewId: level_bool_exp
  name: text_comparison_exp
  projectByProjectId: project_bool_exp
  project_id: numeric_comparison_exp
  routeToViewsByViewId: routeToView_bool_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "view"
"""
enum view_constraint {
  """unique or primary key constraint"""
  view_pkey
}

"""
input type for inserting data into table "view"
"""
input view_insert_input {
  createdAt: timestamptz
  id: numeric
  levelsByViewId: level_arr_rel_insert_input
  name: String
  projectByProjectId: project_obj_rel_insert_input
  project_id: numeric
  routeToViewsByViewId: routeToView_arr_rel_insert_input
  updatedAt: timestamptz
}

"""aggregate max on columns"""
type view_max_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by max() on columns of table "view"
"""
input view_max_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""aggregate min on columns"""
type view_min_fields {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""
order by min() on columns of table "view"
"""
input view_min_order_by {
  createdAt: order_by
  id: order_by
  name: order_by
  project_id: order_by
  updatedAt: order_by
}

"""
response of any mutation on the table "view"
"""
type view_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [view!]!
}

"""
input type for inserting object relation for remote table "view"
"""
input view_obj_rel_insert_input {
  data: view_insert_input!
  on_conflict: view_on_conflict
}

"""
on conflict condition type for table "view"
"""
input view_on_conflict {
  constraint: view_constraint!
  update_columns: [view_update_column!]!
}

"""
ordering options when selecting data from "view"
"""
input view_order_by {
  createdAt: order_by
  id: order_by
  levelsByViewId_aggregate: level_aggregate_order_by
  name: order_by
  projectByProjectId: project_order_by
  project_id: order_by
  routeToViewsByViewId_aggregate: routeToView_aggregate_order_by
  updatedAt: order_by
}

"""
select columns of table "view"
"""
enum view_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""
input type for updating data in table "view"
"""
input view_set_input {
  createdAt: timestamptz
  id: numeric
  name: String
  project_id: numeric
  updatedAt: timestamptz
}

"""aggregate stddev on columns"""
type view_stddev_fields {
  id: Float
  project_id: Float
}

"""
order by stddev() on columns of table "view"
"""
input view_stddev_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_pop on columns"""
type view_stddev_pop_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_pop() on columns of table "view"
"""
input view_stddev_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate stddev_samp on columns"""
type view_stddev_samp_fields {
  id: Float
  project_id: Float
}

"""
order by stddev_samp() on columns of table "view"
"""
input view_stddev_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate sum on columns"""
type view_sum_fields {
  id: numeric
  project_id: numeric
}

"""
order by sum() on columns of table "view"
"""
input view_sum_order_by {
  id: order_by
  project_id: order_by
}

"""
update columns of table "view"
"""
enum view_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  name

  """column name"""
  project_id

  """column name"""
  updatedAt
}

"""aggregate var_pop on columns"""
type view_var_pop_fields {
  id: Float
  project_id: Float
}

"""
order by var_pop() on columns of table "view"
"""
input view_var_pop_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate var_samp on columns"""
type view_var_samp_fields {
  id: Float
  project_id: Float
}

"""
order by var_samp() on columns of table "view"
"""
input view_var_samp_order_by {
  id: order_by
  project_id: order_by
}

"""aggregate variance on columns"""
type view_variance_fields {
  id: Float
  project_id: Float
}

"""
order by variance() on columns of table "view"
"""
input view_variance_order_by {
  id: order_by
  project_id: order_by
}

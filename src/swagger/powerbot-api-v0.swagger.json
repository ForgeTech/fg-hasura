{
    "swagger": "2.0",
    "info": {
        "description": "# TERMS AND CONDITIONS\nThe Powerbot Trading REST API provide B2B services for trading with the EPEX intraday market. By using the Powerbot Trading REST API , each user agrees to the terms and conditions of this licence:\n1. The user will comply with the [EPEX Spot Market Rules](https://www.epexspot.com/en/extras/download-center/documentation) and will not endanger the EPEX system (M7) at any time with heavy load from trading algorithms.\n2. The user is aware of the OTR limits by EPEX\n\n# INTRODUCTION\nThe Powerbot-Trading Api is a web-based software service enabling algorithmic trading on power exchanges such as EPEX, HUPX or BSP Southpool. \nThe service is straightforward to integrate in an existing software environment and provides a variety of programming interfaces for development of \nindividual trading algorithms and software tools. Besides enabling a fully automated intraday trading strategy, \nPowerBot can be used to create support tools for traders providing relevant information and trading opportunities.\n\nFor furher details see http://powerbot-trading.com\n\nIn addition to this API guide, there is a [playground](https://playground.powerbot-trading.com) where you can try out the API calls directly from your web browser. \nIn order to access the playground, you will need an API key which you can request from Inercomp. Please contact us at helmut.spindler@inercomp.com   \n## Endpoints\nThe Powerbot Trading REST API is available at the following REST endpoints:\n\n| Instance                | Base URL for REST Endpoints                     |\n|-------------------------|-------------------------------------------------|\n| Test                    | https://playground.powerbot-trading.com/api/v0  |\n| Staging, Production     | Provided on request                     |\n\nAccess to endpoints is secured via an API Key, which needs to be passed as an  \"api_key\" header in each request.\n  \n Notes on API Keys:\n * API keys are specific to Test, Staging or Production.\n * An API key is associated with a user account and needs to requested. Please contact us by email at helmut.spindler@inercomp.com to request an API key.\n\n## Errors\nThe API uses standard HTTP status codes to indicate the success or failure of the API call. The body of the response will be in JSON format as follows:\n\n```\n{\n  \"message\": \"... an error message ...\"\n}\n```\n\n## Paging\nThe API uses offset and limit parameters for paged operations. An X-Total-Count header is added to responses to indicate the total number of items in a paged response. \n  \n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nThis allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Additional code samples\nAdditional information and code samples demonstrating the use of the API can be found at https://github.com/powerbot-trading/python-samples.",
        "version": "1.1.14",
        "title": "Powerbot-Trading Api",
        "x-logo": {
            "url": "http://www.powerbot-trading.com/comingsoon/powerbot_logo.png"
        }
    },
    "host": "playground.powerbot-trading.com:443",
    "basePath": "/api/v0",
    "schemes": ["https"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "security": [{
        "api_key_security": []
    }],
    "paths": {
        "/authentication": {
            "post": {
                "tags": ["Authentication"],
                "summary": "Create a new api_key",
                "description": "Use this method to generate a new api_key for your trading algorithm, signal import, etc. \nRequires that you are authenticated with your master api_key which you'll get once your private \nPowerbot trading access has been configured.",
                "operationId": "addApiKey",
                "parameters": [{
                    "in": "body",
                    "name": "value",
                    "required": true,
                    "schema": {
                        "required": ["name"],
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "MY_TRADING_API_KEY",
                                "description": "A name for the API key, i.e. \"TRADING_API_KEY\""
                            },
                            "epex_password": {
                                "type": "string",
                                "example": "__password__",
                                "description": "Your EPEX password which you have received from the POWERSPOT market operation team."
                            },
                            "can_trade": {
                                "type": "boolean",
                                "description": "Set to true, if the api_key should be able to trade."
                            },
                            "can_signal": {
                                "type": "boolean",
                                "description": "Set to true, if the api_key should be allowed to submit signals"
                            }
                        },
                        "x-swagger-router-model": "ApiKeyDescription"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "MY_TRADING_API_KEY"
                                },
                                "value": {
                                    "type": "string",
                                    "example": "63c7f8fe-5b67-4d36-96b2-56613e67a25d"
                                }
                            },
                            "required": ["value"],
                            "x-swagger-router-model": "ApiKey"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/logs": {
            "get": {
                "tags": ["Logs"],
                "summary": "Retrieves log entries",
                "description": "Retrieves log entries which you have submitted earlier with 'addLogEntry'",
                "operationId": "getLogs",
                "parameters": [{
                    "name": "offset",
                    "in": "query",
                    "description": "Offset when loading a list of items",
                    "required": false,
                    "type": "integer",
                    "default": 0,
                    "format": "int32"
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Limits the number of loaded items",
                    "required": false,
                    "type": "integer",
                    "default": 50,
                    "format": "int32"
                }, {
                    "name": "severity_at_least",
                    "in": "query",
                    "required": false,
                    "type": "string",
                    "default": "MED",
                    "enum": ["LOW", "MED", "HIG", "ERR", "URG"]
                }, {
                    "name": "received_from",
                    "in": "query",
                    "description": "from timestamp is 'inclusive' (i.e. >=), use UTC time zone",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "received_to",
                    "in": "query",
                    "description": "to timestamp is 'exclusive' (i.e. <), use UTC time zone",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "The unique id of the log entry",
                                        "readOnly": true
                                    },
                                    "received": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp when the powerbot trading API has received the log entry. UTC timezone is used.",
                                        "readOnly": true
                                    },
                                    "text": {
                                        "type": "string",
                                        "example": "Trading algorithm is starting...",
                                        "description": "The content of your log entry"
                                    },
                                    "as_of": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Should be set to the time (UTC) when the log entry was emitted by your system"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "Trading-Algorithm",
                                        "description": "An optional category of the log entry"
                                    },
                                    "severity": {
                                        "type": "string",
                                        "description": "The severity of the log entry",
                                        "enum": ["LOW", "MED", "HIG", "ERR", "URG"]
                                    }
                                },
                                "required": ["as_of", "text"],
                                "x-swagger-router-model": "LogEntry"
                            }
                        },
                        "headers": {
                            "X-Total-Count": {
                                "type": "integer",
                                "format": "int32",
                                "description": "total count of log entries"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Logs"],
                "summary": "Adds a new log entry",
                "description": "The Powerbot Trading api helps you to record what your algorithm is doing. You can use this method to log the activity of your trading algorithm. These logs can be retrieved later\nby you or displayed by the Powerbot GUI.",
                "operationId": "addLogEntry",
                "parameters": [{
                    "in": "body",
                    "name": "value",
                    "required": true,
                    "schema": {
                        "required": ["as_of", "text"],
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "The unique id of the log entry",
                                "readOnly": true
                            },
                            "received": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp when the powerbot trading API has received the log entry. UTC timezone is used.",
                                "readOnly": true
                            },
                            "text": {
                                "type": "string",
                                "example": "Trading algorithm is starting...",
                                "description": "The content of your log entry"
                            },
                            "as_of": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Should be set to the time (UTC) when the log entry was emitted by your system"
                            },
                            "category": {
                                "type": "string",
                                "example": "Trading-Algorithm",
                                "description": "An optional category of the log entry"
                            },
                            "severity": {
                                "type": "string",
                                "description": "The severity of the log entry",
                                "enum": ["LOW", "MED", "HIG", "ERR", "URG"]
                            }
                        },
                        "x-swagger-router-model": "LogEntry"
                    }
                }],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/signals/{source}/{id}": {
            "post": {
                "tags": ["Signals"],
                "summary": "Submit a new signal",
                "operationId": "updateSignal",
                "parameters": [{
                    "name": "source",
                    "in": "path",
                    "description": "A unique identifier of the system which emits signals",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "A unique key of the signal, i.e. the timstamp at which the signal was emitted.",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "delivery_start",
                    "in": "query",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "delivery_end",
                    "in": "query",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "in": "body",
                    "name": "value",
                    "description": "Signal payload. Will accept any valid json. Set the \"delivery_start\" and the \"delivery_end\" attributes to a valid delivery period for a contract of an order book, \nand the order book will return you your previously submitted signals. This is then typically used by trading algorithms to determine if, for instance, a position should\nbe closed. You can either submit these attributes as part of signal, or as query parameters.",
                    "required": true,
                    "schema": {
                        "type": "object"
                    }
                }],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/signals": {
            "get": {
                "tags": ["Signals"],
                "summary": "List of received signals",
                "operationId": "getSignals",
                "parameters": [{
                    "name": "offset",
                    "in": "query",
                    "description": "Offset when loading a list of items",
                    "required": false,
                    "type": "integer",
                    "default": 0,
                    "format": "int32"
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Limits the number of loaded items",
                    "required": false,
                    "type": "integer",
                    "default": 50,
                    "format": "int32"
                }, {
                    "name": "received_from",
                    "in": "query",
                    "description": "from timestamp is 'inclusive' (i.e. >=), use UTC timezones",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "received_to",
                    "in": "query",
                    "description": "to timestamp is 'exclusive' (i.e. <), use UTC timezones",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "etrm_signal_2018-04-05T09:13:77Z",
                                        "description": "The unique id of the signal (within the namespace of the emitting source)"
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "ETRMSystem",
                                        "description": "The identifier of the system which emitted the signal"
                                    },
                                    "received_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2018-04-05T09:14:17.000+0000",
                                        "description": "The timestamp when the signal was received by PowerBot"
                                    },
                                    "revision": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The number of times the signal has been updated. If the signal has never received any updates, then revision is 0."
                                    },
                                    "delivery_start": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2018-04-05T09:14:17.000+0000",
                                        "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                                    },
                                    "delivery_end": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2018-04-05T09:14:17.000+0000",
                                        "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                                    },
                                    "value": {
                                        "type": "object",
                                        "example": {
                                            "imbalance": 7,
                                            "delivery_start": "2018-04-05T14:00:00Z",
                                            "delivery_end": "2018-04-05T15:00:00Z"
                                        },
                                        "description": "The content of the signal",
                                        "properties": {}
                                    }
                                },
                                "x-swagger-router-model": "Signal"
                            }
                        },
                        "headers": {
                            "X-Total-Count": {
                                "type": "integer",
                                "format": "int32",
                                "description": "total count of signals"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Signals"],
                "summary": "Bulk submitting of signals",
                "operationId": "updateSignals",
                "parameters": [{
                    "in": "body",
                    "name": "value",
                    "description": "Signals payload",
                    "required": true,
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": "etrm_signal_2018-04-05T09:13:77Z",
                                    "description": "The unique id of the signal (within the namespace of the emitting source)"
                                },
                                "source": {
                                    "type": "string",
                                    "example": "ETRMSystem",
                                    "description": "The identifier of the system which emitted the signal"
                                },
                                "value": {
                                    "type": "object",
                                    "example": {
                                        "imbalance": 7
                                    },
                                    "description": "The content of the signal",
                                    "properties": {}
                                },
                                "delivery_start": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "delivery_start together with delivery_end define the contract for which the signal is valid for."
                                },
                                "delivery_end": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "delivery_start together with delivery_end define the contract for which the signal is valid for."
                                }
                            },
                            "required": ["id", "source", "value"],
                            "x-swagger-router-model": "BulkSignal"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "description": "For each submitted signal a response will be generated",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "source": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": ["OK", "ERROR"]
                                    },
                                    "status_text": {
                                        "type": "string"
                                    }
                                },
                                "x-swagger-router-model": "BulkSignalResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/internal-trades": {
            "get": {
                "tags": ["Trades"],
                "summary": "List of the internal trades that you have carried out",
                "operationId": "getInternalTrades",
                "parameters": [{
                    "name": "offset",
                    "in": "query",
                    "description": "Offset when loading a list of items",
                    "required": false,
                    "type": "integer",
                    "default": 0,
                    "format": "int32"
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Limits the number of loaded items",
                    "required": false,
                    "type": "integer",
                    "default": 50,
                    "format": "int32"
                }, {
                    "name": "contract_id",
                    "in": "query",
                    "description": "Show only those trades related to a specific contract",
                    "required": false,
                    "type": "integer",
                    "format": "int64"
                }, {
                    "name": "from_execution_time",
                    "in": "query",
                    "description": "from timestamp is 'inclusive' (i.e. >=)",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "to_execution_time",
                    "in": "query",
                    "description": "to timestamp is 'exclusive' (i.e. <)",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "from_api_timestamp",
                    "in": "query",
                    "description": "from timestamp is 'inclusive' (i.e. >=)",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "to_api_timestamp",
                    "in": "query",
                    "description": "to timestamp is 'exclusive' (i.e. <)",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "delivery_within_start",
                    "in": "query",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "delivery_within_end",
                    "in": "query",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "delivery_area",
                    "in": "query",
                    "description": "The delivery area.",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "internal_trade_id": {
                                        "type": "string"
                                    },
                                    "delivery_area": {
                                        "type": "string",
                                        "example": "10YAT-APG------L",
                                        "description": "If you sold energy with this trade, delivery_area will contain the sell_delivery_area, otherwise the buy_delivery_area"
                                    },
                                    "exec_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp when the trade was executed (UTC time zone)"
                                    },
                                    "api_timestamp": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "buy_order_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 6123942030,
                                        "description": "the order_id of the underlying buy-order. If the internal trade was matched with a new order, the id remains empty."
                                    },
                                    "buy_clOrderId": {
                                        "type": "string",
                                        "description": "the client order id of the buy order"
                                    },
                                    "buy_txt": {
                                        "type": "string",
                                        "description": "the custom text of the buy order"
                                    },
                                    "buy_aggressor_indicator": {
                                        "type": "string",
                                        "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                        "enum": ["Y", "N", "U"]
                                    },
                                    "sell_order_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 28492342354,
                                        "description": "The seller's order id. If the internal trade was matched with a new order, the id remains empty."
                                    },
                                    "sell_clOrderId": {
                                        "type": "string",
                                        "description": "The sell order's client id"
                                    },
                                    "sell_txt": {
                                        "type": "string",
                                        "description": "The sell order's custom text"
                                    },
                                    "sell_aggressor_indicator": {
                                        "type": "string",
                                        "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                        "enum": ["Y", "N", "U"]
                                    },
                                    "contract_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 2342353242,
                                        "description": "The contract_id against which the trade was executed"
                                    },
                                    "contract_name": {
                                        "type": "string",
                                        "example": "17-18",
                                        "description": "The contract's name against which the trade was executed."
                                    },
                                    "delivery_start": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Time when the delivery of this trade starts (UTC timezone)"
                                    },
                                    "delivery_end": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Time when the delivery of this trade ends (UTC timezone)"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 35.0,
                                        "description": "Price of the trade"
                                    },
                                    "quantity": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 5.0,
                                        "description": "Quantity in MW of the trade"
                                    },
                                    "prod": {
                                        "type": "string",
                                        "description": "Product ID"
                                    }
                                },
                                "x-swagger-router-model": "InternalTrade"
                            }
                        },
                        "headers": {
                            "X-Total-Count": {
                                "type": "integer",
                                "format": "int32",
                                "description": "total count of trades"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Trades"],
                "summary": "Add an internal trade",
                "operationId": "addInternalTrade",
                "parameters": [{
                    "in": "body",
                    "name": "NewInternalTrade",
                    "required": true,
                    "schema": {
                        "required": ["delivery_area", "exec_time", "price", "quantity"],
                        "properties": {
                            "delivery_area": {
                                "type": "string",
                                "example": "10YAT-APG------L",
                                "description": "If you sold energy with this trade, delivery_area will contain the sell_delivery_area, otherwise the buy_delivery_area"
                            },
                            "delivery_start": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "delivery_end": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "exec_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp when the trade was executed (UTC time zone)"
                            },
                            "buy_txt": {
                                "type": "string",
                                "description": "the custom text of the buy order"
                            },
                            "buy_aggressor_indicator": {
                                "type": "string",
                                "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                "enum": ["Y", "N", "U"]
                            },
                            "sell_txt": {
                                "type": "string",
                                "description": "the custom text of the sell order"
                            },
                            "sell_aggressor_indicator": {
                                "type": "string",
                                "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                "enum": ["Y", "N", "U"]
                            },
                            "contract_id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 2342353242,
                                "description": "The contract_id against which the trade was executed"
                            },
                            "price": {
                                "type": "number",
                                "format": "double",
                                "description": "Price of the trade"
                            },
                            "quantity": {
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "x-swagger-router-model": "NewInternalTrade"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "delivery_area": {
                                    "type": "string",
                                    "example": "10YAT-APG------L",
                                    "description": "If you sold energy with this trade, delivery_area will contain the sell_delivery_area, otherwise the buy_delivery_area"
                                },
                                "delivery_start": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "delivery_end": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "exec_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp when the trade was executed (UTC time zone)"
                                },
                                "buy_txt": {
                                    "type": "string",
                                    "description": "the custom text of the buy order"
                                },
                                "buy_aggressor_indicator": {
                                    "type": "string",
                                    "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                    "enum": ["Y", "N", "U"]
                                },
                                "sell_txt": {
                                    "type": "string",
                                    "description": "the custom text of the sell order"
                                },
                                "sell_aggressor_indicator": {
                                    "type": "string",
                                    "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                    "enum": ["Y", "N", "U"]
                                },
                                "contract_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 2342353242,
                                    "description": "The contract_id against which the trade was executed"
                                },
                                "price": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Price of the trade"
                                },
                                "quantity": {
                                    "type": "number",
                                    "format": "double"
                                }
                            },
                            "required": ["delivery_area", "exec_time", "price", "quantity"],
                            "x-swagger-router-model": "NewInternalTrade"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/trades": {
            "get": {
                "tags": ["Trades"],
                "summary": "List of the trades that you have carried out",
                "operationId": "getTrades",
                "parameters": [{
                    "name": "offset",
                    "in": "query",
                    "description": "Offset when loading a list of items",
                    "required": false,
                    "type": "integer",
                    "default": 0,
                    "format": "int32"
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Limits the number of loaded items",
                    "required": false,
                    "type": "integer",
                    "default": 50,
                    "format": "int32"
                }, {
                    "name": "ordId",
                    "in": "query",
                    "description": "Limit the trades to those which are related to a particular order",
                    "required": false,
                    "type": "integer",
                    "format": "int64"
                }, {
                    "name": "active_only",
                    "in": "query",
                    "description": "Show only those trades which are active (i.e. active or rejected recalls/cancellations)",
                    "required": false,
                    "type": "boolean",
                    "default": true
                }, {
                    "name": "clOrdrId",
                    "in": "query",
                    "description": "Show only those trades related to orders with a specific 'client order id' (something like 'your reference' which you can submit)\ntogether with an order ",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "txt",
                    "in": "query",
                    "description": "Show only those trades related to orders with a specific 'custom text'. Similar to the clOrdrId, you can\nsubmit a string inside the 'txt' attribute of an order which helps you to identify trades originating from a \nspecific order at a later point",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "contract_id",
                    "in": "query",
                    "description": "Show only those trades related to a specific contract",
                    "required": false,
                    "type": "integer",
                    "format": "int64"
                }, {
                    "name": "from_api_timestamp",
                    "in": "query",
                    "description": "from timestamp is 'inclusive' (i.e. >=)",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "to_api_timestamp",
                    "in": "query",
                    "description": "to timestamp is 'exclusive' (i.e. <)",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "delivery_within_start",
                    "in": "query",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "delivery_within_end",
                    "in": "query",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "delivery_area",
                    "in": "query",
                    "description": "The delivery area.",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "user_code",
                    "in": "query",
                    "description": "the epex user code",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "trade_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 383234324234,
                                        "description": "Unique trade_id"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "ACTI",
                                        "description": "* CNCL: Trade was cancelled by market operations.\n* RREJ: Requested Recall was rejected by market operations.\n* RGRA: Requested Recall was granted by market operations.\n* RREQ: Recall of this trade was requested.\n* ACTI: Trade is active (this is the default value).\n* CREQ: cancel was requested from local market operations. \n* CREJ: cancel was rejected by global market operations.\n* RSFA: Request sent for approval to SOB (XBID).",
                                        "enum": ["CNCL", "RREJ", "RGRA", "RREQ", "ACTI", "CREQ", "CREJ", "RSFA"]
                                    },
                                    "delivery_area": {
                                        "type": "string",
                                        "example": "10YAT-APG------L",
                                        "description": "If you sold energy with this trade, delivery_area will contain the sell_delivery_area, otherwise the buy_delivery_area"
                                    },
                                    "api_timestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp when powerbot received the trade (UTC time zone)"
                                    },
                                    "exec_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp when the trade was executed (UTC time zone)"
                                    },
                                    "buy": {
                                        "type": "boolean",
                                        "description": "true if you bought energy"
                                    },
                                    "sell": {
                                        "type": "boolean",
                                        "example": false,
                                        "description": "true if you sold energy"
                                    },
                                    "buy_order_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 6123942030,
                                        "description": "the order_id of the underlying buy-order"
                                    },
                                    "buy_delivery_area": {
                                        "type": "string",
                                        "description": "The delivery area of the buy-side of the trade."
                                    },
                                    "buy_clOrderId": {
                                        "type": "string",
                                        "description": "the client order id of the buy order"
                                    },
                                    "buy_txt": {
                                        "type": "string",
                                        "description": "the custom text of the buy order"
                                    },
                                    "buy_user_code": {
                                        "type": "string",
                                        "description": "the buyer's epex user code"
                                    },
                                    "buy_member_id": {
                                        "type": "string",
                                        "description": "the buyer's epex member id"
                                    },
                                    "buy_aggressor_indicator": {
                                        "type": "string",
                                        "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                        "enum": ["Y", "N", "U"]
                                    },
                                    "sell_order_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 28492342354,
                                        "description": "The seller's order id"
                                    },
                                    "sell_delivery_area": {
                                        "type": "string",
                                        "example": "10YAT-APG------L",
                                        "description": "delivery area of the sell order"
                                    },
                                    "sell_clOrderId": {
                                        "type": "string",
                                        "description": "The sell order's client id"
                                    },
                                    "sell_txt": {
                                        "type": "string",
                                        "description": "The sell order's custom text"
                                    },
                                    "sell_user_code": {
                                        "type": "string",
                                        "description": "The seller's epex user code"
                                    },
                                    "sell_member_id": {
                                        "type": "string",
                                        "description": "The seller's epex member id"
                                    },
                                    "sell_aggressor_indicator": {
                                        "type": "string",
                                        "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                        "enum": ["Y", "N", "U"]
                                    },
                                    "contract_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 2342353242,
                                        "description": "The contract_id against which the trade was executed"
                                    },
                                    "contract_name": {
                                        "type": "string",
                                        "example": "17-18",
                                        "description": "The contract's name against which the trade was executed."
                                    },
                                    "delivery_start": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Time when the delivery of this trade starts (UTC timezone)"
                                    },
                                    "delivery_end": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Time when the delivery of this trade ends (UTC timezone)"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 35.0,
                                        "description": "Price of the trade"
                                    },
                                    "quantity": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 5.0,
                                        "description": "Quantity in MW of the trade"
                                    },
                                    "trade_details": {
                                        "type": "object",
                                        "description": "Details of the trade provided by EPEX, Please consult the \"DFS180 - M7 - Public Message Interface\" for details.",
                                        "properties": {}
                                    },
                                    "contract_details": {
                                        "type": "object",
                                        "description": "Details of the trade provided by EPEX, Please consult the \"DFS180 - M7 - Public Message Interface\" for details.",
                                        "properties": {}
                                    }
                                },
                                "x-swagger-router-model": "Trade"
                            }
                        },
                        "headers": {
                            "X-Total-Count": {
                                "type": "integer",
                                "format": "int32",
                                "description": "total count of trades"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/trade/{trade_id}": {
            "delete": {
                "tags": ["Trades"],
                "summary": "Recalls a trade",
                "description": "Attempts to recall a trade. Note that this may fail depending on the conditions set by Market operations. Check the trade's state after\nattempting to recall a trade.",
                "operationId": "recallTrade",
                "parameters": [{
                    "name": "trade_id",
                    "in": "path",
                    "description": "The unique trade_id",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }],
                "responses": {
                    "200": {
                        "description": "Success, returns the list of affected trades",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "trade_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 383234324234,
                                        "description": "Unique trade_id"
                                    },
                                    "state": {
                                        "type": "string",
                                        "example": "ACTI",
                                        "description": "* CNCL: Trade was cancelled by market operations.\n* RREJ: Requested Recall was rejected by market operations.\n* RGRA: Requested Recall was granted by market operations.\n* RREQ: Recall of this trade was requested.\n* ACTI: Trade is active (this is the default value).\n* CREQ: cancel was requested from local market operations. \n* CREJ: cancel was rejected by global market operations.\n* RSFA: Request sent for approval to SOB (XBID).",
                                        "enum": ["CNCL", "RREJ", "RGRA", "RREQ", "ACTI", "CREQ", "CREJ", "RSFA"]
                                    },
                                    "delivery_area": {
                                        "type": "string",
                                        "example": "10YAT-APG------L",
                                        "description": "If you sold energy with this trade, delivery_area will contain the sell_delivery_area, otherwise the buy_delivery_area"
                                    },
                                    "api_timestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp when powerbot received the trade (UTC time zone)"
                                    },
                                    "exec_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp when the trade was executed (UTC time zone)"
                                    },
                                    "buy": {
                                        "type": "boolean",
                                        "description": "true if you bought energy"
                                    },
                                    "sell": {
                                        "type": "boolean",
                                        "example": false,
                                        "description": "true if you sold energy"
                                    },
                                    "buy_order_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 6123942030,
                                        "description": "the order_id of the underlying buy-order"
                                    },
                                    "buy_delivery_area": {
                                        "type": "string",
                                        "description": "The delivery area of the buy-side of the trade."
                                    },
                                    "buy_clOrderId": {
                                        "type": "string",
                                        "description": "the client order id of the buy order"
                                    },
                                    "buy_txt": {
                                        "type": "string",
                                        "description": "the custom text of the buy order"
                                    },
                                    "buy_user_code": {
                                        "type": "string",
                                        "description": "the buyer's epex user code"
                                    },
                                    "buy_member_id": {
                                        "type": "string",
                                        "description": "the buyer's epex member id"
                                    },
                                    "buy_aggressor_indicator": {
                                        "type": "string",
                                        "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                        "enum": ["Y", "N", "U"]
                                    },
                                    "sell_order_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 28492342354,
                                        "description": "The seller's order id"
                                    },
                                    "sell_delivery_area": {
                                        "type": "string",
                                        "example": "10YAT-APG------L",
                                        "description": "delivery area of the sell order"
                                    },
                                    "sell_clOrderId": {
                                        "type": "string",
                                        "description": "The sell order's client id"
                                    },
                                    "sell_txt": {
                                        "type": "string",
                                        "description": "The sell order's custom text"
                                    },
                                    "sell_user_code": {
                                        "type": "string",
                                        "description": "The seller's epex user code"
                                    },
                                    "sell_member_id": {
                                        "type": "string",
                                        "description": "The seller's epex member id"
                                    },
                                    "sell_aggressor_indicator": {
                                        "type": "string",
                                        "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                        "enum": ["Y", "N", "U"]
                                    },
                                    "contract_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 2342353242,
                                        "description": "The contract_id against which the trade was executed"
                                    },
                                    "contract_name": {
                                        "type": "string",
                                        "example": "17-18",
                                        "description": "The contract's name against which the trade was executed."
                                    },
                                    "delivery_start": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Time when the delivery of this trade starts (UTC timezone)"
                                    },
                                    "delivery_end": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Time when the delivery of this trade ends (UTC timezone)"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 35.0,
                                        "description": "Price of the trade"
                                    },
                                    "quantity": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 5.0,
                                        "description": "Quantity in MW of the trade"
                                    },
                                    "trade_details": {
                                        "type": "object",
                                        "description": "Details of the trade provided by EPEX, Please consult the \"DFS180 - M7 - Public Message Interface\" for details.",
                                        "properties": {}
                                    },
                                    "contract_details": {
                                        "type": "object",
                                        "description": "Details of the trade provided by EPEX, Please consult the \"DFS180 - M7 - Public Message Interface\" for details.",
                                        "properties": {}
                                    }
                                },
                                "x-swagger-router-model": "Trade"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "tags": ["Orders"],
                "summary": "List of own orders",
                "operationId": "getOwnOrders",
                "parameters": [{
                    "name": "offset",
                    "in": "query",
                    "description": "Offset when loading a list of items",
                    "required": false,
                    "type": "integer",
                    "default": 0,
                    "format": "int32"
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Limits the number of loaded items",
                    "required": false,
                    "type": "integer",
                    "default": 50,
                    "format": "int32"
                }, {
                    "name": "contract_id",
                    "in": "query",
                    "description": "Show only those orders related to a specific contract",
                    "required": false,
                    "type": "integer",
                    "format": "int64"
                }, {
                    "name": "active_only",
                    "in": "query",
                    "description": "Returns only those orders which are active",
                    "required": false,
                    "type": "boolean",
                    "default": true
                }, {
                    "name": "delivery_area",
                    "in": "query",
                    "description": "The delivery area",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "user_code",
                    "in": "query",
                    "description": "the epex user code",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "order_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "the unique id of the order. **Note** if you modify an order, the id will change!"
                                    },
                                    "api_timestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "the time (UTC) when Powerbot received the last update of the order"
                                    },
                                    "state": {
                                        "type": "string",
                                        "description": "The current state of the order in the system. \n* HIBE: The order is entered into the backend system but not exposed to the market.\n* ACTI: The order is entered and immediately exposed to the market for execution.\n* IACT: The order is deleted.",
                                        "enum": ["ACTI", "HIBE", "IACT"]
                                    },
                                    "delivery_area": {
                                        "type": "string",
                                        "description": "Defines the delivery area of the order."
                                    },
                                    "last_change_timestamp": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "buy": {
                                        "type": "boolean",
                                        "description": "Set to true if the order is a BUY order, false otherwise"
                                    },
                                    "sell": {
                                        "type": "boolean",
                                        "description": "set to true if the order is a SELL order, false otherwise"
                                    },
                                    "side": {
                                        "type": "string",
                                        "enum": ["SELL", "BUY"]
                                    },
                                    "contract_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "The contract_id of the order's underlying contract"
                                    },
                                    "contract_name": {
                                        "type": "string",
                                        "example": "07-008",
                                        "description": "The contract name of the order's underlying contract"
                                    },
                                    "delivery_start": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "the delivery start of the underlying contract."
                                    },
                                    "delivery_end": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "the delivery end of the underlying contract."
                                    },
                                    "clOrdrId": {
                                        "type": "string",
                                        "description": "The client's order number (if set during the placement of the order)"
                                    },
                                    "txt": {
                                        "type": "string",
                                        "description": "The client's custom text (if set during the placement of the order)"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "double",
                                        "example": "EUR",
                                        "description": "The price of the order in the contract's currency (usually EUR)"
                                    },
                                    "quantity": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 5.0,
                                        "description": "The quantity of the order (in the contract's quantity unit - usually MW)"
                                    },
                                    "action": {
                                        "type": "string",
                                        "description": "The action which has been carried out for the order\n* UADD: Order added by user.\n* UHIB: Order deactivated by user.\n* UMOD: Order modified by user.\n* UDEL: Order deleted by user.\n* UREJ: Pre-arranged order rejected by user.\n* AADD: Order added by market operations on behalf.\n* AHIB: Order deactivated by market operations on behalf. “AMOD”: Order modified by market operations on behalf.\n* ADEL: Order deleted by market operations on behalf.\n* AREJ: Pre-arranged order rejected by market operations on behalf.\n* SADD: Order added by the system.\n* SHIB: Order deactivated by the system. “SMOD”: Order modified by the system. “SDEL”: Order deleted by the system.\n* SREJ: Pre-arranged order rejected by system.\n* FEXE: Order is fully executed.\n* PEXE: Partial execution of order.\n* IADD: A new slice of an Iceberg order was added to the service.\n* QADD: Quote was added\n* QFEX: Quote was fully executed"
                                    },
                                    "details": {
                                        "type": "object",
                                        "description": "All details of the order (as received from the underlying backend system)",
                                        "properties": {}
                                    },
                                    "user_code": {
                                        "type": "string",
                                        "description": "the epex user code"
                                    }
                                },
                                "x-swagger-router-model": "OwnOrder"
                            }
                        },
                        "headers": {
                            "X-Total-Count": {
                                "type": "integer",
                                "format": "int32",
                                "description": "total count of orders"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Orders"],
                "summary": "Place new order",
                "description": "Allows you to place a new sell or bid order. ",
                "operationId": "addOrder",
                "parameters": [{
                    "name": "internal_trading",
                    "in": "query",
                    "description": "set to true, internal trading will be performed before submitting the\norders to EPEX. \nset to false if you don't want internal trading\ndon't set it if the default market option (internal_trading) should determine if internal trading should be performed\n",
                    "required": false,
                    "type": "boolean"
                }, {
                    "in": "body",
                    "name": "order",
                    "required": true,
                    "schema": {
                        "required": ["clearingAcctType", "price", "quantity"],
                        "properties": {
                            "delivery_area": {
                                "type": "string",
                                "description": "The delivery area of the orderbook's product. Mandatory in a multi-delivery-area configuration"
                            },
                            "side": {
                                "type": "string",
                                "enum": ["SELL", "BUY"]
                            },
                            "prod": {
                                "type": "string",
                                "example": "Intraday_Power_D",
                                "description": "The product of the order"
                            },
                            "quantity": {
                                "type": "number",
                                "format": "double",
                                "example": 5.0,
                                "description": "The quantity of the order in MW."
                            },
                            "price": {
                                "type": "number",
                                "format": "double",
                                "example": 35.3,
                                "description": "The price of ther order in the traded currency (usually EUR)"
                            },
                            "displayQty": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Used to define display quantity of an Iceberg Order. This field is required only in the case of type=’I’."
                            },
                            "contractId": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The contractId of the order, can be omitted if contractName is specified instead."
                            },
                            "contractName": {
                                "type": "string",
                                "description": "Set a contract name instead of the contractId, and the attempt is made to look up the contract via it's name. If contractId is set, the contractName field is ignored."
                            },
                            "clOrdrId": {
                                "type": "string",
                                "description": "the \"client order id\" which can be used to identify the order at a later point (i.e. within a trade)",
                                "maxLength": 40
                            },
                            "clearingAcctType": {
                                "type": "string",
                                "description": "Defines if the order is entered on own account or as an agent. \nFor the set of valid values please refer to values from attribute allowedClearingAcctTypes in SystemInfoResp message (e.g. ”A,P” for spot markets)"
                            },
                            "ordrExeRestriction": {
                                "type": "string",
                                "description": "Execution restriction of the order.\n\n* NON: No restriction. This is the default.\n* FOK: (Fill or Kill) - The order is immediately fully executed or deleted.\n* IOC: (Immediate and cancel): The order is executed immediately to its maximum extent. In case of a partial execution, the remaining volume is removed from the order book.\n* AON: (All or None): The order must be filled completely or not at all. The order stays in the order book until it is executed or removed by the system or user. \n* AU (Auction): The order was entered in auction phase (no restriction is applied)",
                                "enum": ["FOK", "IOC", "NON", "AON", "AU"],
                                "default": "NON"
                            },
                            "preArranged": {
                                "type": "boolean",
                                "description": "Flag which indicates if the entered order is a pre-arranged order or not.",
                                "default": false
                            },
                            "preArrangedAcct": {
                                "type": "string",
                                "description": "Required in case of a pre-arranged order. Contains the account of the counterpart."
                            },
                            "type": {
                                "type": "string",
                                "description": "* O: Regular limit order.\n* B: User defined block order.\n* I: Iceberg order.\n* L: Balance order.\n* C: Indicative order.\n* S: Stop limit order.\n* E: On exchange prearranged trade\n* N: Private and confidential trade\n* H: Lifting order for products with Hit & Lift matcher \n* Q: quote order\n* W: Indicative quote order",
                                "enum": ["B", "O", "I", "L", "S", "H", "C", "N", "E"],
                                "default": "O"
                            },
                            "validityRes": {
                                "type": "string",
                                "description": "Validity restriction of the order. \n* GFS (Good for trading session): The order rests in the order book until it is either executed, removed by the user or the current trading session (trading phase) of the underlying contract ends.\n* GTD (Good till date, will be introduced with CX 3.5): The order rests in the order book until the date specified in the validityDate field.\n* NON (No validity restriction): Mandatory for orders with the execution restriction “FOK” or “IOC”.",
                                "enum": ["GFS", "GTD", "NON"],
                                "default": "GFS"
                            },
                            "state": {
                                "type": "string",
                                "description": "* ACTI: The order is entered and immediately exposed to the market for execution. This is the default value.\n* HIBE: The order is entered into the backend system but not exposed to the market.",
                                "enum": ["ACTI", "HIBE"]
                            },
                            "validityDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "mandatory in case of validityRes equals “GTD”. It is used to define the date until which the order is valid. \nThe remaining part of the order will be removed from the order book after this point in time."
                            },
                            "txt": {
                                "type": "string",
                                "description": "Text which can be retrieved at a later point (i.e. via a trade which was triggered by the order)",
                                "maxLength": 250
                            },
                            "ppd": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Peak price delta for Iceberg orders.\n* The ppd of buy orders must be smaller or equal than zero.\n* The ppd of sell orders must be greater or equal than zero.\nIf it is omitted the system will assume a value of “0,00”."
                            },
                            "dlvryStart": {
                                "type": "string",
                                "format": "date-time",
                                "description": "(optional) Start of delivery of the underlying contract."
                            },
                            "dlvryEnd": {
                                "type": "string",
                                "format": "date-time",
                                "description": "(optional) End of delivery of the underlying contract."
                            }
                        },
                        "x-swagger-router-model": "OrderEntry"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "order_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "the unique id of the order. **Note** if you modify an order, the id will change!"
                                },
                                "api_timestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "the time (UTC) when Powerbot received the last update of the order"
                                },
                                "state": {
                                    "type": "string",
                                    "description": "The current state of the order in the system. \n* HIBE: The order is entered into the backend system but not exposed to the market.\n* ACTI: The order is entered and immediately exposed to the market for execution.\n* IACT: The order is deleted.",
                                    "enum": ["ACTI", "HIBE", "IACT"]
                                },
                                "delivery_area": {
                                    "type": "string",
                                    "description": "Defines the delivery area of the order."
                                },
                                "last_change_timestamp": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "buy": {
                                    "type": "boolean",
                                    "description": "Set to true if the order is a BUY order, false otherwise"
                                },
                                "sell": {
                                    "type": "boolean",
                                    "description": "set to true if the order is a SELL order, false otherwise"
                                },
                                "side": {
                                    "type": "string",
                                    "enum": ["SELL", "BUY"]
                                },
                                "contract_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The contract_id of the order's underlying contract"
                                },
                                "contract_name": {
                                    "type": "string",
                                    "example": "07-008",
                                    "description": "The contract name of the order's underlying contract"
                                },
                                "delivery_start": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "the delivery start of the underlying contract."
                                },
                                "delivery_end": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "the delivery end of the underlying contract."
                                },
                                "clOrdrId": {
                                    "type": "string",
                                    "description": "The client's order number (if set during the placement of the order)"
                                },
                                "txt": {
                                    "type": "string",
                                    "description": "The client's custom text (if set during the placement of the order)"
                                },
                                "price": {
                                    "type": "number",
                                    "format": "double",
                                    "example": "EUR",
                                    "description": "The price of the order in the contract's currency (usually EUR)"
                                },
                                "quantity": {
                                    "type": "number",
                                    "format": "double",
                                    "example": 5.0,
                                    "description": "The quantity of the order (in the contract's quantity unit - usually MW)"
                                },
                                "action": {
                                    "type": "string",
                                    "description": "The action which has been carried out for the order\n* UADD: Order added by user.\n* UHIB: Order deactivated by user.\n* UMOD: Order modified by user.\n* UDEL: Order deleted by user.\n* UREJ: Pre-arranged order rejected by user.\n* AADD: Order added by market operations on behalf.\n* AHIB: Order deactivated by market operations on behalf. “AMOD”: Order modified by market operations on behalf.\n* ADEL: Order deleted by market operations on behalf.\n* AREJ: Pre-arranged order rejected by market operations on behalf.\n* SADD: Order added by the system.\n* SHIB: Order deactivated by the system. “SMOD”: Order modified by the system. “SDEL”: Order deleted by the system.\n* SREJ: Pre-arranged order rejected by system.\n* FEXE: Order is fully executed.\n* PEXE: Partial execution of order.\n* IADD: A new slice of an Iceberg order was added to the service.\n* QADD: Quote was added\n* QFEX: Quote was fully executed"
                                },
                                "details": {
                                    "type": "object",
                                    "description": "All details of the order (as received from the underlying backend system)",
                                    "properties": {}
                                },
                                "user_code": {
                                    "type": "string",
                                    "description": "the epex user code"
                                }
                            },
                            "x-swagger-router-model": "OwnOrder"
                        },
                        "headers": {
                            "X-Total-Internal-Trades": {
                                "type": "integer",
                                "format": "int32",
                                "description": "total count of internal trades involved"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/orders/list": {
            "post": {
                "tags": ["Orders"],
                "summary": "Place a list of new orders",
                "description": "Allows you to place a new sell or bid orders. For each requested order one response is generated. In case of sucess, the order is returned otherwise an error message is returned.",
                "operationId": "addOrders",
                "parameters": [{
                    "name": "exec_instruction",
                    "in": "query",
                    "description": "Defines the execution instruction for the whole list of orders: \n  * **VALID**: default. All orders must be valid, meaning they must past the order validation of the backend system (e.g. the price of the order must be in the price range of the product). If one order does not pass the validation, the full list of submitted orders is rejected.\n  * **LNKD**: Linked orders - the provided orders are linked together and should be executed all at once. This option can only be used, if all orders have the same product and the execution restriction FOK (Fill-or-Kill). In case one of the orders cannot be executed, the whole list is not executed. The Linked Orders feature is configurable and might be turned off by EPEX.",
                    "required": false,
                    "type": "string",
                    "default": "VALID",
                    "enum": ["VALID", "LNKD"]
                }, {
                    "name": "internal_trading",
                    "in": "query",
                    "description": "set to true, internal matching will be performed before submitting the\norders to EPEX. \nset to false if you don't want internal matching\ndon't set it if the default market option (internal_trading) should determine if internal matching should be performed\n",
                    "required": false,
                    "type": "boolean"
                }, {
                    "in": "body",
                    "name": "order",
                    "required": true,
                    "schema": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "delivery_area": {
                                    "type": "string",
                                    "description": "The delivery area of the orderbook's product. Mandatory in a multi-delivery-area configuration"
                                },
                                "side": {
                                    "type": "string",
                                    "enum": ["SELL", "BUY"]
                                },
                                "prod": {
                                    "type": "string",
                                    "example": "Intraday_Power_D",
                                    "description": "The product of the order"
                                },
                                "quantity": {
                                    "type": "number",
                                    "format": "double",
                                    "example": 5.0,
                                    "description": "The quantity of the order in MW."
                                },
                                "price": {
                                    "type": "number",
                                    "format": "double",
                                    "example": 35.3,
                                    "description": "The price of ther order in the traded currency (usually EUR)"
                                },
                                "displayQty": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Used to define display quantity of an Iceberg Order. This field is required only in the case of type=’I’."
                                },
                                "contractId": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The contractId of the order, can be omitted if contractName is specified instead."
                                },
                                "contractName": {
                                    "type": "string",
                                    "description": "Set a contract name instead of the contractId, and the attempt is made to look up the contract via it's name. If contractId is set, the contractName field is ignored."
                                },
                                "clOrdrId": {
                                    "type": "string",
                                    "description": "the \"client order id\" which can be used to identify the order at a later point (i.e. within a trade)",
                                    "maxLength": 40
                                },
                                "clearingAcctType": {
                                    "type": "string",
                                    "description": "Defines if the order is entered on own account or as an agent. \nFor the set of valid values please refer to values from attribute allowedClearingAcctTypes in SystemInfoResp message (e.g. ”A,P” for spot markets)"
                                },
                                "ordrExeRestriction": {
                                    "type": "string",
                                    "description": "Execution restriction of the order.\n\n* NON: No restriction. This is the default.\n* FOK: (Fill or Kill) - The order is immediately fully executed or deleted.\n* IOC: (Immediate and cancel): The order is executed immediately to its maximum extent. In case of a partial execution, the remaining volume is removed from the order book.\n* AON: (All or None): The order must be filled completely or not at all. The order stays in the order book until it is executed or removed by the system or user. \n* AU (Auction): The order was entered in auction phase (no restriction is applied)",
                                    "enum": ["FOK", "IOC", "NON", "AON", "AU"],
                                    "default": "NON"
                                },
                                "preArranged": {
                                    "type": "boolean",
                                    "description": "Flag which indicates if the entered order is a pre-arranged order or not.",
                                    "default": false
                                },
                                "preArrangedAcct": {
                                    "type": "string",
                                    "description": "Required in case of a pre-arranged order. Contains the account of the counterpart."
                                },
                                "type": {
                                    "type": "string",
                                    "description": "* O: Regular limit order.\n* B: User defined block order.\n* I: Iceberg order.\n* L: Balance order.\n* C: Indicative order.\n* S: Stop limit order.\n* E: On exchange prearranged trade\n* N: Private and confidential trade\n* H: Lifting order for products with Hit & Lift matcher \n* Q: quote order\n* W: Indicative quote order",
                                    "enum": ["B", "O", "I", "L", "S", "H", "C", "N", "E"],
                                    "default": "O"
                                },
                                "validityRes": {
                                    "type": "string",
                                    "description": "Validity restriction of the order. \n* GFS (Good for trading session): The order rests in the order book until it is either executed, removed by the user or the current trading session (trading phase) of the underlying contract ends.\n* GTD (Good till date, will be introduced with CX 3.5): The order rests in the order book until the date specified in the validityDate field.\n* NON (No validity restriction): Mandatory for orders with the execution restriction “FOK” or “IOC”.",
                                    "enum": ["GFS", "GTD", "NON"],
                                    "default": "GFS"
                                },
                                "state": {
                                    "type": "string",
                                    "description": "* ACTI: The order is entered and immediately exposed to the market for execution. This is the default value.\n* HIBE: The order is entered into the backend system but not exposed to the market.",
                                    "enum": ["ACTI", "HIBE"]
                                },
                                "validityDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "mandatory in case of validityRes equals “GTD”. It is used to define the date until which the order is valid. \nThe remaining part of the order will be removed from the order book after this point in time."
                                },
                                "txt": {
                                    "type": "string",
                                    "description": "Text which can be retrieved at a later point (i.e. via a trade which was triggered by the order)",
                                    "maxLength": 250
                                },
                                "ppd": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Peak price delta for Iceberg orders.\n* The ppd of buy orders must be smaller or equal than zero.\n* The ppd of sell orders must be greater or equal than zero.\nIf it is omitted the system will assume a value of “0,00”."
                                },
                                "dlvryStart": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "(optional) Start of delivery of the underlying contract."
                                },
                                "dlvryEnd": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "(optional) End of delivery of the underlying contract."
                                }
                            },
                            "required": ["clearingAcctType", "price", "quantity"],
                            "x-swagger-router-model": "OrderEntry"
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "order_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "the unique id of the order. **Note** if you modify an order, the id will change!"
                                    },
                                    "api_timestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "the time (UTC) when Powerbot received the last update of the order"
                                    },
                                    "state": {
                                        "type": "string",
                                        "description": "The current state of the order in the system. \n* HIBE: The order is entered into the backend system but not exposed to the market.\n* ACTI: The order is entered and immediately exposed to the market for execution.\n* IACT: The order is deleted.",
                                        "enum": ["ACTI", "HIBE", "IACT"]
                                    },
                                    "delivery_area": {
                                        "type": "string",
                                        "description": "Defines the delivery area of the order."
                                    },
                                    "last_change_timestamp": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "buy": {
                                        "type": "boolean",
                                        "description": "Set to true if the order is a BUY order, false otherwise"
                                    },
                                    "sell": {
                                        "type": "boolean",
                                        "description": "set to true if the order is a SELL order, false otherwise"
                                    },
                                    "side": {
                                        "type": "string",
                                        "enum": ["SELL", "BUY"]
                                    },
                                    "contract_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "The contract_id of the order's underlying contract"
                                    },
                                    "contract_name": {
                                        "type": "string",
                                        "example": "07-008",
                                        "description": "The contract name of the order's underlying contract"
                                    },
                                    "delivery_start": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "the delivery start of the underlying contract."
                                    },
                                    "delivery_end": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "the delivery end of the underlying contract."
                                    },
                                    "clOrdrId": {
                                        "type": "string",
                                        "description": "The client's order number (if set during the placement of the order)"
                                    },
                                    "txt": {
                                        "type": "string",
                                        "description": "The client's custom text (if set during the placement of the order)"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "double",
                                        "example": "EUR",
                                        "description": "The price of the order in the contract's currency (usually EUR)"
                                    },
                                    "quantity": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 5.0,
                                        "description": "The quantity of the order (in the contract's quantity unit - usually MW)"
                                    },
                                    "action": {
                                        "type": "string",
                                        "description": "The action which has been carried out for the order\n* UADD: Order added by user.\n* UHIB: Order deactivated by user.\n* UMOD: Order modified by user.\n* UDEL: Order deleted by user.\n* UREJ: Pre-arranged order rejected by user.\n* AADD: Order added by market operations on behalf.\n* AHIB: Order deactivated by market operations on behalf. “AMOD”: Order modified by market operations on behalf.\n* ADEL: Order deleted by market operations on behalf.\n* AREJ: Pre-arranged order rejected by market operations on behalf.\n* SADD: Order added by the system.\n* SHIB: Order deactivated by the system. “SMOD”: Order modified by the system. “SDEL”: Order deleted by the system.\n* SREJ: Pre-arranged order rejected by system.\n* FEXE: Order is fully executed.\n* PEXE: Partial execution of order.\n* IADD: A new slice of an Iceberg order was added to the service.\n* QADD: Quote was added\n* QFEX: Quote was fully executed"
                                    },
                                    "details": {
                                        "type": "object",
                                        "description": "All details of the order (as received from the underlying backend system)",
                                        "properties": {}
                                    },
                                    "user_code": {
                                        "type": "string",
                                        "description": "the epex user code"
                                    }
                                },
                                "x-swagger-router-model": "OwnOrder"
                            }
                        },
                        "headers": {
                            "X-Total-Internal-Trades": {
                                "type": "integer",
                                "format": "int32",
                                "description": "total count of internal trades involved"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/orders/status": {
            "put": {
                "tags": ["Orders"],
                "summary": "Updates the status of all own orders at once",
                "operationId": "updateStatus",
                "parameters": [{
                    "in": "body",
                    "name": "orders",
                    "required": true,
                    "schema": {
                        "properties": {
                            "orderModType": {
                                "type": "string",
                                "description": "* ACTI: Activates the order. Ignored if already active.\n* DEAC: Deactivates (hibernates) the order. Hibernated orders are removed from the order book but are still available for modification or activation in the own orders list.\n* DELE: Delete the order",
                                "enum": ["ACTI", "DEAC", "DELE"]
                            },
                            "inclPreArranged": {
                                "type": "boolean",
                                "description": "Include pre-arranged orders (default = false)"
                            },
                            "prodName": {
                                "type": "array",
                                "description": "Restrict the request to the given product(s)",
                                "items": {
                                    "type": "string",
                                    "example": "Intraday_Power_D"
                                }
                            }
                        },
                        "x-swagger-router-model": "UpdateStatus"
                    }
                }],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/contract/{contract_id}/history": {
            "get": {
                "tags": ["Contract"],
                "summary": "Retrieves the history of the contract",
                "operationId": "getContractHistory",
                "parameters": [{
                    "name": "contract_id",
                    "in": "path",
                    "description": "The unique id of the contract",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }, {
                    "name": "delivery_area",
                    "in": "query",
                    "description": "The delivery area",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "from_revision",
                    "in": "query",
                    "description": "Revisions start with 0, each change increments it by 1",
                    "required": false,
                    "type": "integer",
                    "default": 0,
                    "format": "int64"
                }, {
                    "name": "with_details",
                    "in": "query",
                    "description": "If set to true, details about contract and trades are returned.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "as_of": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2018-04-05T09:00:00.000+0000",
                                        "description": "The timestamp as of the entry is valid"
                                    },
                                    "revisionNo": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 12,
                                        "description": "The running revision number of the entry"
                                    },
                                    "delivery_area": {
                                        "type": "string"
                                    },
                                    "contract_id": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "vwap": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 12.44,
                                        "description": "The volume weighted average price at that time"
                                    },
                                    "best_bid_price": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 12.4,
                                        "description": "The best bid's price at that time"
                                    },
                                    "best_bid_quantity": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 34.0,
                                        "description": "The best bid's quantity at that time"
                                    },
                                    "best_ask_price": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 18.4,
                                        "description": "The best ask's price at that time"
                                    },
                                    "best_ask_quantity": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The best asks's quantity at that time"
                                    },
                                    "last_price": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The price of the last trade at that time"
                                    },
                                    "last_quantity": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The quantity of the last trade at that time"
                                    },
                                    "total_quantity": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The total volume of the contract ot that time"
                                    },
                                    "auction_price": {
                                        "type": "number",
                                        "format": "double"
                                    },
                                    "high": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 60.2,
                                        "description": "Highest traded price since the start of the trading period at the current point in time."
                                    },
                                    "low": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 60.2,
                                        "description": "Lowest traded price since the start of the trading period at the current point in time."
                                    },
                                    "signals": {
                                        "type": "array",
                                        "description": "Signals valid as of the current point in time.",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "etrm_signal_2018-04-05T09:13:77Z",
                                                    "description": "The unique id of the signal (within the namespace of the emitting source)"
                                                },
                                                "source": {
                                                    "type": "string",
                                                    "example": "ETRMSystem",
                                                    "description": "The identifier of the system which emitted the signal"
                                                },
                                                "received_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2018-04-05T09:14:17.000+0000",
                                                    "description": "The timestamp when the signal was received by PowerBot"
                                                },
                                                "revision": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "The number of times the signal has been updated. If the signal has never received any updates, then revision is 0."
                                                },
                                                "delivery_start": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2018-04-05T09:14:17.000+0000",
                                                    "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                                                },
                                                "delivery_end": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2018-04-05T09:14:17.000+0000",
                                                    "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                                                },
                                                "value": {
                                                    "type": "object",
                                                    "example": {
                                                        "imbalance": 7,
                                                        "delivery_start": "2018-04-05T14:00:00Z",
                                                        "delivery_end": "2018-04-05T15:00:00Z"
                                                    },
                                                    "description": "The content of the signal",
                                                    "properties": {}
                                                }
                                            },
                                            "x-swagger-router-model": "Signal"
                                        }
                                    },
                                    "trades": {
                                        "type": "array",
                                        "description": "Lists the trades which occurred since the previous point in time.",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "trade_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 383234324234,
                                                    "description": "Unique trade_id"
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "example": "ACTI",
                                                    "description": "* CNCL: Trade was cancelled by market operations.\n* RREJ: Requested Recall was rejected by market operations.\n* RGRA: Requested Recall was granted by market operations.\n* RREQ: Recall of this trade was requested.\n* ACTI: Trade is active (this is the default value).\n* CREQ: cancel was requested from local market operations. \n* CREJ: cancel was rejected by global market operations.\n* RSFA: Request sent for approval to SOB (XBID).",
                                                    "enum": ["CNCL", "RREJ", "RGRA", "RREQ", "ACTI", "CREQ", "CREJ", "RSFA"]
                                                },
                                                "delivery_area": {
                                                    "type": "string",
                                                    "example": "10YAT-APG------L",
                                                    "description": "If you sold energy with this trade, delivery_area will contain the sell_delivery_area, otherwise the buy_delivery_area"
                                                },
                                                "api_timestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "The timestamp when powerbot received the trade (UTC time zone)"
                                                },
                                                "exec_time": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "The timestamp when the trade was executed (UTC time zone)"
                                                },
                                                "buy": {
                                                    "type": "boolean",
                                                    "description": "true if you bought energy"
                                                },
                                                "sell": {
                                                    "type": "boolean",
                                                    "example": false,
                                                    "description": "true if you sold energy"
                                                },
                                                "buy_order_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 6123942030,
                                                    "description": "the order_id of the underlying buy-order"
                                                },
                                                "buy_delivery_area": {
                                                    "type": "string",
                                                    "description": "The delivery area of the buy-side of the trade."
                                                },
                                                "buy_clOrderId": {
                                                    "type": "string",
                                                    "description": "the client order id of the buy order"
                                                },
                                                "buy_txt": {
                                                    "type": "string",
                                                    "description": "the custom text of the buy order"
                                                },
                                                "buy_user_code": {
                                                    "type": "string",
                                                    "description": "the buyer's epex user code"
                                                },
                                                "buy_member_id": {
                                                    "type": "string",
                                                    "description": "the buyer's epex member id"
                                                },
                                                "buy_aggressor_indicator": {
                                                    "type": "string",
                                                    "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                                    "enum": ["Y", "N", "U"]
                                                },
                                                "sell_order_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 28492342354,
                                                    "description": "The seller's order id"
                                                },
                                                "sell_delivery_area": {
                                                    "type": "string",
                                                    "example": "10YAT-APG------L",
                                                    "description": "delivery area of the sell order"
                                                },
                                                "sell_clOrderId": {
                                                    "type": "string",
                                                    "description": "The sell order's client id"
                                                },
                                                "sell_txt": {
                                                    "type": "string",
                                                    "description": "The sell order's custom text"
                                                },
                                                "sell_user_code": {
                                                    "type": "string",
                                                    "description": "The seller's epex user code"
                                                },
                                                "sell_member_id": {
                                                    "type": "string",
                                                    "description": "The seller's epex member id"
                                                },
                                                "sell_aggressor_indicator": {
                                                    "type": "string",
                                                    "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                                    "enum": ["Y", "N", "U"]
                                                },
                                                "contract_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 2342353242,
                                                    "description": "The contract_id against which the trade was executed"
                                                },
                                                "contract_name": {
                                                    "type": "string",
                                                    "example": "17-18",
                                                    "description": "The contract's name against which the trade was executed."
                                                },
                                                "delivery_start": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "Time when the delivery of this trade starts (UTC timezone)"
                                                },
                                                "delivery_end": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "Time when the delivery of this trade ends (UTC timezone)"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "example": 35.0,
                                                    "description": "Price of the trade"
                                                },
                                                "quantity": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "example": 5.0,
                                                    "description": "Quantity in MW of the trade"
                                                },
                                                "trade_details": {
                                                    "type": "object",
                                                    "description": "Details of the trade provided by EPEX, Please consult the \"DFS180 - M7 - Public Message Interface\" for details.",
                                                    "properties": {}
                                                },
                                                "contract_details": {
                                                    "type": "object",
                                                    "description": "Details of the trade provided by EPEX, Please consult the \"DFS180 - M7 - Public Message Interface\" for details.",
                                                    "properties": {}
                                                }
                                            },
                                            "x-swagger-router-model": "Trade"
                                        }
                                    },
                                    "internal_trades": {
                                        "type": "array",
                                        "description": "Lists the internal trades which occurred since the previous point in time.",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "internal_trade_id": {
                                                    "type": "string"
                                                },
                                                "delivery_area": {
                                                    "type": "string",
                                                    "example": "10YAT-APG------L",
                                                    "description": "If you sold energy with this trade, delivery_area will contain the sell_delivery_area, otherwise the buy_delivery_area"
                                                },
                                                "exec_time": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "The timestamp when the trade was executed (UTC time zone)"
                                                },
                                                "api_timestamp": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "buy_order_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 6123942030,
                                                    "description": "the order_id of the underlying buy-order. If the internal trade was matched with a new order, the id remains empty."
                                                },
                                                "buy_clOrderId": {
                                                    "type": "string",
                                                    "description": "the client order id of the buy order"
                                                },
                                                "buy_txt": {
                                                    "type": "string",
                                                    "description": "the custom text of the buy order"
                                                },
                                                "buy_aggressor_indicator": {
                                                    "type": "string",
                                                    "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                                    "enum": ["Y", "N", "U"]
                                                },
                                                "sell_order_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 28492342354,
                                                    "description": "The seller's order id. If the internal trade was matched with a new order, the id remains empty."
                                                },
                                                "sell_clOrderId": {
                                                    "type": "string",
                                                    "description": "The sell order's client id"
                                                },
                                                "sell_txt": {
                                                    "type": "string",
                                                    "description": "The sell order's custom text"
                                                },
                                                "sell_aggressor_indicator": {
                                                    "type": "string",
                                                    "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                                    "enum": ["Y", "N", "U"]
                                                },
                                                "contract_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 2342353242,
                                                    "description": "The contract_id against which the trade was executed"
                                                },
                                                "contract_name": {
                                                    "type": "string",
                                                    "example": "17-18",
                                                    "description": "The contract's name against which the trade was executed."
                                                },
                                                "delivery_start": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "Time when the delivery of this trade starts (UTC timezone)"
                                                },
                                                "delivery_end": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "description": "Time when the delivery of this trade ends (UTC timezone)"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "example": 35.0,
                                                    "description": "Price of the trade"
                                                },
                                                "quantity": {
                                                    "type": "number",
                                                    "format": "double",
                                                    "example": 5.0,
                                                    "description": "Quantity in MW of the trade"
                                                },
                                                "prod": {
                                                    "type": "string",
                                                    "description": "Product ID"
                                                }
                                            },
                                            "x-swagger-router-model": "InternalTrade"
                                        }
                                    }
                                },
                                "x-swagger-router-model": "ContractHistoryItem"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/contract/{contract_id}/publictrades": {
            "get": {
                "tags": ["Contract"],
                "summary": "Retrieves the public trades for the contract",
                "operationId": "getPublicTrades",
                "parameters": [{
                    "name": "offset",
                    "in": "query",
                    "description": "Offset when loading a list of items",
                    "required": false,
                    "type": "integer",
                    "default": 0,
                    "format": "int32"
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Limits the number of loaded items",
                    "required": false,
                    "type": "integer",
                    "default": 50,
                    "format": "int32"
                }, {
                    "name": "contract_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }, {
                    "name": "delivery_area",
                    "in": "query",
                    "description": "The delivery area",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "from_api_timestamp",
                    "in": "query",
                    "description": "from timestamp is 'inclusive' (i.e. >=)",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "to_api_timestamp",
                    "in": "query",
                    "description": "to timestamp is 'exclusive' (i.e. <)",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "trade_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 234235234,
                                        "description": "the uniqe id of the public trade"
                                    },
                                    "buy_delivery_area": {
                                        "type": "string"
                                    },
                                    "sell_delivery_area": {
                                        "type": "string"
                                    },
                                    "api_timestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (UTC) when Powerbot has received the information of the backend system"
                                    },
                                    "exec_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The timestamp (UTC) when the public trade was executed"
                                    },
                                    "contract_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 323455323,
                                        "description": "The id of the contract on which the public trade was executed"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 23.4,
                                        "description": "The price (usually in EUR, but depends on the contract) of the public trade"
                                    },
                                    "quantity": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 10.3,
                                        "description": "The quantity (usually in MW, but depends on the contract) of the public trade"
                                    }
                                },
                                "x-swagger-router-model": "PublicTrade"
                            }
                        },
                        "headers": {
                            "X-Total-Count": {
                                "type": "integer",
                                "format": "int32",
                                "description": "total count of trades"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/contract/{contract_id}/orders": {
            "get": {
                "tags": ["Contract"],
                "summary": "Retrieves the current bids and asks of the contract",
                "operationId": "getOrders",
                "parameters": [{
                    "name": "contract_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }, {
                    "name": "delivery_area",
                    "in": "query",
                    "description": "The delivery area",
                    "required": false,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "bid": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "order_id": {
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "delivery_area": {
                                                "type": "string"
                                            },
                                            "contract_id": {
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "order_entry_time": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "price": {
                                                "type": "number",
                                                "format": "double"
                                            },
                                            "quantity": {
                                                "type": "number",
                                                "format": "double"
                                            }
                                        },
                                        "x-swagger-router-model": "OrderBookEntry"
                                    }
                                },
                                "ask": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "order_id": {
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "delivery_area": {
                                                "type": "string"
                                            },
                                            "contract_id": {
                                                "type": "integer",
                                                "format": "int64"
                                            },
                                            "order_entry_time": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "price": {
                                                "type": "number",
                                                "format": "double"
                                            },
                                            "quantity": {
                                                "type": "number",
                                                "format": "double"
                                            }
                                        },
                                        "x-swagger-router-model": "OrderBookEntry"
                                    }
                                }
                            },
                            "x-swagger-router-model": "Orders"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/contracts": {
            "get": {
                "tags": ["Contract"],
                "summary": "Finding contracts",
                "operationId": "findContracts",
                "parameters": [{
                    "name": "contract_id",
                    "in": "query",
                    "required": false,
                    "type": "integer",
                    "format": "int64"
                }, {
                    "name": "delivery_start",
                    "in": "query",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "delivery_end",
                    "in": "query",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "product": {
                                        "type": "string"
                                    },
                                    "contract_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "example": 2352302523,
                                        "description": "The contract's unique id"
                                    },
                                    "revision_no": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "17-18",
                                        "description": "The name of the contract"
                                    },
                                    "delivery_start": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2018-04-05T09:00:00.000+0000",
                                        "description": "The delivery start time (UTC) of the contract"
                                    },
                                    "delivery_end": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2018-04-05T10:00:00.000+0000",
                                        "description": "The delivery end time (UTC) of the contract"
                                    },
                                    "contract_details": {
                                        "type": "object",
                                        "properties": {}
                                    },
                                    "relative_position": {
                                        "type": "number",
                                        "format": "double"
                                    },
                                    "absolute_position": {
                                        "type": "number",
                                        "format": "double"
                                    },
                                    "signals": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "etrm_signal_2018-04-05T09:13:77Z",
                                                    "description": "The unique id of the signal (within the namespace of the emitting source)"
                                                },
                                                "source": {
                                                    "type": "string",
                                                    "example": "ETRMSystem",
                                                    "description": "The identifier of the system which emitted the signal"
                                                },
                                                "received_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2018-04-05T09:14:17.000+0000",
                                                    "description": "The timestamp when the signal was received by PowerBot"
                                                },
                                                "revision": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "The number of times the signal has been updated. If the signal has never received any updates, then revision is 0."
                                                },
                                                "delivery_start": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2018-04-05T09:14:17.000+0000",
                                                    "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                                                },
                                                "delivery_end": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2018-04-05T09:14:17.000+0000",
                                                    "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                                                },
                                                "value": {
                                                    "type": "object",
                                                    "example": {
                                                        "imbalance": 7,
                                                        "delivery_start": "2018-04-05T14:00:00Z",
                                                        "delivery_end": "2018-04-05T15:00:00Z"
                                                    },
                                                    "description": "The content of the signal",
                                                    "properties": {}
                                                }
                                            },
                                            "x-swagger-router-model": "Signal"
                                        }
                                    }
                                },
                                "x-swagger-router-model": "ContractItem"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/order/{order_id}": {
            "put": {
                "tags": ["Orders"],
                "summary": "Modifies an existing order",
                "description": "Changes, activates or deactivates an existing order",
                "operationId": "modifyOrder",
                "parameters": [{
                    "name": "order_id",
                    "in": "path",
                    "description": "the unique order_id. **Heads up!** After an order has been modified, it will change its's order_id!",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                }, {
                    "in": "body",
                    "name": "modifications",
                    "required": false,
                    "schema": {
                        "required": ["action"],
                        "properties": {
                            "action": {
                                "type": "string",
                                "description": "* ACTI: Activates the order. Ignored if already active.\n* DEAC: Deactivates (hibernates) the order. Hibernated orders are removed from the order book but are still available for modification or activation in the own orders list.\n* MODI: Modify the order\n* DELE: Delete the order",
                                "enum": ["ACTI", "DEAC", "MODI", "DELE"]
                            },
                            "validityRes": {
                                "type": "string",
                                "description": "Set this field, if you want to update the validity restriction of the order\n* GFS (Good for trading session): The order stays in the order book until it is either executed, removed by the user or the current trading session (trading phase) of the underlying contract ends.\n* GTD (Good till date, will be introduced with CX 3.5): The order stays in the order book until the date specified in the validityDate field.\n* NON (No validity restriction): Mandatory for orders with the execution restriction “FOK” or “IOC”.",
                                "enum": ["GFS", "GTD", "NON"]
                            },
                            "validityDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Set this field, if you want to update the validity date of the order. Only mandatory in case of validityRes equals “GTD”. It is used to define the date until which the order is valid. \nThe remaining part of the order will be removed from the order book after this point in time."
                            },
                            "type": {
                                "type": "string",
                                "description": "Set this field, if you want to update the order's type.\n* O: Regular limit order.\n* B: User defined block order.\n* I: Iceberg order.\n* L: Balance order.\n* C: Indicative order.\n* S: Stop limit order.\n* E: On exchange prearranged trade\n* N: Private and confidential trade\n* H: Lifting order for products with Hit & Lift matcher \n* Q: quote order\n* W: Indicative quote order",
                                "enum": ["B", "O", "I", "L", "S", "H", "C", "N", "E"]
                            },
                            "txt": {
                                "type": "string",
                                "description": "Set this field if you want to update the order's 'custom text'",
                                "maxLength": 250
                            },
                            "ordrExeRestriction": {
                                "type": "string",
                                "description": "Set this field if you want to update the order's execution restriction\n* NON: No restriction. This is the default.\n* FOK: (Fill or Kill) - The order is immediately fully executed or deleted.\n* IOC: (Immediate and cancel): The order is executed immediately to its maximum extend. In case of a partial execution, the remaining volume is removed from the order book.\n* AON: (All or None): The order must be filled completely or not at all. The order stays in the order book until it is executed or removed by the system or user. \n* AU (Auction): The order was entered in auction phase (no restriction is applied)",
                                "enum": ["FOK", "IOC", "NON", "AON", "AU"]
                            },
                            "quantity": {
                                "type": "number",
                                "format": "double",
                                "description": "Set this field if you want to update the order's quantity."
                            },
                            "displayQty": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Set this field if you want to update the display quantity of an Iceberg Order. This field is required only in the case of type=’I’."
                            },
                            "price": {
                                "type": "number",
                                "format": "double",
                                "description": "Set this field if you want to update the order's description."
                            },
                            "clOrdrId": {
                                "type": "string",
                                "description": "Set this field if you want to update the order's client order id.",
                                "maxLength": 40
                            },
                            "ppd": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Set this field if you want to update the Peak price delta for Iceberg orders.\n* The ppd of buy orders must be smaller or equal than zero.\n* The ppd of sell orders must be greater or equal than zero.\nIf it is omitted the system will assume a value of “0,00”.\n "
                            }
                        },
                        "x-swagger-router-model": "OrderModify"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "order_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "the unique id of the order. **Note** if you modify an order, the id will change!"
                                    },
                                    "api_timestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "the time (UTC) when Powerbot received the last update of the order"
                                    },
                                    "state": {
                                        "type": "string",
                                        "description": "The current state of the order in the system. \n* HIBE: The order is entered into the backend system but not exposed to the market.\n* ACTI: The order is entered and immediately exposed to the market for execution.\n* IACT: The order is deleted.",
                                        "enum": ["ACTI", "HIBE", "IACT"]
                                    },
                                    "delivery_area": {
                                        "type": "string",
                                        "description": "Defines the delivery area of the order."
                                    },
                                    "last_change_timestamp": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "buy": {
                                        "type": "boolean",
                                        "description": "Set to true if the order is a BUY order, false otherwise"
                                    },
                                    "sell": {
                                        "type": "boolean",
                                        "description": "set to true if the order is a SELL order, false otherwise"
                                    },
                                    "side": {
                                        "type": "string",
                                        "enum": ["SELL", "BUY"]
                                    },
                                    "contract_id": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "The contract_id of the order's underlying contract"
                                    },
                                    "contract_name": {
                                        "type": "string",
                                        "example": "07-008",
                                        "description": "The contract name of the order's underlying contract"
                                    },
                                    "delivery_start": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "the delivery start of the underlying contract."
                                    },
                                    "delivery_end": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "the delivery end of the underlying contract."
                                    },
                                    "clOrdrId": {
                                        "type": "string",
                                        "description": "The client's order number (if set during the placement of the order)"
                                    },
                                    "txt": {
                                        "type": "string",
                                        "description": "The client's custom text (if set during the placement of the order)"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "double",
                                        "example": "EUR",
                                        "description": "The price of the order in the contract's currency (usually EUR)"
                                    },
                                    "quantity": {
                                        "type": "number",
                                        "format": "double",
                                        "example": 5.0,
                                        "description": "The quantity of the order (in the contract's quantity unit - usually MW)"
                                    },
                                    "action": {
                                        "type": "string",
                                        "description": "The action which has been carried out for the order\n* UADD: Order added by user.\n* UHIB: Order deactivated by user.\n* UMOD: Order modified by user.\n* UDEL: Order deleted by user.\n* UREJ: Pre-arranged order rejected by user.\n* AADD: Order added by market operations on behalf.\n* AHIB: Order deactivated by market operations on behalf. “AMOD”: Order modified by market operations on behalf.\n* ADEL: Order deleted by market operations on behalf.\n* AREJ: Pre-arranged order rejected by market operations on behalf.\n* SADD: Order added by the system.\n* SHIB: Order deactivated by the system. “SMOD”: Order modified by the system. “SDEL”: Order deleted by the system.\n* SREJ: Pre-arranged order rejected by system.\n* FEXE: Order is fully executed.\n* PEXE: Partial execution of order.\n* IADD: A new slice of an Iceberg order was added to the service.\n* QADD: Quote was added\n* QFEX: Quote was fully executed"
                                    },
                                    "details": {
                                        "type": "object",
                                        "description": "All details of the order (as received from the underlying backend system)",
                                        "properties": {}
                                    },
                                    "user_code": {
                                        "type": "string",
                                        "description": "the epex user code"
                                    }
                                },
                                "x-swagger-router-model": "OwnOrder"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/orderbooks": {
            "get": {
                "tags": ["Orders"],
                "summary": "Retrieves the public order books (sorted by delivery ascending)",
                "description": "Shows the public order books for the requested products (or all available products)",
                "operationId": "getOrderBooks",
                "parameters": [{
                    "name": "product",
                    "in": "query",
                    "description": "The list of products (e.g. Intraday_Power_D or Intraday_Power_D,XBID_Hour_Power) for which the orderbook(s) should be retrieved; leave blank if you want all available orderbooks",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "with_bid_or_ask_only",
                    "in": "query",
                    "description": "If set to true, the returned orderbook will contain only contracts which contain at least one active bid or ask",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }, {
                    "name": "contractId",
                    "in": "query",
                    "description": "limit the orderbook to a certain contract only",
                    "required": false,
                    "type": "integer",
                    "format": "int64"
                }, {
                    "name": "contractName",
                    "in": "query",
                    "description": "limit the orderbook to a certain contract name only",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "delivery_start",
                    "in": "query",
                    "description": "limit the orderbook to those contracts with the given delivery start date",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "delivery_end",
                    "in": "query",
                    "description": "limit the orderbook to those contracts with the given delivery end date",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "delivery_within",
                    "in": "query",
                    "description": "limit the orderbook to those contracts having a delivery start/end date which starts before and ends after the given parameter",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "past_hours",
                    "in": "query",
                    "description": "The number of hours to look behind in the orderbook. If this parameter is set, also historic closed contacts are contained in the orderbook",
                    "required": false,
                    "type": "integer",
                    "format": "int32"
                }, {
                    "name": "delivery_area",
                    "in": "query",
                    "description": "The delivery area of the orderbook",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "with_details",
                    "in": "query",
                    "description": "If set to true, details about contract and orderbook are returned.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Limits the number of returned order books",
                    "required": false,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "products": {
                                    "type": "array",
                                    "description": "The involved products of the orderbooks",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "product_name": {
                                                "type": "string",
                                                "example": "Intraday_Power_D",
                                                "description": "Name of the product"
                                            },
                                            "delivery_area": {
                                                "type": "string",
                                                "description": "The delivery area of the orderbook's product"
                                            },
                                            "price_currency": {
                                                "type": "string",
                                                "example": "EUR",
                                                "description": "the price currency of the underlying contracts"
                                            },
                                            "quantity_unit": {
                                                "type": "string",
                                                "example": "MW",
                                                "description": "the quantity unit of the underlying contracts"
                                            }
                                        },
                                        "x-swagger-router-model": "ProductInformation"
                                    }
                                },
                                "contracts": {
                                    "type": "array",
                                    "description": "The contracts of the orderbooks",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "product": {
                                                "type": "string",
                                                "example": "Intraday_Power_D",
                                                "description": "the contract's product"
                                            },
                                            "contract_id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 2352302523,
                                                "description": "The contract's unique id"
                                            },
                                            "state": {
                                                "type": "string",
                                                "description": "State of the contract",
                                                "enum": ["ACTI", "IACT"]
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "17-18",
                                                "description": "The name of the contract"
                                            },
                                            "delUnits": {
                                                "type": "number",
                                                "format": "double",
                                                "description": "Delivery unit of the respective product. In case of product with type User-Defined Delivery Period this attribute is stored only with contract."
                                            },
                                            "revision_no": {
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 1,
                                                "description": "A running number starting at 0; Every time the contract changes (i.e. a trade is made), this number increments."
                                            },
                                            "delivery_start": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2018-04-05T09:00:00.000+0000",
                                                "description": "The delivery start time (UTC) of the contract"
                                            },
                                            "delivery_end": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2018-04-05T10:00:00.000+0000",
                                                "description": "The delivery end time (UTC) of the contract"
                                            },
                                            "best_bid_price": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 18.2,
                                                "description": "The best bid's price in the orderbook's currency (i.e. EUR)"
                                            },
                                            "best_bid_quantity": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 3.0,
                                                "description": "The best bid's quantity in the orderbook's quantity unit (i.e. MW)"
                                            },
                                            "best_ask_price": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 20.4,
                                                "description": "The best asks's price in the orderbook's currency (i.e. EUR)"
                                            },
                                            "best_ask_quantity": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 4.0,
                                                "description": "The best asks's quantity in the orderbook's quantity unit (i.e. MW)"
                                            },
                                            "last_price": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 24.3,
                                                "description": "The price of the last trade (in the orderbook's currency)"
                                            },
                                            "last_quantity": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 15.3,
                                                "description": "The quantity of the last trade (in the orderbook's quantity unit)"
                                            },
                                            "total_quantity": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 332.3,
                                                "description": "The total volume of all trades (in the orderbook's quantity unit)"
                                            },
                                            "auction_price": {
                                                "type": "number",
                                                "format": "double"
                                            },
                                            "high": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 60.2,
                                                "description": "Highest traded price since the start of the trading period."
                                            },
                                            "low": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 4.3,
                                                "description": "Lowest traded price since the start of the trading period"
                                            },
                                            "contract_details": {
                                                "type": "object",
                                                "description": "All contract details (as delivered from the backend system)",
                                                "properties": {}
                                            },
                                            "orderbook_details": {
                                                "type": "object",
                                                "description": "All orderbook details (as delivered from the backend system)",
                                                "properties": {}
                                            },
                                            "relative_position": {
                                                "type": "number",
                                                "format": "double",
                                                "example": -3.0,
                                                "description": "Your relative position in the contract"
                                            },
                                            "absolute_position": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 3.0,
                                                "description": "Your absolute position in the contract"
                                            },
                                            "last_trade_time": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "signals": {
                                                "type": "array",
                                                "description": "The signals applicable for the contract",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "etrm_signal_2018-04-05T09:13:77Z",
                                                            "description": "The unique id of the signal (within the namespace of the emitting source)"
                                                        },
                                                        "source": {
                                                            "type": "string",
                                                            "example": "ETRMSystem",
                                                            "description": "The identifier of the system which emitted the signal"
                                                        },
                                                        "received_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2018-04-05T09:14:17.000+0000",
                                                            "description": "The timestamp when the signal was received by PowerBot"
                                                        },
                                                        "revision": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "description": "The number of times the signal has been updated. If the signal has never received any updates, then revision is 0."
                                                        },
                                                        "delivery_start": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2018-04-05T09:14:17.000+0000",
                                                            "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                                                        },
                                                        "delivery_end": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2018-04-05T09:14:17.000+0000",
                                                            "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                                                        },
                                                        "value": {
                                                            "type": "object",
                                                            "example": {
                                                                "imbalance": 7,
                                                                "delivery_start": "2018-04-05T14:00:00Z",
                                                                "delivery_end": "2018-04-05T15:00:00Z"
                                                            },
                                                            "description": "The content of the signal",
                                                            "properties": {}
                                                        }
                                                    },
                                                    "x-swagger-router-model": "Signal"
                                                }
                                            },
                                            "vwap": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 12.44,
                                                "description": "The volume weighted average"
                                            },
                                            "otr": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 20.33,
                                                "description": "otr ratio"
                                            },
                                            "avwa": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 12.44,
                                                "description": "Ask volume weighted average"
                                            },
                                            "bvwa": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 12.44,
                                                "description": "Bid volume weighted average"
                                            }
                                        },
                                        "x-swagger-router-model": "Contract"
                                    }
                                }
                            },
                            "x-swagger-router-model": "OrderBooks"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/orderbook/{product}": {
            "get": {
                "tags": ["Orders"],
                "summary": "Retrieves the public order book (sorted by delivery ascending)",
                "description": "Shows the public order book for the selected product containing the active bids/asks and the applicable signals",
                "operationId": "getOrderBook",
                "parameters": [{
                    "name": "product",
                    "in": "path",
                    "description": "The product (e.g. Intraday_Power_D) for which the orderbook should be retrieved",
                    "required": true,
                    "type": "string"
                }, {
                    "name": "with_bid_or_ask_only",
                    "in": "query",
                    "description": "If set to true, the returned orderbook will contain only contracts which contain at least one active bid or ask",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }, {
                    "name": "contractId",
                    "in": "query",
                    "description": "limit the orderbook to a certain contract only",
                    "required": false,
                    "type": "integer",
                    "format": "int64"
                }, {
                    "name": "contractName",
                    "in": "query",
                    "description": "limit the orderbook to a certain contract name only",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "delivery_start",
                    "in": "query",
                    "description": "limit the orderbook to those contracts with the given delivery start date",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "delivery_end",
                    "in": "query",
                    "description": "limit the orderbook to those contracts with the given delivery end date",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "delivery_within",
                    "in": "query",
                    "description": "limit the orderbook to those contracts having a delivery start/end date which starts before and ends after the given parameter",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "past_hours",
                    "in": "query",
                    "description": "The number of hours to look behind in the orderbook. If this parameter is set, also historic closed contacts are contained in the orderbook",
                    "required": false,
                    "type": "integer",
                    "format": "int32"
                }, {
                    "name": "delivery_area",
                    "in": "query",
                    "description": "The delivery area of the orderbook; Mandatory unless in a multi-delivery-area environment, and a default delivery area is configured in the market options.",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "with_details",
                    "in": "query",
                    "description": "If set to true, details about contract and orderbook are returned.",
                    "required": false,
                    "type": "boolean",
                    "default": false
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Limits the number of returned order books",
                    "required": false,
                    "type": "integer",
                    "format": "int32"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "product": {
                                    "type": "string",
                                    "example": "Intraday_Power_D",
                                    "description": "The orderbook's product"
                                },
                                "product_details": {
                                    "type": "object",
                                    "description": "The product's details (as delivered by the backend)",
                                    "properties": {}
                                },
                                "delivery_area": {
                                    "type": "string",
                                    "description": "The delivery area of the order book"
                                },
                                "price_currency": {
                                    "type": "string",
                                    "example": "EUR",
                                    "description": "the price currency of the underlying contracts"
                                },
                                "quantity_unit": {
                                    "type": "string",
                                    "example": "MW",
                                    "description": "the quantity unit of the underlying contracts"
                                },
                                "contracts": {
                                    "type": "array",
                                    "description": "The contracts of the orderbook",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "product": {
                                                "type": "string",
                                                "example": "Intraday_Power_D",
                                                "description": "the contract's product"
                                            },
                                            "contract_id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 2352302523,
                                                "description": "The contract's unique id"
                                            },
                                            "state": {
                                                "type": "string",
                                                "description": "State of the contract",
                                                "enum": ["ACTI", "IACT"]
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "17-18",
                                                "description": "The name of the contract"
                                            },
                                            "delUnits": {
                                                "type": "number",
                                                "format": "double",
                                                "description": "Delivery unit of the respective product. In case of product with type User-Defined Delivery Period this attribute is stored only with contract."
                                            },
                                            "revision_no": {
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 1,
                                                "description": "A running number starting at 0; Every time the contract changes (i.e. a trade is made), this number increments."
                                            },
                                            "delivery_start": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2018-04-05T09:00:00.000+0000",
                                                "description": "The delivery start time (UTC) of the contract"
                                            },
                                            "delivery_end": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2018-04-05T10:00:00.000+0000",
                                                "description": "The delivery end time (UTC) of the contract"
                                            },
                                            "best_bid_price": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 18.2,
                                                "description": "The best bid's price in the orderbook's currency (i.e. EUR)"
                                            },
                                            "best_bid_quantity": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 3.0,
                                                "description": "The best bid's quantity in the orderbook's quantity unit (i.e. MW)"
                                            },
                                            "best_ask_price": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 20.4,
                                                "description": "The best asks's price in the orderbook's currency (i.e. EUR)"
                                            },
                                            "best_ask_quantity": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 4.0,
                                                "description": "The best asks's quantity in the orderbook's quantity unit (i.e. MW)"
                                            },
                                            "last_price": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 24.3,
                                                "description": "The price of the last trade (in the orderbook's currency)"
                                            },
                                            "last_quantity": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 15.3,
                                                "description": "The quantity of the last trade (in the orderbook's quantity unit)"
                                            },
                                            "total_quantity": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 332.3,
                                                "description": "The total volume of all trades (in the orderbook's quantity unit)"
                                            },
                                            "auction_price": {
                                                "type": "number",
                                                "format": "double"
                                            },
                                            "high": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 60.2,
                                                "description": "Highest traded price since the start of the trading period."
                                            },
                                            "low": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 4.3,
                                                "description": "Lowest traded price since the start of the trading period"
                                            },
                                            "contract_details": {
                                                "type": "object",
                                                "description": "All contract details (as delivered from the backend system)",
                                                "properties": {}
                                            },
                                            "orderbook_details": {
                                                "type": "object",
                                                "description": "All orderbook details (as delivered from the backend system)",
                                                "properties": {}
                                            },
                                            "relative_position": {
                                                "type": "number",
                                                "format": "double",
                                                "example": -3.0,
                                                "description": "Your relative position in the contract"
                                            },
                                            "absolute_position": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 3.0,
                                                "description": "Your absolute position in the contract"
                                            },
                                            "last_trade_time": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "signals": {
                                                "type": "array",
                                                "description": "The signals applicable for the contract",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "etrm_signal_2018-04-05T09:13:77Z",
                                                            "description": "The unique id of the signal (within the namespace of the emitting source)"
                                                        },
                                                        "source": {
                                                            "type": "string",
                                                            "example": "ETRMSystem",
                                                            "description": "The identifier of the system which emitted the signal"
                                                        },
                                                        "received_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2018-04-05T09:14:17.000+0000",
                                                            "description": "The timestamp when the signal was received by PowerBot"
                                                        },
                                                        "revision": {
                                                            "type": "integer",
                                                            "format": "int32",
                                                            "description": "The number of times the signal has been updated. If the signal has never received any updates, then revision is 0."
                                                        },
                                                        "delivery_start": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2018-04-05T09:14:17.000+0000",
                                                            "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                                                        },
                                                        "delivery_end": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2018-04-05T09:14:17.000+0000",
                                                            "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                                                        },
                                                        "value": {
                                                            "type": "object",
                                                            "example": {
                                                                "imbalance": 7,
                                                                "delivery_start": "2018-04-05T14:00:00Z",
                                                                "delivery_end": "2018-04-05T15:00:00Z"
                                                            },
                                                            "description": "The content of the signal",
                                                            "properties": {}
                                                        }
                                                    },
                                                    "x-swagger-router-model": "Signal"
                                                }
                                            },
                                            "vwap": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 12.44,
                                                "description": "The volume weighted average"
                                            },
                                            "otr": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 20.33,
                                                "description": "otr ratio"
                                            },
                                            "avwa": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 12.44,
                                                "description": "Ask volume weighted average"
                                            },
                                            "bvwa": {
                                                "type": "number",
                                                "format": "double",
                                                "example": 12.44,
                                                "description": "Bid volume weighted average"
                                            }
                                        },
                                        "x-swagger-router-model": "Contract"
                                    }
                                }
                            },
                            "x-swagger-router-model": "OrderBook"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/market": {
            "get": {
                "tags": ["Market"],
                "summary": "Retrieves the status of the market",
                "operationId": "getStatus",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "api_timestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp when the status of the market was last checked."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The current state of the market\n* OK Everyhting's ok, trading is possible\n* WARNING Trading might not be possible, check the messages.\n* FAILURE Trading is not possible right now.        ",
                                    "enum": ["OK", "WARNING", "FAILURE"]
                                },
                                "options": {
                                    "type": "object",
                                    "properties": {
                                        "relative_position_limit": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Releative position limt (per contract)  in MW",
                                            "minimum": 0
                                        },
                                        "absolute_position_limit": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Absolute position limt (per contract)  in MW",
                                            "minimum": 0
                                        },
                                        "internal_trading": {
                                            "type": "string",
                                            "enum": ["inactive", "default_yes", "default_no"]
                                        },
                                        "default_delivery_area_id": {
                                            "type": "string",
                                            "description": "In multi-area configurations, set this option in case you want a default delivery area"
                                        }
                                    },
                                    "x-swagger-router-model": "MarketOptions"
                                },
                                "urls": {
                                    "type": "array",
                                    "description": "The urls of EPEX's backand system Powerbot is connected to",
                                    "items": {
                                        "type": "string",
                                        "example": "simu1.epex.m7.deutsche-boerse.com"
                                    }
                                },
                                "products": {
                                    "type": "array",
                                    "description": "EPEX products which powerbot is linked with",
                                    "items": {
                                        "type": "string",
                                        "example": "Intraday_Power_D"
                                    }
                                },
                                "market_area_id": {
                                    "type": "string",
                                    "description": "The market powerbot is configured to operate in"
                                },
                                "delivery_area_id": {
                                    "type": "string",
                                    "description": "The delivery areay powerbot is configured to operate in"
                                },
                                "available_delivery_area_ids": {
                                    "type": "array",
                                    "description": "The available delivery areas",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "session_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 23423423423,
                                    "description": "The current session id"
                                },
                                "logged_in_since": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-05T10:00:00.000+0000",
                                    "description": "The timstamp (UTC) since when Powerbot has logged-into the backend system"
                                },
                                "heartbeat_as_of": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-05T10:00:00.000+0000",
                                    "description": "The timestamp when the last heartbeat of the backend system has been received (should be not older than 5 seconds)"
                                },
                                "heartbeat_content": {
                                    "type": "string",
                                    "description": "The content of the last heartbeat"
                                },
                                "messages": {
                                    "type": "array",
                                    "description": "Messages explaining the state of the market",
                                    "items": {
                                        "type": "string",
                                        "example": "OK - trading is possible"
                                    }
                                }
                            },
                            "required": ["status"],
                            "x-swagger-router-model": "MarketStatus"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Market"],
                "summary": "Log into the market",
                "operationId": "login",
                "parameters": [{
                    "in": "body",
                    "name": "Credentials",
                    "required": true,
                    "schema": {
                        "properties": {
                            "password": {
                                "type": "string",
                                "format": "password",
                                "description": "The password provided by EPEX"
                            }
                        },
                        "x-swagger-router-model": "Credentials"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "api_timestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp when the status of the market was last checked."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The current state of the market\n* OK Everyhting's ok, trading is possible\n* WARNING Trading might not be possible, check the messages.\n* FAILURE Trading is not possible right now.        ",
                                    "enum": ["OK", "WARNING", "FAILURE"]
                                },
                                "options": {
                                    "type": "object",
                                    "properties": {
                                        "relative_position_limit": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Releative position limt (per contract)  in MW",
                                            "minimum": 0
                                        },
                                        "absolute_position_limit": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Absolute position limt (per contract)  in MW",
                                            "minimum": 0
                                        },
                                        "internal_trading": {
                                            "type": "string",
                                            "enum": ["inactive", "default_yes", "default_no"]
                                        },
                                        "default_delivery_area_id": {
                                            "type": "string",
                                            "description": "In multi-area configurations, set this option in case you want a default delivery area"
                                        }
                                    },
                                    "x-swagger-router-model": "MarketOptions"
                                },
                                "urls": {
                                    "type": "array",
                                    "description": "The urls of EPEX's backand system Powerbot is connected to",
                                    "items": {
                                        "type": "string",
                                        "example": "simu1.epex.m7.deutsche-boerse.com"
                                    }
                                },
                                "products": {
                                    "type": "array",
                                    "description": "EPEX products which powerbot is linked with",
                                    "items": {
                                        "type": "string",
                                        "example": "Intraday_Power_D"
                                    }
                                },
                                "market_area_id": {
                                    "type": "string",
                                    "description": "The market powerbot is configured to operate in"
                                },
                                "delivery_area_id": {
                                    "type": "string",
                                    "description": "The delivery areay powerbot is configured to operate in"
                                },
                                "available_delivery_area_ids": {
                                    "type": "array",
                                    "description": "The available delivery areas",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "session_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 23423423423,
                                    "description": "The current session id"
                                },
                                "logged_in_since": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-05T10:00:00.000+0000",
                                    "description": "The timstamp (UTC) since when Powerbot has logged-into the backend system"
                                },
                                "heartbeat_as_of": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-05T10:00:00.000+0000",
                                    "description": "The timestamp when the last heartbeat of the backend system has been received (should be not older than 5 seconds)"
                                },
                                "heartbeat_content": {
                                    "type": "string",
                                    "description": "The content of the last heartbeat"
                                },
                                "messages": {
                                    "type": "array",
                                    "description": "Messages explaining the state of the market",
                                    "items": {
                                        "type": "string",
                                        "example": "OK - trading is possible"
                                    }
                                }
                            },
                            "required": ["status"],
                            "x-swagger-router-model": "MarketStatus"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Market"],
                "summary": "Logout from the market",
                "operationId": "logout",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "api_timestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp when the status of the market was last checked."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The current state of the market\n* OK Everyhting's ok, trading is possible\n* WARNING Trading might not be possible, check the messages.\n* FAILURE Trading is not possible right now.        ",
                                    "enum": ["OK", "WARNING", "FAILURE"]
                                },
                                "options": {
                                    "type": "object",
                                    "properties": {
                                        "relative_position_limit": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Releative position limt (per contract)  in MW",
                                            "minimum": 0
                                        },
                                        "absolute_position_limit": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Absolute position limt (per contract)  in MW",
                                            "minimum": 0
                                        },
                                        "internal_trading": {
                                            "type": "string",
                                            "enum": ["inactive", "default_yes", "default_no"]
                                        },
                                        "default_delivery_area_id": {
                                            "type": "string",
                                            "description": "In multi-area configurations, set this option in case you want a default delivery area"
                                        }
                                    },
                                    "x-swagger-router-model": "MarketOptions"
                                },
                                "urls": {
                                    "type": "array",
                                    "description": "The urls of EPEX's backand system Powerbot is connected to",
                                    "items": {
                                        "type": "string",
                                        "example": "simu1.epex.m7.deutsche-boerse.com"
                                    }
                                },
                                "products": {
                                    "type": "array",
                                    "description": "EPEX products which powerbot is linked with",
                                    "items": {
                                        "type": "string",
                                        "example": "Intraday_Power_D"
                                    }
                                },
                                "market_area_id": {
                                    "type": "string",
                                    "description": "The market powerbot is configured to operate in"
                                },
                                "delivery_area_id": {
                                    "type": "string",
                                    "description": "The delivery areay powerbot is configured to operate in"
                                },
                                "available_delivery_area_ids": {
                                    "type": "array",
                                    "description": "The available delivery areas",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "session_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 23423423423,
                                    "description": "The current session id"
                                },
                                "logged_in_since": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-05T10:00:00.000+0000",
                                    "description": "The timstamp (UTC) since when Powerbot has logged-into the backend system"
                                },
                                "heartbeat_as_of": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-05T10:00:00.000+0000",
                                    "description": "The timestamp when the last heartbeat of the backend system has been received (should be not older than 5 seconds)"
                                },
                                "heartbeat_content": {
                                    "type": "string",
                                    "description": "The content of the last heartbeat"
                                },
                                "messages": {
                                    "type": "array",
                                    "description": "Messages explaining the state of the market",
                                    "items": {
                                        "type": "string",
                                        "example": "OK - trading is possible"
                                    }
                                }
                            },
                            "required": ["status"],
                            "x-swagger-router-model": "MarketStatus"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/market/options": {
            "post": {
                "tags": ["Market"],
                "summary": "Sets options for operating with the market",
                "operationId": "setMarketOptions",
                "parameters": [{
                    "in": "body",
                    "name": "Credentials",
                    "required": true,
                    "schema": {
                        "properties": {
                            "relative_position_limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Releative position limt (per contract)  in MW",
                                "minimum": 0
                            },
                            "absolute_position_limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Absolute position limt (per contract)  in MW",
                                "minimum": 0
                            },
                            "internal_trading": {
                                "type": "string",
                                "enum": ["inactive", "default_yes", "default_no"]
                            },
                            "default_delivery_area_id": {
                                "type": "string",
                                "description": "In multi-area configurations, set this option in case you want a default delivery area"
                            }
                        },
                        "x-swagger-router-model": "MarketOptions"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "api_timestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The timestamp when the status of the market was last checked."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The current state of the market\n* OK Everyhting's ok, trading is possible\n* WARNING Trading might not be possible, check the messages.\n* FAILURE Trading is not possible right now.        ",
                                    "enum": ["OK", "WARNING", "FAILURE"]
                                },
                                "options": {
                                    "type": "object",
                                    "properties": {
                                        "relative_position_limit": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Releative position limt (per contract)  in MW",
                                            "minimum": 0
                                        },
                                        "absolute_position_limit": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Absolute position limt (per contract)  in MW",
                                            "minimum": 0
                                        },
                                        "internal_trading": {
                                            "type": "string",
                                            "enum": ["inactive", "default_yes", "default_no"]
                                        },
                                        "default_delivery_area_id": {
                                            "type": "string",
                                            "description": "In multi-area configurations, set this option in case you want a default delivery area"
                                        }
                                    },
                                    "x-swagger-router-model": "MarketOptions"
                                },
                                "urls": {
                                    "type": "array",
                                    "description": "The urls of EPEX's backand system Powerbot is connected to",
                                    "items": {
                                        "type": "string",
                                        "example": "simu1.epex.m7.deutsche-boerse.com"
                                    }
                                },
                                "products": {
                                    "type": "array",
                                    "description": "EPEX products which powerbot is linked with",
                                    "items": {
                                        "type": "string",
                                        "example": "Intraday_Power_D"
                                    }
                                },
                                "market_area_id": {
                                    "type": "string",
                                    "description": "The market powerbot is configured to operate in"
                                },
                                "delivery_area_id": {
                                    "type": "string",
                                    "description": "The delivery areay powerbot is configured to operate in"
                                },
                                "available_delivery_area_ids": {
                                    "type": "array",
                                    "description": "The available delivery areas",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "session_id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": 23423423423,
                                    "description": "The current session id"
                                },
                                "logged_in_since": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-05T10:00:00.000+0000",
                                    "description": "The timstamp (UTC) since when Powerbot has logged-into the backend system"
                                },
                                "heartbeat_as_of": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-04-05T10:00:00.000+0000",
                                    "description": "The timestamp when the last heartbeat of the backend system has been received (should be not older than 5 seconds)"
                                },
                                "heartbeat_content": {
                                    "type": "string",
                                    "description": "The content of the last heartbeat"
                                },
                                "messages": {
                                    "type": "array",
                                    "description": "Messages explaining the state of the market",
                                    "items": {
                                        "type": "string",
                                        "example": "OK - trading is possible"
                                    }
                                }
                            },
                            "required": ["status"],
                            "x-swagger-router-model": "MarketStatus"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/market/notifications": {
            "get": {
                "tags": ["Market"],
                "summary": "Retrieves text notifications from market operations",
                "operationId": "getNotifications",
                "parameters": [{
                    "name": "offset",
                    "in": "query",
                    "description": "Offset when loading a list of items",
                    "required": false,
                    "type": "integer",
                    "default": 0,
                    "format": "int32"
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Limits the number of loaded items",
                    "required": false,
                    "type": "integer",
                    "default": 50,
                    "format": "int32"
                }, {
                    "name": "severity_at_least",
                    "in": "query",
                    "required": false,
                    "type": "string",
                    "default": "MED",
                    "enum": ["LOW", "MED", "HIG", "ERR", "URG"]
                }, {
                    "name": "from_api_timestamp",
                    "in": "query",
                    "description": "from timestamp is 'inclusive' (i.e. >=)",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "to_api_timestamp",
                    "in": "query",
                    "description": "to timestamp is 'exclusive' (i.e. <)",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "msg_id": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": ["PUBLIC", "PRIVATE"]
                                    },
                                    "code": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "epex_timestamp": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "api_timestamp": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "text": {
                                        "type": "string"
                                    },
                                    "severity": {
                                        "type": "string"
                                    }
                                },
                                "x-swagger-router-model": "Notification"
                            }
                        },
                        "headers": {
                            "X-Total-Count": {
                                "type": "integer",
                                "format": "int32",
                                "description": "total count of notifications"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        },
        "/messages": {
            "get": {
                "tags": ["Messages"],
                "summary": "Retrieve the communication with the market's backend system",
                "operationId": "getMessages",
                "parameters": [{
                    "name": "offset",
                    "in": "query",
                    "description": "Offset when loading a list of items",
                    "required": false,
                    "type": "integer",
                    "default": 0,
                    "format": "int32"
                }, {
                    "name": "limit",
                    "in": "query",
                    "description": "Limits the number of loaded items",
                    "required": false,
                    "type": "integer",
                    "default": 50,
                    "format": "int32"
                }, {
                    "name": "from_api_timestamp",
                    "in": "query",
                    "description": "from timestamp is 'inclusive' (i.e. >=)",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "to_api_timestamp",
                    "in": "query",
                    "description": "to timestamp is 'exclusive' (i.e. <)",
                    "required": false,
                    "type": "string",
                    "format": "date-time"
                }, {
                    "name": "message_class_is",
                    "in": "query",
                    "description": "A comma separated list of message classes. You can either use the fully qualified name (e.g. com.deutscheboerse.m7.trading.api.v6.PblcOrdrBooksDeltaRprt) or parts of it (e.g. PblcOrdrBooksDeltaRprt)",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "message_class_is_not",
                    "in": "query",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "correlation_id",
                    "in": "query",
                    "required": false,
                    "type": "string"
                }, {
                    "name": "sort_by",
                    "in": "query",
                    "required": false,
                    "type": "string",
                    "default": "apiTimeStamp ASC"
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "message_id": {
                                        "type": "string"
                                    },
                                    "api_timestamp": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "category": {
                                        "type": "string",
                                        "enum": ["INQUIRY_REQUEST", "MANAGEMENT_REQUEST", "RESPONSE", "BROADCAST"]
                                    },
                                    "message_class": {
                                        "type": "string"
                                    },
                                    "content_type": {
                                        "type": "string"
                                    },
                                    "correlation_id": {
                                        "type": "string"
                                    },
                                    "direction": {
                                        "type": "string",
                                        "enum": ["IN", "OUT"]
                                    },
                                    "group_id": {
                                        "type": "string"
                                    },
                                    "group_sequence": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "object",
                                        "properties": {}
                                    }
                                },
                                "x-swagger-router-model": "Message"
                            }
                        },
                        "headers": {
                            "X-Total-Count": {
                                "type": "integer",
                                "format": "int32",
                                "description": "total count of messages"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something happened",
                                    "description": "the reason for the error"
                                }
                            },
                            "required": ["message"],
                            "x-swagger-router-model": "ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "api_key_security": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "definitions": {
        "MarketStatus": {
            "required": ["status"],
            "properties": {
                "api_timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the status of the market was last checked."
                },
                "status": {
                    "type": "string",
                    "description": "The current state of the market\n* OK Everyhting's ok, trading is possible\n* WARNING Trading might not be possible, check the messages.\n* FAILURE Trading is not possible right now.        ",
                    "enum": ["OK", "WARNING", "FAILURE"]
                },
                "options": {
                    "type": "object",
                    "properties": {
                        "relative_position_limit": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Releative position limt (per contract)  in MW",
                            "minimum": 0
                        },
                        "absolute_position_limit": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Absolute position limt (per contract)  in MW",
                            "minimum": 0
                        },
                        "internal_trading": {
                            "type": "string",
                            "enum": ["inactive", "default_yes", "default_no"]
                        },
                        "default_delivery_area_id": {
                            "type": "string",
                            "description": "In multi-area configurations, set this option in case you want a default delivery area"
                        }
                    },
                    "x-swagger-router-model": "MarketOptions"
                },
                "urls": {
                    "type": "array",
                    "description": "The urls of EPEX's backand system Powerbot is connected to",
                    "items": {
                        "type": "string",
                        "example": "simu1.epex.m7.deutsche-boerse.com"
                    }
                },
                "products": {
                    "type": "array",
                    "description": "EPEX products which powerbot is linked with",
                    "items": {
                        "type": "string",
                        "example": "Intraday_Power_D"
                    }
                },
                "market_area_id": {
                    "type": "string",
                    "description": "The market powerbot is configured to operate in"
                },
                "delivery_area_id": {
                    "type": "string",
                    "description": "The delivery areay powerbot is configured to operate in"
                },
                "available_delivery_area_ids": {
                    "type": "array",
                    "description": "The available delivery areas",
                    "items": {
                        "type": "string"
                    }
                },
                "session_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 23423423423,
                    "description": "The current session id"
                },
                "logged_in_since": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-05T10:00:00.000+0000",
                    "description": "The timstamp (UTC) since when Powerbot has logged-into the backend system"
                },
                "heartbeat_as_of": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-05T10:00:00.000+0000",
                    "description": "The timestamp when the last heartbeat of the backend system has been received (should be not older than 5 seconds)"
                },
                "heartbeat_content": {
                    "type": "string",
                    "description": "The content of the last heartbeat"
                },
                "messages": {
                    "type": "array",
                    "description": "Messages explaining the state of the market",
                    "items": {
                        "type": "string",
                        "example": "OK - trading is possible"
                    }
                }
            }
        },
        "Message": {
            "properties": {
                "message_id": {
                    "type": "string"
                },
                "api_timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "category": {
                    "type": "string",
                    "enum": ["INQUIRY_REQUEST", "MANAGEMENT_REQUEST", "RESPONSE", "BROADCAST"]
                },
                "message_class": {
                    "type": "string"
                },
                "content_type": {
                    "type": "string"
                },
                "correlation_id": {
                    "type": "string"
                },
                "direction": {
                    "type": "string",
                    "enum": ["IN", "OUT"]
                },
                "group_id": {
                    "type": "string"
                },
                "group_sequence": {
                    "type": "string"
                },
                "content": {
                    "type": "object",
                    "properties": {}
                }
            }
        },
        "OrderBooks": {
            "properties": {
                "products": {
                    "type": "array",
                    "description": "The involved products of the orderbooks",
                    "items": {
                        "type": "object",
                        "properties": {
                            "product_name": {
                                "type": "string",
                                "example": "Intraday_Power_D",
                                "description": "Name of the product"
                            },
                            "delivery_area": {
                                "type": "string",
                                "description": "The delivery area of the orderbook's product"
                            },
                            "price_currency": {
                                "type": "string",
                                "example": "EUR",
                                "description": "the price currency of the underlying contracts"
                            },
                            "quantity_unit": {
                                "type": "string",
                                "example": "MW",
                                "description": "the quantity unit of the underlying contracts"
                            }
                        },
                        "x-swagger-router-model": "ProductInformation"
                    }
                },
                "contracts": {
                    "type": "array",
                    "description": "The contracts of the orderbooks",
                    "items": {
                        "type": "object",
                        "properties": {
                            "product": {
                                "type": "string",
                                "example": "Intraday_Power_D",
                                "description": "the contract's product"
                            },
                            "contract_id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 2352302523,
                                "description": "The contract's unique id"
                            },
                            "state": {
                                "type": "string",
                                "description": "State of the contract",
                                "enum": ["ACTI", "IACT"]
                            },
                            "name": {
                                "type": "string",
                                "example": "17-18",
                                "description": "The name of the contract"
                            },
                            "delUnits": {
                                "type": "number",
                                "format": "double",
                                "description": "Delivery unit of the respective product. In case of product with type User-Defined Delivery Period this attribute is stored only with contract."
                            },
                            "revision_no": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1,
                                "description": "A running number starting at 0; Every time the contract changes (i.e. a trade is made), this number increments."
                            },
                            "delivery_start": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-05T09:00:00.000+0000",
                                "description": "The delivery start time (UTC) of the contract"
                            },
                            "delivery_end": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-05T10:00:00.000+0000",
                                "description": "The delivery end time (UTC) of the contract"
                            },
                            "best_bid_price": {
                                "type": "number",
                                "format": "double",
                                "example": 18.2,
                                "description": "The best bid's price in the orderbook's currency (i.e. EUR)"
                            },
                            "best_bid_quantity": {
                                "type": "number",
                                "format": "double",
                                "example": 3.0,
                                "description": "The best bid's quantity in the orderbook's quantity unit (i.e. MW)"
                            },
                            "best_ask_price": {
                                "type": "number",
                                "format": "double",
                                "example": 20.4,
                                "description": "The best asks's price in the orderbook's currency (i.e. EUR)"
                            },
                            "best_ask_quantity": {
                                "type": "number",
                                "format": "double",
                                "example": 4.0,
                                "description": "The best asks's quantity in the orderbook's quantity unit (i.e. MW)"
                            },
                            "last_price": {
                                "type": "number",
                                "format": "double",
                                "example": 24.3,
                                "description": "The price of the last trade (in the orderbook's currency)"
                            },
                            "last_quantity": {
                                "type": "number",
                                "format": "double",
                                "example": 15.3,
                                "description": "The quantity of the last trade (in the orderbook's quantity unit)"
                            },
                            "total_quantity": {
                                "type": "number",
                                "format": "double",
                                "example": 332.3,
                                "description": "The total volume of all trades (in the orderbook's quantity unit)"
                            },
                            "auction_price": {
                                "type": "number",
                                "format": "double"
                            },
                            "high": {
                                "type": "number",
                                "format": "double",
                                "example": 60.2,
                                "description": "Highest traded price since the start of the trading period."
                            },
                            "low": {
                                "type": "number",
                                "format": "double",
                                "example": 4.3,
                                "description": "Lowest traded price since the start of the trading period"
                            },
                            "contract_details": {
                                "type": "object",
                                "description": "All contract details (as delivered from the backend system)",
                                "properties": {}
                            },
                            "orderbook_details": {
                                "type": "object",
                                "description": "All orderbook details (as delivered from the backend system)",
                                "properties": {}
                            },
                            "relative_position": {
                                "type": "number",
                                "format": "double",
                                "example": -3.0,
                                "description": "Your relative position in the contract"
                            },
                            "absolute_position": {
                                "type": "number",
                                "format": "double",
                                "example": 3.0,
                                "description": "Your absolute position in the contract"
                            },
                            "last_trade_time": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "signals": {
                                "type": "array",
                                "description": "The signals applicable for the contract",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "example": "etrm_signal_2018-04-05T09:13:77Z",
                                            "description": "The unique id of the signal (within the namespace of the emitting source)"
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "ETRMSystem",
                                            "description": "The identifier of the system which emitted the signal"
                                        },
                                        "received_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2018-04-05T09:14:17.000+0000",
                                            "description": "The timestamp when the signal was received by PowerBot"
                                        },
                                        "revision": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The number of times the signal has been updated. If the signal has never received any updates, then revision is 0."
                                        },
                                        "delivery_start": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2018-04-05T09:14:17.000+0000",
                                            "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                                        },
                                        "delivery_end": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2018-04-05T09:14:17.000+0000",
                                            "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                                        },
                                        "value": {
                                            "type": "object",
                                            "example": {
                                                "imbalance": 7,
                                                "delivery_start": "2018-04-05T14:00:00Z",
                                                "delivery_end": "2018-04-05T15:00:00Z"
                                            },
                                            "description": "The content of the signal",
                                            "properties": {}
                                        }
                                    },
                                    "x-swagger-router-model": "Signal"
                                }
                            },
                            "vwap": {
                                "type": "number",
                                "format": "double",
                                "example": 12.44,
                                "description": "The volume weighted average"
                            },
                            "otr": {
                                "type": "number",
                                "format": "double",
                                "example": 20.33,
                                "description": "otr ratio"
                            },
                            "avwa": {
                                "type": "number",
                                "format": "double",
                                "example": 12.44,
                                "description": "Ask volume weighted average"
                            },
                            "bvwa": {
                                "type": "number",
                                "format": "double",
                                "example": 12.44,
                                "description": "Bid volume weighted average"
                            }
                        },
                        "x-swagger-router-model": "Contract"
                    }
                }
            }
        },
        "ProductInformation": {
            "properties": {
                "product_name": {
                    "type": "string",
                    "example": "Intraday_Power_D",
                    "description": "Name of the product"
                },
                "delivery_area": {
                    "type": "string",
                    "description": "The delivery area of the orderbook's product"
                },
                "price_currency": {
                    "type": "string",
                    "example": "EUR",
                    "description": "the price currency of the underlying contracts"
                },
                "quantity_unit": {
                    "type": "string",
                    "example": "MW",
                    "description": "the quantity unit of the underlying contracts"
                }
            }
        },
        "OrderBook": {
            "properties": {
                "product": {
                    "type": "string",
                    "example": "Intraday_Power_D",
                    "description": "The orderbook's product"
                },
                "product_details": {
                    "type": "object",
                    "description": "The product's details (as delivered by the backend)",
                    "properties": {}
                },
                "delivery_area": {
                    "type": "string",
                    "description": "The delivery area of the order book"
                },
                "price_currency": {
                    "type": "string",
                    "example": "EUR",
                    "description": "the price currency of the underlying contracts"
                },
                "quantity_unit": {
                    "type": "string",
                    "example": "MW",
                    "description": "the quantity unit of the underlying contracts"
                },
                "contracts": {
                    "type": "array",
                    "description": "The contracts of the orderbook",
                    "items": {
                        "type": "object",
                        "properties": {
                            "product": {
                                "type": "string",
                                "example": "Intraday_Power_D",
                                "description": "the contract's product"
                            },
                            "contract_id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 2352302523,
                                "description": "The contract's unique id"
                            },
                            "state": {
                                "type": "string",
                                "description": "State of the contract",
                                "enum": ["ACTI", "IACT"]
                            },
                            "name": {
                                "type": "string",
                                "example": "17-18",
                                "description": "The name of the contract"
                            },
                            "delUnits": {
                                "type": "number",
                                "format": "double",
                                "description": "Delivery unit of the respective product. In case of product with type User-Defined Delivery Period this attribute is stored only with contract."
                            },
                            "revision_no": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1,
                                "description": "A running number starting at 0; Every time the contract changes (i.e. a trade is made), this number increments."
                            },
                            "delivery_start": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-05T09:00:00.000+0000",
                                "description": "The delivery start time (UTC) of the contract"
                            },
                            "delivery_end": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-05T10:00:00.000+0000",
                                "description": "The delivery end time (UTC) of the contract"
                            },
                            "best_bid_price": {
                                "type": "number",
                                "format": "double",
                                "example": 18.2,
                                "description": "The best bid's price in the orderbook's currency (i.e. EUR)"
                            },
                            "best_bid_quantity": {
                                "type": "number",
                                "format": "double",
                                "example": 3.0,
                                "description": "The best bid's quantity in the orderbook's quantity unit (i.e. MW)"
                            },
                            "best_ask_price": {
                                "type": "number",
                                "format": "double",
                                "example": 20.4,
                                "description": "The best asks's price in the orderbook's currency (i.e. EUR)"
                            },
                            "best_ask_quantity": {
                                "type": "number",
                                "format": "double",
                                "example": 4.0,
                                "description": "The best asks's quantity in the orderbook's quantity unit (i.e. MW)"
                            },
                            "last_price": {
                                "type": "number",
                                "format": "double",
                                "example": 24.3,
                                "description": "The price of the last trade (in the orderbook's currency)"
                            },
                            "last_quantity": {
                                "type": "number",
                                "format": "double",
                                "example": 15.3,
                                "description": "The quantity of the last trade (in the orderbook's quantity unit)"
                            },
                            "total_quantity": {
                                "type": "number",
                                "format": "double",
                                "example": 332.3,
                                "description": "The total volume of all trades (in the orderbook's quantity unit)"
                            },
                            "auction_price": {
                                "type": "number",
                                "format": "double"
                            },
                            "high": {
                                "type": "number",
                                "format": "double",
                                "example": 60.2,
                                "description": "Highest traded price since the start of the trading period."
                            },
                            "low": {
                                "type": "number",
                                "format": "double",
                                "example": 4.3,
                                "description": "Lowest traded price since the start of the trading period"
                            },
                            "contract_details": {
                                "type": "object",
                                "description": "All contract details (as delivered from the backend system)",
                                "properties": {}
                            },
                            "orderbook_details": {
                                "type": "object",
                                "description": "All orderbook details (as delivered from the backend system)",
                                "properties": {}
                            },
                            "relative_position": {
                                "type": "number",
                                "format": "double",
                                "example": -3.0,
                                "description": "Your relative position in the contract"
                            },
                            "absolute_position": {
                                "type": "number",
                                "format": "double",
                                "example": 3.0,
                                "description": "Your absolute position in the contract"
                            },
                            "last_trade_time": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "signals": {
                                "type": "array",
                                "description": "The signals applicable for the contract",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "example": "etrm_signal_2018-04-05T09:13:77Z",
                                            "description": "The unique id of the signal (within the namespace of the emitting source)"
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "ETRMSystem",
                                            "description": "The identifier of the system which emitted the signal"
                                        },
                                        "received_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2018-04-05T09:14:17.000+0000",
                                            "description": "The timestamp when the signal was received by PowerBot"
                                        },
                                        "revision": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The number of times the signal has been updated. If the signal has never received any updates, then revision is 0."
                                        },
                                        "delivery_start": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2018-04-05T09:14:17.000+0000",
                                            "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                                        },
                                        "delivery_end": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2018-04-05T09:14:17.000+0000",
                                            "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                                        },
                                        "value": {
                                            "type": "object",
                                            "example": {
                                                "imbalance": 7,
                                                "delivery_start": "2018-04-05T14:00:00Z",
                                                "delivery_end": "2018-04-05T15:00:00Z"
                                            },
                                            "description": "The content of the signal",
                                            "properties": {}
                                        }
                                    },
                                    "x-swagger-router-model": "Signal"
                                }
                            },
                            "vwap": {
                                "type": "number",
                                "format": "double",
                                "example": 12.44,
                                "description": "The volume weighted average"
                            },
                            "otr": {
                                "type": "number",
                                "format": "double",
                                "example": 20.33,
                                "description": "otr ratio"
                            },
                            "avwa": {
                                "type": "number",
                                "format": "double",
                                "example": 12.44,
                                "description": "Ask volume weighted average"
                            },
                            "bvwa": {
                                "type": "number",
                                "format": "double",
                                "example": 12.44,
                                "description": "Bid volume weighted average"
                            }
                        },
                        "x-swagger-router-model": "Contract"
                    }
                }
            }
        },
        "OwnOrder": {
            "properties": {
                "order_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "the unique id of the order. **Note** if you modify an order, the id will change!"
                },
                "api_timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "the time (UTC) when Powerbot received the last update of the order"
                },
                "state": {
                    "type": "string",
                    "description": "The current state of the order in the system. \n* HIBE: The order is entered into the backend system but not exposed to the market.\n* ACTI: The order is entered and immediately exposed to the market for execution.\n* IACT: The order is deleted.",
                    "enum": ["ACTI", "HIBE", "IACT"]
                },
                "delivery_area": {
                    "type": "string",
                    "description": "Defines the delivery area of the order."
                },
                "last_change_timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "buy": {
                    "type": "boolean",
                    "description": "Set to true if the order is a BUY order, false otherwise"
                },
                "sell": {
                    "type": "boolean",
                    "description": "set to true if the order is a SELL order, false otherwise"
                },
                "side": {
                    "type": "string",
                    "enum": ["SELL", "BUY"]
                },
                "contract_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The contract_id of the order's underlying contract"
                },
                "contract_name": {
                    "type": "string",
                    "example": "07-008",
                    "description": "The contract name of the order's underlying contract"
                },
                "delivery_start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "the delivery start of the underlying contract."
                },
                "delivery_end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "the delivery end of the underlying contract."
                },
                "clOrdrId": {
                    "type": "string",
                    "description": "The client's order number (if set during the placement of the order)"
                },
                "txt": {
                    "type": "string",
                    "description": "The client's custom text (if set during the placement of the order)"
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "example": "EUR",
                    "description": "The price of the order in the contract's currency (usually EUR)"
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "example": 5.0,
                    "description": "The quantity of the order (in the contract's quantity unit - usually MW)"
                },
                "action": {
                    "type": "string",
                    "description": "The action which has been carried out for the order\n* UADD: Order added by user.\n* UHIB: Order deactivated by user.\n* UMOD: Order modified by user.\n* UDEL: Order deleted by user.\n* UREJ: Pre-arranged order rejected by user.\n* AADD: Order added by market operations on behalf.\n* AHIB: Order deactivated by market operations on behalf. “AMOD”: Order modified by market operations on behalf.\n* ADEL: Order deleted by market operations on behalf.\n* AREJ: Pre-arranged order rejected by market operations on behalf.\n* SADD: Order added by the system.\n* SHIB: Order deactivated by the system. “SMOD”: Order modified by the system. “SDEL”: Order deleted by the system.\n* SREJ: Pre-arranged order rejected by system.\n* FEXE: Order is fully executed.\n* PEXE: Partial execution of order.\n* IADD: A new slice of an Iceberg order was added to the service.\n* QADD: Quote was added\n* QFEX: Quote was fully executed"
                },
                "details": {
                    "type": "object",
                    "description": "All details of the order (as received from the underlying backend system)",
                    "properties": {}
                },
                "user_code": {
                    "type": "string",
                    "description": "the epex user code"
                }
            }
        },
        "PublicTrade": {
            "properties": {
                "trade_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 234235234,
                    "description": "the uniqe id of the public trade"
                },
                "buy_delivery_area": {
                    "type": "string"
                },
                "sell_delivery_area": {
                    "type": "string"
                },
                "api_timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp (UTC) when Powerbot has received the information of the backend system"
                },
                "exec_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp (UTC) when the public trade was executed"
                },
                "contract_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 323455323,
                    "description": "The id of the contract on which the public trade was executed"
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "example": 23.4,
                    "description": "The price (usually in EUR, but depends on the contract) of the public trade"
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "example": 10.3,
                    "description": "The quantity (usually in MW, but depends on the contract) of the public trade"
                }
            }
        },
        "InternalTrade": {
            "properties": {
                "internal_trade_id": {
                    "type": "string"
                },
                "delivery_area": {
                    "type": "string",
                    "example": "10YAT-APG------L",
                    "description": "If you sold energy with this trade, delivery_area will contain the sell_delivery_area, otherwise the buy_delivery_area"
                },
                "exec_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the trade was executed (UTC time zone)"
                },
                "api_timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "buy_order_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 6123942030,
                    "description": "the order_id of the underlying buy-order. If the internal trade was matched with a new order, the id remains empty."
                },
                "buy_clOrderId": {
                    "type": "string",
                    "description": "the client order id of the buy order"
                },
                "buy_txt": {
                    "type": "string",
                    "description": "the custom text of the buy order"
                },
                "buy_aggressor_indicator": {
                    "type": "string",
                    "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                    "enum": ["Y", "N", "U"]
                },
                "sell_order_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 28492342354,
                    "description": "The seller's order id. If the internal trade was matched with a new order, the id remains empty."
                },
                "sell_clOrderId": {
                    "type": "string",
                    "description": "The sell order's client id"
                },
                "sell_txt": {
                    "type": "string",
                    "description": "The sell order's custom text"
                },
                "sell_aggressor_indicator": {
                    "type": "string",
                    "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                    "enum": ["Y", "N", "U"]
                },
                "contract_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2342353242,
                    "description": "The contract_id against which the trade was executed"
                },
                "contract_name": {
                    "type": "string",
                    "example": "17-18",
                    "description": "The contract's name against which the trade was executed."
                },
                "delivery_start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time when the delivery of this trade starts (UTC timezone)"
                },
                "delivery_end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time when the delivery of this trade ends (UTC timezone)"
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "example": 35.0,
                    "description": "Price of the trade"
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "example": 5.0,
                    "description": "Quantity in MW of the trade"
                },
                "prod": {
                    "type": "string",
                    "description": "Product ID"
                }
            }
        },
        "Trade": {
            "properties": {
                "trade_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 383234324234,
                    "description": "Unique trade_id"
                },
                "state": {
                    "type": "string",
                    "example": "ACTI",
                    "description": "* CNCL: Trade was cancelled by market operations.\n* RREJ: Requested Recall was rejected by market operations.\n* RGRA: Requested Recall was granted by market operations.\n* RREQ: Recall of this trade was requested.\n* ACTI: Trade is active (this is the default value).\n* CREQ: cancel was requested from local market operations. \n* CREJ: cancel was rejected by global market operations.\n* RSFA: Request sent for approval to SOB (XBID).",
                    "enum": ["CNCL", "RREJ", "RGRA", "RREQ", "ACTI", "CREQ", "CREJ", "RSFA"]
                },
                "delivery_area": {
                    "type": "string",
                    "example": "10YAT-APG------L",
                    "description": "If you sold energy with this trade, delivery_area will contain the sell_delivery_area, otherwise the buy_delivery_area"
                },
                "api_timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when powerbot received the trade (UTC time zone)"
                },
                "exec_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the trade was executed (UTC time zone)"
                },
                "buy": {
                    "type": "boolean",
                    "description": "true if you bought energy"
                },
                "sell": {
                    "type": "boolean",
                    "example": false,
                    "description": "true if you sold energy"
                },
                "buy_order_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 6123942030,
                    "description": "the order_id of the underlying buy-order"
                },
                "buy_delivery_area": {
                    "type": "string",
                    "description": "The delivery area of the buy-side of the trade."
                },
                "buy_clOrderId": {
                    "type": "string",
                    "description": "the client order id of the buy order"
                },
                "buy_txt": {
                    "type": "string",
                    "description": "the custom text of the buy order"
                },
                "buy_user_code": {
                    "type": "string",
                    "description": "the buyer's epex user code"
                },
                "buy_member_id": {
                    "type": "string",
                    "description": "the buyer's epex member id"
                },
                "buy_aggressor_indicator": {
                    "type": "string",
                    "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                    "enum": ["Y", "N", "U"]
                },
                "sell_order_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 28492342354,
                    "description": "The seller's order id"
                },
                "sell_delivery_area": {
                    "type": "string",
                    "example": "10YAT-APG------L",
                    "description": "delivery area of the sell order"
                },
                "sell_clOrderId": {
                    "type": "string",
                    "description": "The sell order's client id"
                },
                "sell_txt": {
                    "type": "string",
                    "description": "The sell order's custom text"
                },
                "sell_user_code": {
                    "type": "string",
                    "description": "The seller's epex user code"
                },
                "sell_member_id": {
                    "type": "string",
                    "description": "The seller's epex member id"
                },
                "sell_aggressor_indicator": {
                    "type": "string",
                    "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                    "enum": ["Y", "N", "U"]
                },
                "contract_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2342353242,
                    "description": "The contract_id against which the trade was executed"
                },
                "contract_name": {
                    "type": "string",
                    "example": "17-18",
                    "description": "The contract's name against which the trade was executed."
                },
                "delivery_start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time when the delivery of this trade starts (UTC timezone)"
                },
                "delivery_end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time when the delivery of this trade ends (UTC timezone)"
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "example": 35.0,
                    "description": "Price of the trade"
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "example": 5.0,
                    "description": "Quantity in MW of the trade"
                },
                "trade_details": {
                    "type": "object",
                    "description": "Details of the trade provided by EPEX, Please consult the \"DFS180 - M7 - Public Message Interface\" for details.",
                    "properties": {}
                },
                "contract_details": {
                    "type": "object",
                    "description": "Details of the trade provided by EPEX, Please consult the \"DFS180 - M7 - Public Message Interface\" for details.",
                    "properties": {}
                }
            }
        },
        "ContractHistoryItem": {
            "properties": {
                "as_of": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-05T09:00:00.000+0000",
                    "description": "The timestamp as of the entry is valid"
                },
                "revisionNo": {
                    "type": "integer",
                    "format": "int64",
                    "example": 12,
                    "description": "The running revision number of the entry"
                },
                "delivery_area": {
                    "type": "string"
                },
                "contract_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "vwap": {
                    "type": "number",
                    "format": "double",
                    "example": 12.44,
                    "description": "The volume weighted average price at that time"
                },
                "best_bid_price": {
                    "type": "number",
                    "format": "double",
                    "example": 12.4,
                    "description": "The best bid's price at that time"
                },
                "best_bid_quantity": {
                    "type": "number",
                    "format": "double",
                    "example": 34.0,
                    "description": "The best bid's quantity at that time"
                },
                "best_ask_price": {
                    "type": "number",
                    "format": "double",
                    "example": 18.4,
                    "description": "The best ask's price at that time"
                },
                "best_ask_quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "The best asks's quantity at that time"
                },
                "last_price": {
                    "type": "number",
                    "format": "double",
                    "description": "The price of the last trade at that time"
                },
                "last_quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "The quantity of the last trade at that time"
                },
                "total_quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "The total volume of the contract ot that time"
                },
                "auction_price": {
                    "type": "number",
                    "format": "double"
                },
                "high": {
                    "type": "number",
                    "format": "double",
                    "example": 60.2,
                    "description": "Highest traded price since the start of the trading period at the current point in time."
                },
                "low": {
                    "type": "number",
                    "format": "double",
                    "example": 60.2,
                    "description": "Lowest traded price since the start of the trading period at the current point in time."
                },
                "signals": {
                    "type": "array",
                    "description": "Signals valid as of the current point in time.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "example": "etrm_signal_2018-04-05T09:13:77Z",
                                "description": "The unique id of the signal (within the namespace of the emitting source)"
                            },
                            "source": {
                                "type": "string",
                                "example": "ETRMSystem",
                                "description": "The identifier of the system which emitted the signal"
                            },
                            "received_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-05T09:14:17.000+0000",
                                "description": "The timestamp when the signal was received by PowerBot"
                            },
                            "revision": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of times the signal has been updated. If the signal has never received any updates, then revision is 0."
                            },
                            "delivery_start": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-05T09:14:17.000+0000",
                                "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                            },
                            "delivery_end": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-05T09:14:17.000+0000",
                                "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                            },
                            "value": {
                                "type": "object",
                                "example": {
                                    "imbalance": 7,
                                    "delivery_start": "2018-04-05T14:00:00Z",
                                    "delivery_end": "2018-04-05T15:00:00Z"
                                },
                                "description": "The content of the signal",
                                "properties": {}
                            }
                        },
                        "x-swagger-router-model": "Signal"
                    }
                },
                "trades": {
                    "type": "array",
                    "description": "Lists the trades which occurred since the previous point in time.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "trade_id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 383234324234,
                                "description": "Unique trade_id"
                            },
                            "state": {
                                "type": "string",
                                "example": "ACTI",
                                "description": "* CNCL: Trade was cancelled by market operations.\n* RREJ: Requested Recall was rejected by market operations.\n* RGRA: Requested Recall was granted by market operations.\n* RREQ: Recall of this trade was requested.\n* ACTI: Trade is active (this is the default value).\n* CREQ: cancel was requested from local market operations. \n* CREJ: cancel was rejected by global market operations.\n* RSFA: Request sent for approval to SOB (XBID).",
                                "enum": ["CNCL", "RREJ", "RGRA", "RREQ", "ACTI", "CREQ", "CREJ", "RSFA"]
                            },
                            "delivery_area": {
                                "type": "string",
                                "example": "10YAT-APG------L",
                                "description": "If you sold energy with this trade, delivery_area will contain the sell_delivery_area, otherwise the buy_delivery_area"
                            },
                            "api_timestamp": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp when powerbot received the trade (UTC time zone)"
                            },
                            "exec_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp when the trade was executed (UTC time zone)"
                            },
                            "buy": {
                                "type": "boolean",
                                "description": "true if you bought energy"
                            },
                            "sell": {
                                "type": "boolean",
                                "example": false,
                                "description": "true if you sold energy"
                            },
                            "buy_order_id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 6123942030,
                                "description": "the order_id of the underlying buy-order"
                            },
                            "buy_delivery_area": {
                                "type": "string",
                                "description": "The delivery area of the buy-side of the trade."
                            },
                            "buy_clOrderId": {
                                "type": "string",
                                "description": "the client order id of the buy order"
                            },
                            "buy_txt": {
                                "type": "string",
                                "description": "the custom text of the buy order"
                            },
                            "buy_user_code": {
                                "type": "string",
                                "description": "the buyer's epex user code"
                            },
                            "buy_member_id": {
                                "type": "string",
                                "description": "the buyer's epex member id"
                            },
                            "buy_aggressor_indicator": {
                                "type": "string",
                                "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                "enum": ["Y", "N", "U"]
                            },
                            "sell_order_id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 28492342354,
                                "description": "The seller's order id"
                            },
                            "sell_delivery_area": {
                                "type": "string",
                                "example": "10YAT-APG------L",
                                "description": "delivery area of the sell order"
                            },
                            "sell_clOrderId": {
                                "type": "string",
                                "description": "The sell order's client id"
                            },
                            "sell_txt": {
                                "type": "string",
                                "description": "The sell order's custom text"
                            },
                            "sell_user_code": {
                                "type": "string",
                                "description": "The seller's epex user code"
                            },
                            "sell_member_id": {
                                "type": "string",
                                "description": "The seller's epex member id"
                            },
                            "sell_aggressor_indicator": {
                                "type": "string",
                                "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                "enum": ["Y", "N", "U"]
                            },
                            "contract_id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 2342353242,
                                "description": "The contract_id against which the trade was executed"
                            },
                            "contract_name": {
                                "type": "string",
                                "example": "17-18",
                                "description": "The contract's name against which the trade was executed."
                            },
                            "delivery_start": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time when the delivery of this trade starts (UTC timezone)"
                            },
                            "delivery_end": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time when the delivery of this trade ends (UTC timezone)"
                            },
                            "price": {
                                "type": "number",
                                "format": "double",
                                "example": 35.0,
                                "description": "Price of the trade"
                            },
                            "quantity": {
                                "type": "number",
                                "format": "double",
                                "example": 5.0,
                                "description": "Quantity in MW of the trade"
                            },
                            "trade_details": {
                                "type": "object",
                                "description": "Details of the trade provided by EPEX, Please consult the \"DFS180 - M7 - Public Message Interface\" for details.",
                                "properties": {}
                            },
                            "contract_details": {
                                "type": "object",
                                "description": "Details of the trade provided by EPEX, Please consult the \"DFS180 - M7 - Public Message Interface\" for details.",
                                "properties": {}
                            }
                        },
                        "x-swagger-router-model": "Trade"
                    }
                },
                "internal_trades": {
                    "type": "array",
                    "description": "Lists the internal trades which occurred since the previous point in time.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "internal_trade_id": {
                                "type": "string"
                            },
                            "delivery_area": {
                                "type": "string",
                                "example": "10YAT-APG------L",
                                "description": "If you sold energy with this trade, delivery_area will contain the sell_delivery_area, otherwise the buy_delivery_area"
                            },
                            "exec_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp when the trade was executed (UTC time zone)"
                            },
                            "api_timestamp": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "buy_order_id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 6123942030,
                                "description": "the order_id of the underlying buy-order. If the internal trade was matched with a new order, the id remains empty."
                            },
                            "buy_clOrderId": {
                                "type": "string",
                                "description": "the client order id of the buy order"
                            },
                            "buy_txt": {
                                "type": "string",
                                "description": "the custom text of the buy order"
                            },
                            "buy_aggressor_indicator": {
                                "type": "string",
                                "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                "enum": ["Y", "N", "U"]
                            },
                            "sell_order_id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 28492342354,
                                "description": "The seller's order id. If the internal trade was matched with a new order, the id remains empty."
                            },
                            "sell_clOrderId": {
                                "type": "string",
                                "description": "The sell order's client id"
                            },
                            "sell_txt": {
                                "type": "string",
                                "description": "The sell order's custom text"
                            },
                            "sell_aggressor_indicator": {
                                "type": "string",
                                "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                                "enum": ["Y", "N", "U"]
                            },
                            "contract_id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 2342353242,
                                "description": "The contract_id against which the trade was executed"
                            },
                            "contract_name": {
                                "type": "string",
                                "example": "17-18",
                                "description": "The contract's name against which the trade was executed."
                            },
                            "delivery_start": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time when the delivery of this trade starts (UTC timezone)"
                            },
                            "delivery_end": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time when the delivery of this trade ends (UTC timezone)"
                            },
                            "price": {
                                "type": "number",
                                "format": "double",
                                "example": 35.0,
                                "description": "Price of the trade"
                            },
                            "quantity": {
                                "type": "number",
                                "format": "double",
                                "example": 5.0,
                                "description": "Quantity in MW of the trade"
                            },
                            "prod": {
                                "type": "string",
                                "description": "Product ID"
                            }
                        },
                        "x-swagger-router-model": "InternalTrade"
                    }
                }
            }
        },
        "ContractItem": {
            "properties": {
                "product": {
                    "type": "string"
                },
                "contract_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2352302523,
                    "description": "The contract's unique id"
                },
                "revision_no": {
                    "type": "integer",
                    "format": "int64"
                },
                "state": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "17-18",
                    "description": "The name of the contract"
                },
                "delivery_start": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-05T09:00:00.000+0000",
                    "description": "The delivery start time (UTC) of the contract"
                },
                "delivery_end": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-05T10:00:00.000+0000",
                    "description": "The delivery end time (UTC) of the contract"
                },
                "contract_details": {
                    "type": "object",
                    "properties": {}
                },
                "relative_position": {
                    "type": "number",
                    "format": "double"
                },
                "absolute_position": {
                    "type": "number",
                    "format": "double"
                },
                "signals": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "example": "etrm_signal_2018-04-05T09:13:77Z",
                                "description": "The unique id of the signal (within the namespace of the emitting source)"
                            },
                            "source": {
                                "type": "string",
                                "example": "ETRMSystem",
                                "description": "The identifier of the system which emitted the signal"
                            },
                            "received_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-05T09:14:17.000+0000",
                                "description": "The timestamp when the signal was received by PowerBot"
                            },
                            "revision": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of times the signal has been updated. If the signal has never received any updates, then revision is 0."
                            },
                            "delivery_start": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-05T09:14:17.000+0000",
                                "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                            },
                            "delivery_end": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-05T09:14:17.000+0000",
                                "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                            },
                            "value": {
                                "type": "object",
                                "example": {
                                    "imbalance": 7,
                                    "delivery_start": "2018-04-05T14:00:00Z",
                                    "delivery_end": "2018-04-05T15:00:00Z"
                                },
                                "description": "The content of the signal",
                                "properties": {}
                            }
                        },
                        "x-swagger-router-model": "Signal"
                    }
                }
            }
        },
        "Contract": {
            "properties": {
                "product": {
                    "type": "string",
                    "example": "Intraday_Power_D",
                    "description": "the contract's product"
                },
                "contract_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2352302523,
                    "description": "The contract's unique id"
                },
                "state": {
                    "type": "string",
                    "description": "State of the contract",
                    "enum": ["ACTI", "IACT"]
                },
                "name": {
                    "type": "string",
                    "example": "17-18",
                    "description": "The name of the contract"
                },
                "delUnits": {
                    "type": "number",
                    "format": "double",
                    "description": "Delivery unit of the respective product. In case of product with type User-Defined Delivery Period this attribute is stored only with contract."
                },
                "revision_no": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1,
                    "description": "A running number starting at 0; Every time the contract changes (i.e. a trade is made), this number increments."
                },
                "delivery_start": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-05T09:00:00.000+0000",
                    "description": "The delivery start time (UTC) of the contract"
                },
                "delivery_end": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-05T10:00:00.000+0000",
                    "description": "The delivery end time (UTC) of the contract"
                },
                "best_bid_price": {
                    "type": "number",
                    "format": "double",
                    "example": 18.2,
                    "description": "The best bid's price in the orderbook's currency (i.e. EUR)"
                },
                "best_bid_quantity": {
                    "type": "number",
                    "format": "double",
                    "example": 3.0,
                    "description": "The best bid's quantity in the orderbook's quantity unit (i.e. MW)"
                },
                "best_ask_price": {
                    "type": "number",
                    "format": "double",
                    "example": 20.4,
                    "description": "The best asks's price in the orderbook's currency (i.e. EUR)"
                },
                "best_ask_quantity": {
                    "type": "number",
                    "format": "double",
                    "example": 4.0,
                    "description": "The best asks's quantity in the orderbook's quantity unit (i.e. MW)"
                },
                "last_price": {
                    "type": "number",
                    "format": "double",
                    "example": 24.3,
                    "description": "The price of the last trade (in the orderbook's currency)"
                },
                "last_quantity": {
                    "type": "number",
                    "format": "double",
                    "example": 15.3,
                    "description": "The quantity of the last trade (in the orderbook's quantity unit)"
                },
                "total_quantity": {
                    "type": "number",
                    "format": "double",
                    "example": 332.3,
                    "description": "The total volume of all trades (in the orderbook's quantity unit)"
                },
                "auction_price": {
                    "type": "number",
                    "format": "double"
                },
                "high": {
                    "type": "number",
                    "format": "double",
                    "example": 60.2,
                    "description": "Highest traded price since the start of the trading period."
                },
                "low": {
                    "type": "number",
                    "format": "double",
                    "example": 4.3,
                    "description": "Lowest traded price since the start of the trading period"
                },
                "contract_details": {
                    "type": "object",
                    "description": "All contract details (as delivered from the backend system)",
                    "properties": {}
                },
                "orderbook_details": {
                    "type": "object",
                    "description": "All orderbook details (as delivered from the backend system)",
                    "properties": {}
                },
                "relative_position": {
                    "type": "number",
                    "format": "double",
                    "example": -3.0,
                    "description": "Your relative position in the contract"
                },
                "absolute_position": {
                    "type": "number",
                    "format": "double",
                    "example": 3.0,
                    "description": "Your absolute position in the contract"
                },
                "last_trade_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "signals": {
                    "type": "array",
                    "description": "The signals applicable for the contract",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "example": "etrm_signal_2018-04-05T09:13:77Z",
                                "description": "The unique id of the signal (within the namespace of the emitting source)"
                            },
                            "source": {
                                "type": "string",
                                "example": "ETRMSystem",
                                "description": "The identifier of the system which emitted the signal"
                            },
                            "received_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-05T09:14:17.000+0000",
                                "description": "The timestamp when the signal was received by PowerBot"
                            },
                            "revision": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of times the signal has been updated. If the signal has never received any updates, then revision is 0."
                            },
                            "delivery_start": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-05T09:14:17.000+0000",
                                "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                            },
                            "delivery_end": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-04-05T09:14:17.000+0000",
                                "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                            },
                            "value": {
                                "type": "object",
                                "example": {
                                    "imbalance": 7,
                                    "delivery_start": "2018-04-05T14:00:00Z",
                                    "delivery_end": "2018-04-05T15:00:00Z"
                                },
                                "description": "The content of the signal",
                                "properties": {}
                            }
                        },
                        "x-swagger-router-model": "Signal"
                    }
                },
                "vwap": {
                    "type": "number",
                    "format": "double",
                    "example": 12.44,
                    "description": "The volume weighted average"
                },
                "otr": {
                    "type": "number",
                    "format": "double",
                    "example": 20.33,
                    "description": "otr ratio"
                },
                "avwa": {
                    "type": "number",
                    "format": "double",
                    "example": 12.44,
                    "description": "Ask volume weighted average"
                },
                "bvwa": {
                    "type": "number",
                    "format": "double",
                    "example": 12.44,
                    "description": "Bid volume weighted average"
                }
            }
        },
        "Orders": {
            "properties": {
                "bid": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "order_id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "delivery_area": {
                                "type": "string"
                            },
                            "contract_id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "order_entry_time": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "price": {
                                "type": "number",
                                "format": "double"
                            },
                            "quantity": {
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "x-swagger-router-model": "OrderBookEntry"
                    }
                },
                "ask": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "order_id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "delivery_area": {
                                "type": "string"
                            },
                            "contract_id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "order_entry_time": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "price": {
                                "type": "number",
                                "format": "double"
                            },
                            "quantity": {
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "x-swagger-router-model": "OrderBookEntry"
                    }
                }
            }
        },
        "OrderBookEntry": {
            "properties": {
                "order_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "delivery_area": {
                    "type": "string"
                },
                "contract_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "order_entry_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "UpdateStatus": {
            "properties": {
                "orderModType": {
                    "type": "string",
                    "description": "* ACTI: Activates the order. Ignored if already active.\n* DEAC: Deactivates (hibernates) the order. Hibernated orders are removed from the order book but are still available for modification or activation in the own orders list.\n* DELE: Delete the order",
                    "enum": ["ACTI", "DEAC", "DELE"]
                },
                "inclPreArranged": {
                    "type": "boolean",
                    "description": "Include pre-arranged orders (default = false)"
                },
                "prodName": {
                    "type": "array",
                    "description": "Restrict the request to the given product(s)",
                    "items": {
                        "type": "string",
                        "example": "Intraday_Power_D"
                    }
                }
            }
        },
        "OrderModify": {
            "required": ["action"],
            "properties": {
                "action": {
                    "type": "string",
                    "description": "* ACTI: Activates the order. Ignored if already active.\n* DEAC: Deactivates (hibernates) the order. Hibernated orders are removed from the order book but are still available for modification or activation in the own orders list.\n* MODI: Modify the order\n* DELE: Delete the order",
                    "enum": ["ACTI", "DEAC", "MODI", "DELE"]
                },
                "validityRes": {
                    "type": "string",
                    "description": "Set this field, if you want to update the validity restriction of the order\n* GFS (Good for trading session): The order stays in the order book until it is either executed, removed by the user or the current trading session (trading phase) of the underlying contract ends.\n* GTD (Good till date, will be introduced with CX 3.5): The order stays in the order book until the date specified in the validityDate field.\n* NON (No validity restriction): Mandatory for orders with the execution restriction “FOK” or “IOC”.",
                    "enum": ["GFS", "GTD", "NON"]
                },
                "validityDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Set this field, if you want to update the validity date of the order. Only mandatory in case of validityRes equals “GTD”. It is used to define the date until which the order is valid. \nThe remaining part of the order will be removed from the order book after this point in time."
                },
                "type": {
                    "type": "string",
                    "description": "Set this field, if you want to update the order's type.\n* O: Regular limit order.\n* B: User defined block order.\n* I: Iceberg order.\n* L: Balance order.\n* C: Indicative order.\n* S: Stop limit order.\n* E: On exchange prearranged trade\n* N: Private and confidential trade\n* H: Lifting order for products with Hit & Lift matcher \n* Q: quote order\n* W: Indicative quote order",
                    "enum": ["B", "O", "I", "L", "S", "H", "C", "N", "E"]
                },
                "txt": {
                    "type": "string",
                    "description": "Set this field if you want to update the order's 'custom text'",
                    "maxLength": 250
                },
                "ordrExeRestriction": {
                    "type": "string",
                    "description": "Set this field if you want to update the order's execution restriction\n* NON: No restriction. This is the default.\n* FOK: (Fill or Kill) - The order is immediately fully executed or deleted.\n* IOC: (Immediate and cancel): The order is executed immediately to its maximum extend. In case of a partial execution, the remaining volume is removed from the order book.\n* AON: (All or None): The order must be filled completely or not at all. The order stays in the order book until it is executed or removed by the system or user. \n* AU (Auction): The order was entered in auction phase (no restriction is applied)",
                    "enum": ["FOK", "IOC", "NON", "AON", "AU"]
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "Set this field if you want to update the order's quantity."
                },
                "displayQty": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Set this field if you want to update the display quantity of an Iceberg Order. This field is required only in the case of type=’I’."
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "description": "Set this field if you want to update the order's description."
                },
                "clOrdrId": {
                    "type": "string",
                    "description": "Set this field if you want to update the order's client order id.",
                    "maxLength": 40
                },
                "ppd": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Set this field if you want to update the Peak price delta for Iceberg orders.\n* The ppd of buy orders must be smaller or equal than zero.\n* The ppd of sell orders must be greater or equal than zero.\nIf it is omitted the system will assume a value of “0,00”.\n "
                }
            }
        },
        "OrderEntry": {
            "required": ["clearingAcctType", "price", "quantity"],
            "properties": {
                "delivery_area": {
                    "type": "string",
                    "description": "The delivery area of the orderbook's product. Mandatory in a multi-delivery-area configuration"
                },
                "side": {
                    "type": "string",
                    "enum": ["SELL", "BUY"]
                },
                "prod": {
                    "type": "string",
                    "example": "Intraday_Power_D",
                    "description": "The product of the order"
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "example": 5.0,
                    "description": "The quantity of the order in MW."
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "example": 35.3,
                    "description": "The price of ther order in the traded currency (usually EUR)"
                },
                "displayQty": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used to define display quantity of an Iceberg Order. This field is required only in the case of type=’I’."
                },
                "contractId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The contractId of the order, can be omitted if contractName is specified instead."
                },
                "contractName": {
                    "type": "string",
                    "description": "Set a contract name instead of the contractId, and the attempt is made to look up the contract via it's name. If contractId is set, the contractName field is ignored."
                },
                "clOrdrId": {
                    "type": "string",
                    "description": "the \"client order id\" which can be used to identify the order at a later point (i.e. within a trade)",
                    "maxLength": 40
                },
                "clearingAcctType": {
                    "type": "string",
                    "description": "Defines if the order is entered on own account or as an agent. \nFor the set of valid values please refer to values from attribute allowedClearingAcctTypes in SystemInfoResp message (e.g. ”A,P” for spot markets)"
                },
                "ordrExeRestriction": {
                    "type": "string",
                    "description": "Execution restriction of the order.\n\n* NON: No restriction. This is the default.\n* FOK: (Fill or Kill) - The order is immediately fully executed or deleted.\n* IOC: (Immediate and cancel): The order is executed immediately to its maximum extent. In case of a partial execution, the remaining volume is removed from the order book.\n* AON: (All or None): The order must be filled completely or not at all. The order stays in the order book until it is executed or removed by the system or user. \n* AU (Auction): The order was entered in auction phase (no restriction is applied)",
                    "enum": ["FOK", "IOC", "NON", "AON", "AU"],
                    "default": "NON"
                },
                "preArranged": {
                    "type": "boolean",
                    "description": "Flag which indicates if the entered order is a pre-arranged order or not.",
                    "default": false
                },
                "preArrangedAcct": {
                    "type": "string",
                    "description": "Required in case of a pre-arranged order. Contains the account of the counterpart."
                },
                "type": {
                    "type": "string",
                    "description": "* O: Regular limit order.\n* B: User defined block order.\n* I: Iceberg order.\n* L: Balance order.\n* C: Indicative order.\n* S: Stop limit order.\n* E: On exchange prearranged trade\n* N: Private and confidential trade\n* H: Lifting order for products with Hit & Lift matcher \n* Q: quote order\n* W: Indicative quote order",
                    "enum": ["B", "O", "I", "L", "S", "H", "C", "N", "E"],
                    "default": "O"
                },
                "validityRes": {
                    "type": "string",
                    "description": "Validity restriction of the order. \n* GFS (Good for trading session): The order rests in the order book until it is either executed, removed by the user or the current trading session (trading phase) of the underlying contract ends.\n* GTD (Good till date, will be introduced with CX 3.5): The order rests in the order book until the date specified in the validityDate field.\n* NON (No validity restriction): Mandatory for orders with the execution restriction “FOK” or “IOC”.",
                    "enum": ["GFS", "GTD", "NON"],
                    "default": "GFS"
                },
                "state": {
                    "type": "string",
                    "description": "* ACTI: The order is entered and immediately exposed to the market for execution. This is the default value.\n* HIBE: The order is entered into the backend system but not exposed to the market.",
                    "enum": ["ACTI", "HIBE"]
                },
                "validityDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "mandatory in case of validityRes equals “GTD”. It is used to define the date until which the order is valid. \nThe remaining part of the order will be removed from the order book after this point in time."
                },
                "txt": {
                    "type": "string",
                    "description": "Text which can be retrieved at a later point (i.e. via a trade which was triggered by the order)",
                    "maxLength": 250
                },
                "ppd": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Peak price delta for Iceberg orders.\n* The ppd of buy orders must be smaller or equal than zero.\n* The ppd of sell orders must be greater or equal than zero.\nIf it is omitted the system will assume a value of “0,00”."
                },
                "dlvryStart": {
                    "type": "string",
                    "format": "date-time",
                    "description": "(optional) Start of delivery of the underlying contract."
                },
                "dlvryEnd": {
                    "type": "string",
                    "format": "date-time",
                    "description": "(optional) End of delivery of the underlying contract."
                }
            }
        },
        "Credentials": {
            "properties": {
                "password": {
                    "type": "string",
                    "format": "password",
                    "description": "The password provided by EPEX"
                }
            }
        },
        "MarketOptions": {
            "properties": {
                "relative_position_limit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Releative position limt (per contract)  in MW",
                    "minimum": 0
                },
                "absolute_position_limit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Absolute position limt (per contract)  in MW",
                    "minimum": 0
                },
                "internal_trading": {
                    "type": "string",
                    "enum": ["inactive", "default_yes", "default_no"]
                },
                "default_delivery_area_id": {
                    "type": "string",
                    "description": "In multi-area configurations, set this option in case you want a default delivery area"
                }
            }
        },
        "Notification": {
            "properties": {
                "msg_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string",
                    "enum": ["PUBLIC", "PRIVATE"]
                },
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "epex_timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "api_timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "text": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                }
            }
        },
        "Signal": {
            "properties": {
                "id": {
                    "type": "string",
                    "example": "etrm_signal_2018-04-05T09:13:77Z",
                    "description": "The unique id of the signal (within the namespace of the emitting source)"
                },
                "source": {
                    "type": "string",
                    "example": "ETRMSystem",
                    "description": "The identifier of the system which emitted the signal"
                },
                "received_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-05T09:14:17.000+0000",
                    "description": "The timestamp when the signal was received by PowerBot"
                },
                "revision": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of times the signal has been updated. If the signal has never received any updates, then revision is 0."
                },
                "delivery_start": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-05T09:14:17.000+0000",
                    "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                },
                "delivery_end": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-04-05T09:14:17.000+0000",
                    "description": "Together with delivery_start and delivery_end specify the delivery period in which the signal is valid"
                },
                "value": {
                    "type": "object",
                    "example": {
                        "imbalance": 7,
                        "delivery_start": "2018-04-05T14:00:00Z",
                        "delivery_end": "2018-04-05T15:00:00Z"
                    },
                    "description": "The content of the signal",
                    "properties": {}
                }
            }
        },
        "LogEntry": {
            "required": ["as_of", "text"],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique id of the log entry",
                    "readOnly": true
                },
                "received": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the powerbot trading API has received the log entry. UTC timezone is used.",
                    "readOnly": true
                },
                "text": {
                    "type": "string",
                    "example": "Trading algorithm is starting...",
                    "description": "The content of your log entry"
                },
                "as_of": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Should be set to the time (UTC) when the log entry was emitted by your system"
                },
                "category": {
                    "type": "string",
                    "example": "Trading-Algorithm",
                    "description": "An optional category of the log entry"
                },
                "severity": {
                    "type": "string",
                    "description": "The severity of the log entry",
                    "enum": ["LOW", "MED", "HIG", "ERR", "URG"]
                }
            }
        },
        "ApiKeyDescription": {
            "required": ["name"],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "MY_TRADING_API_KEY",
                    "description": "A name for the API key, i.e. \"TRADING_API_KEY\""
                },
                "epex_password": {
                    "type": "string",
                    "example": "__password__",
                    "description": "Your EPEX password which you have received from the POWERSPOT market operation team."
                },
                "can_trade": {
                    "type": "boolean",
                    "description": "Set to true, if the api_key should be able to trade."
                },
                "can_signal": {
                    "type": "boolean",
                    "description": "Set to true, if the api_key should be allowed to submit signals"
                }
            }
        },
        "ApiKey": {
            "required": ["value"],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "MY_TRADING_API_KEY"
                },
                "value": {
                    "type": "string",
                    "example": "63c7f8fe-5b67-4d36-96b2-56613e67a25d"
                }
            }
        },
        "BulkSignal": {
            "required": ["id", "source", "value"],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "etrm_signal_2018-04-05T09:13:77Z",
                    "description": "The unique id of the signal (within the namespace of the emitting source)"
                },
                "source": {
                    "type": "string",
                    "example": "ETRMSystem",
                    "description": "The identifier of the system which emitted the signal"
                },
                "value": {
                    "type": "object",
                    "example": {
                        "imbalance": 7
                    },
                    "description": "The content of the signal",
                    "properties": {}
                },
                "delivery_start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "delivery_start together with delivery_end define the contract for which the signal is valid for."
                },
                "delivery_end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "delivery_start together with delivery_end define the contract for which the signal is valid for."
                }
            }
        },
        "BulkSignalResponse": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": ["OK", "ERROR"]
                },
                "status_text": {
                    "type": "string"
                }
            }
        },
        "NewInternalTrade": {
            "required": ["delivery_area", "exec_time", "price", "quantity"],
            "properties": {
                "delivery_area": {
                    "type": "string",
                    "example": "10YAT-APG------L",
                    "description": "If you sold energy with this trade, delivery_area will contain the sell_delivery_area, otherwise the buy_delivery_area"
                },
                "delivery_start": {
                    "type": "string",
                    "format": "date-time"
                },
                "delivery_end": {
                    "type": "string",
                    "format": "date-time"
                },
                "exec_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the trade was executed (UTC time zone)"
                },
                "buy_txt": {
                    "type": "string",
                    "description": "the custom text of the buy order"
                },
                "buy_aggressor_indicator": {
                    "type": "string",
                    "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                    "enum": ["Y", "N", "U"]
                },
                "sell_txt": {
                    "type": "string",
                    "description": "the custom text of the sell order"
                },
                "sell_aggressor_indicator": {
                    "type": "string",
                    "description": "Indicates whether the executed order was a trade aggressor or trade originator.  \n* Y - Trade aggressor\n* N - Trade originator\n* U - Unknown, for executed orders of remote products and data before migration    ",
                    "enum": ["Y", "N", "U"]
                },
                "contract_id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 2342353242,
                    "description": "The contract_id against which the trade was executed"
                },
                "price": {
                    "type": "number",
                    "format": "double",
                    "description": "Price of the trade"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "ErrorResponse": {
            "required": ["message"],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Something happened",
                    "description": "the reason for the error"
                }
            }
        }
    }
}